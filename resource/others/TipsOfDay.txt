
eit范围权限
常用字符串：

szvpn.coastal.com.cn

灰色样式

	<div style="filter:progid:DXImageTransform.Microsoft.engrave(bias=0.5);height:1;"> 
		<font title="没有操作权限">发起评价</font>
	</div>

<eb:right id="" />
mytest mytestsvn
	https://my-javaweb-project-demo.googlecode.com/svn
 <meta http-equiv="content-type" content="text/html;charset=utf-8"> 页面编码声明和存储编码一致

- border="2" bordercolor="green" 
- bordercolor="red" border="1"
230223198109172434 zhhxebuilds9
321081197410258115

session.get(*)*!=*null

**Dy5fg3ht9Pv5

StringUtils 工具类

D:\>find /v n bak.txt

111加密

698d51a19d8a121ce581499d7b701668 - MD5
6216f8a75fd5bb3d5f22b6f9958cdede3fc086c - SHA
6216f8a75fd5bb3d5f22b6f9958cdede3fc086c2 - SHA-1

//////////////////////////////////////////////////////////
重复提交处理

等待状态 ，处理中 状态 图片 ，比如点击 “返回” ，“保存”，“删除”等时：
	
	给页面的操作按钮标识设置如下：

		id="savesubmit"	保存
		id="resetsubmit"	重置
		id="backsubmit"	返回
		id="insertsubmit"	增加
		id="updatesubmit"	修改
		id="deletesubmit"	删除


	在操作按钮后面加上这个标签：

		<img id="loaderimg" name="loaderimg" src="<%=request.getContextPath()%>/themes/theme01/images/treelist/ajax-loader.gif" style="display:none"/>

	然后，在返回的js方法里，触发图片显示：
		function back() {
			document.location="<%=request.getContextPath()%>/pmmk/Subcontractsyndic_list.action?back=1";
			//加上这句js
			getloadsubmit(); 
		}
		...
		...
//////////////////////////////////////////////////////////
	
///
defy mb525 RSD android 2.2.*
http://www.wdsxp.com/moto-defymb525-update-2-2-4/
///

///
svn 密码修改
	Eclipse SVN插件的帐号、密码修改
		问题描述： 
		     Eclipse的SVN插件Subclipse做得很好，在svn操作方面提供了很强大丰富的功能。但到目前为止，该插件对svn用户的概念极为淡薄，不但不能方便地切换用户，而且一旦用户的帐号、密码保存之后，就无法再变更了。
		解决思路：
		     既然界面上不能进行修改，那就只有删除subclipse记录的帐号、密码信息，重新输入。
		具体步骤：
		     1. 查看你的Eclipse中使用的是什么SVN Interface，位置在
		windows > preference > Team > SVN
		       
		     2. 如果是用的JavaHL, 找到以下目录并删除目录下的文件.
		C:\"Documents and Settings"\[YourUserName]\"Application Data"\Subversion"\auth

		     3. 如果你用的SVNKit, 找到以下目录并删除.keyring文件.
		[eclipse_home]\"configuration"\org.eclipse.core.runtime


		4. 重新通过Subclipse访问svn，输入新的帐号即可。
		from: http://www.codesky.net/article/201008/118580.html
///
测试 :
杨天九 321081196902030032 华兴建设有限公司·核电事业部·宁德核电项目部·项目经理部 
临时 分包子系统增删改权限。

删除记录同时，删除附件：
	FileManager.delUploadFiles(ids, null);

<font color="gray" title="请先添加明细，再发流程">重新审批</font>
<font color="gray" title="请先添加明细，再发流程">发起审批</font>

input 错误提醒颜色 #ffe4c4 我佛山人

行标题样式:
	.input_table_title2{
		BACKGROUND-COLOR: #E0E0E0;
		height:1.5em;
		padding:0.5em;
		FONT-WEIGHT: bold;
		font-size: 1em;
	}
1819441289
cssClass="inputcss"
cssClass="disableinput" readonly="true"

上海长宁区仙霞路322号鑫达大厦1402 易建科技 200336

建邺区云龙山路79号 中核华兴主楼817室 210019

表格行不换行操作  

	<td align="left" nowrap="nowrap">
		<div style="width:25em;text-overflow:ellipsis;overflow: hidden;" title="<s:property value="content"/>">
			<a href="<%=request.getContextPath() %>/pm/Subcontractplandetail_view.action?txtseq=2&parentid=<s:property value="#request.parentid"/>&id=<s:property value="id"/>"><s:property value="content"/></a>
		</div>
	</td>

修改操作
<input type="button" value="  修改" onclick="update()" class="button_mod" onmouseout="this.className='button_mod'" onmouseover="this.className='button_mod2'"  />

function update()
{
document.location="<%=request.getContextPath()%>/pm/Bidinquiry_input.action?id=<s:property value="bidinquiry.id"/>";
}

480×854

edit plus 快捷：
 日期 ctrl+shift+d
type arrayName=new type[arraySize];
line : 
方向 业务开发或者平台底层技术（J2SE主要数据结构，算法等技术原理）
java 全而有细
思想
架构

邮件服务器的搭设 ：ebuiidls邮件服务，先配置，测试通过就可以接发邮件

//////////////
	下面一大块就是安装MyEclipse SVN 插件了 

	MyEclipse 6.X 

	6.x的操作比较简单，可通过官方提供的链接，利用MyEclipse内置的Find and Install功能来安装。 
	1) 打开Myeclipse，在菜单栏中选择Help→Software Updates→Find and Install； 
	2) 选择Search for new features to install，点击Next进入下一步； 
	3) 点击“New Remote Site”按钮，在弹出的对话框中输入： 
	       name：svn 
	       url：http://subclipse.tigris.org/update_1.4.x 
	       点击OK，关闭对话框，并点击Finish按钮，Myeclipse自动下载插件安装程序； 
	4) 下载完插件之后，进入安装画面。 
	5) 选择所要安装的SVN插件内容，这里去掉第二个选项Subclipse Integrations，点击下一步； 
	6) 选择 “I accept the terms in the license agreements”并点击Next，直到点击Finish即可，进入下一步。 
	7) 开始安装SVN插件，安装完成之后，重启Myeclipse。 
	以下为安装完成后的配置过程： 
	8) 在菜单栏中选择Window→Open Perspective→Other打开Myeclipse试图列表。这个时候Myeclipse的视图列表中，就出现了“SVN Repository Exploring”一项。 
	9) 打开“SVN Repository Exploring”视图。在左边空白区域，单击右键→New→Repository Location。 
	10) 在Url一栏中输入svn://localhost， 点击Finish按钮。 
	11) 输入用户名和密码，点击OK即可看到SVN下的目录结构了。 

	12) 可以再工程上依次单击 team-->share project... 依次 下一步 就可以了 
//////////////

//////////////
	申请了域名，还需要将域名和ip绑定，这样，通过域名就能访问你的ip对应的web站点了；
但多数情况是动态ip，所以要借助花生壳等工具实现域名和ip的绑定，具体搜索网络...
//////////////

//////////////
ant 导入 工程导入 开源
* 对于多数开源项目，一般都有ant支持，这样我们可以借助ant配置文件build.xml来把项目导入到
myeclipse中用于继续开发及其他运用。
	new project -> from existing ant build file 
	新建工程-从ant文件新建 （注意不是导入/import project）
//////////////


快速熟悉把握一个新系统的方法；
* debug那个过程？
* 从系统的sql输出看大致的数据走向 ，比如查看某个流程模板定义的输出，可大致看出这个流程模板在数据库里是怎样保存的，
在一张表还是几张表？
* 

	系统hibernate的mapping文件都是映射简单的值类型，不映射字段，表关联关系，数据库表也只体现基本的关系，其他关系都
依靠程序逻辑来维护。
	基于上面的设计，系统不针对每个dto进行存取，而是都转化为simpledata类，统一存取，取dto时，各自dto的dao层提供loadEnty方法
写好取dto的sql做为参数传递给util类统一读取对象，代码如下：
	
	-> Action：loadRegulations(id)
	-> Service：Regulations loadRegulations(id) 
	-> DAO：Regulations loadEnty(id) 
	-> util：SimpleData HibernateUtil.getUniqueDto(sql, hm)    // 强转为 Regulations，它是SimpleData的子类    【系统 dto SimpleData 】
		SimpleData 类的设计：是action里的各种dto对象，和数据库里的字段中间的桥梁，存取都是以SimpleData来操作，具体呈现出的dto由程序员
	控制。
		这里和mapping文件里只映射基本属性是相关的。

	hibernateUtils.java
	-----------
	...
		/**
		 * 按HPL查询dto对象，测试通过
		 * 
		 * @param sql
		 * @param where
		 * @return
		 */
		public static SimpleData getUniqueDto(String hql, HashMap where) {
			SimpleData simpleData = null;
			Session session = null;
			try {
				session = HibernateUtil.getSession();
				session.beginTransaction();
				Query q = session.createQuery(hql);
				if (where != null) {
					Iterator it = where.keySet().iterator();
					while (it.hasNext()) {
						String key = (String) it.next();
						q.setParameter(key, where.get(key));
					}
				}
				simpleData = (SimpleData) q.uniqueResult();
				session.getTransaction().commit();
			}catch (JDBCException ex) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(ex.getSQLException());
			} finally {
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
			return simpleData;
		}
	...
	-----------


系统 标签页 标签显示功能 【标签页】
看下面代码：
	providerinfoinc.jsp
	--------
	...
		<%@ page contentType="text/html; charset=UTF-8" language="java"%>
		<%@include	file="/common/inc.jsp"%>
		<%@ taglib prefix="s" uri="/struts-tags"%>
		<%@page import="com.frame.util.OptionDto"%>
		<%@page import="java.util.ArrayList"%>
		<%@page import="com.erp.util.Constant"%>
		<%
		 
		   ArrayList al=new ArrayList();
		   OptionDto ht=new OptionDto("集中供应商信息","dogo(1)");	
		   OptionDto ht2=new OptionDto("零星供应商信息","dogo(2)");
		   al.add(ht);
		   al.add(ht2);
		   request.setAttribute("titlist",al);
		%>
		<script language="javascript">
		function dogo(index){
			if (index==1){
				self.location.href="<%=request.getContextPath()%>/pm/Providerinfo_list.action?type=fragmental&txtseq="+index;
			}else if(index==2){
				self.location.href="<%=request.getContextPath()%>/pm/Providerinfo_list.action?type=massive&txtseq="+index;
			}
			
		 }
		 </script>
		 


	...
	--------
	
	上面的代码是每个list页面都要包含进来的jsp页，用于标签页显示，在这里配置标签页标题和指向的路径。txtseq=2 ，用来配置页签位置。


struts标签注意：<s:hidden name="providersuspendinfo.employee"/> 这里是通过name来取值的，不要把value写上，否则真就是那个value了，呵呵


////////////////////////////
struts标签：
#
单选按钮
	<s:radio  name="employee.status"  list="#{'2':'在职', '1':'离职','3':'退休','4':'试用','5':'退休返聘'}"   value="%{employee.status}"/>

	给默认值：
	<s:radio   name="employee.telissecret"  value="%{employee.telissecret==null?0:employee.telissecret}" list="#{'1':'是', '0':'否'}" disabled="true"/>
#
下拉框
	 <s:select  name="customer.propid"  cssClass="inputcss" list="#dict.getDictvalueList2('pm_customer_qyxz')" listKey="id"  listValue="name" value="%{customer.propid}"   required="true"   headerKey=""  headerValue="--请选择--"/>
———— 这里 listKey="id"  listValue="name" 就是取上面list的id作为键，取name作为值

	           <s:select  name="providerfb.type"  cssClass="selectcss" list="#{'1':'劳务分包','2':'专业分包'}" 
                value="%{providerfb.type}"   required="true"   headerKey=""  headerValue="--请选择--"/> 自定义
#
日期
<s:date name="signdate" format="yyyy-MM-dd" />
#
机构图片
            <img class="table_input_img"  src="<eb:img file='img_lookup.gif'/>" width="15" height="15" style="cursor:hand"  
             onClick="getSubcompany('contract.signunit','orgName');">


///////////////////////////
Struts2标签读取session和request中的值struts2 
jstl中

${request.userPasswd }

${sessionScope.userName}

<%request.getparameter( "pid ")%>

${param.pid} 

 

<s:property value="#request.userName" />

<s:set name="oid" value="#parameters.oid[0]" />
<s:set name="oid1" value="#parameters.oid[0].substring(0,#parameters.oid[0].indexOf(','))"></s:set>


 

<s:property value="#session.userPasswd" />

<s:property value="%{#session.UserSessionBean.userName}" />

///////////////////////////////
onchang方法不要忘了置空，否则触发不了onchang


//////////////////////////////// 表格行 操作代码
步骤：

* 引入下面公用的 tableedit.jsp  （有些被自定义了，要注意）
* 在jsp页插入下面2段代码。
* action里用LIST来封装，提供get/set方法

	private Invitebid invitebid;
	private List<Prepickproviderfb> Prepickproviderfbs;
* action 的input方法里，初始化
			invitebid  = new Invitebid();
			Prepickproviderfbs = new ArrayList<Prepickproviderfb>();

表格行 取 <%@include file="/common/tableedit.jsp"%> 的公用表格代码

（1）显示表格
	<div
		style=width:100%;overflow:auto;height:350px;padding:0px;position:absolutemargin:0px;">

		<table class=table_input width="100%" border="1" cellpadding="3"
			bordercolordark="#ffffff">
			<tr>
				<td class="table_input_td" width="10%">
					<input type="button" value=" 行操作" onclick="YourMenu(event,this)"
						class="button_line" onmouseout="this.className='button_line'"
						onmouseover="this.className='button_line2'" />
				</td>
				<td class="table_input_td" align="center" width="90%">
					<b>危险源步骤列表</b>
				</td>
			</tr>
			<tr>
				<td colspan="2">
					<table width="100%" border="0" align="center" cellpadding="2"
						cellspacing="1" class="td_list_border" id="t">
						<tbody id="tbl">
							<tr height="22">
								<td class="input_table_title" width="2%" height="22">
									&nbsp;&nbsp;
								</td>
								<td width="25%" align="center" class="input_table_title">
									<font color="red">*</font>步骤名称
								</td>
								<td width="15%" align="center" class="input_table_title">
									风险操作
								</td>
							
								<%
								int i = 0;
								%>
								<s:iterator value="risksteps" status="s" id="z">
									<tr height="22" class="td_list_background0"
										onmouseover="overrow(this)" onmouseout="outrow(this,0)"
										onclick="selectRow(this)">
										<td class="input_table_title" width="2%" nowrap>
											<s:hidden name="risksteps[%{#s.index}].id"
												id="risksteps[%{#s.index}].id" />
										</td>
										<td align="center" nowrap>
											<s:hidden name="risksteps[%{#s.index}].fileid" />
											<s:if test="riskfile.flowstatus==1">
											   
												<s:textfield cssClass="disableinput"
												name="risksteps[%{#s.index}].stepname"  />
											</s:if>
											<s:else>
											
												<s:textfield cssClass="inputcss"
												name="risksteps[%{#s.index}].stepname" />
											</s:else>
											
											
										</td>
										<s:if test="riskfile.flowstatus==1">
											<td align="center" nowrap>
												<input type="hidden"
													name="risksteps[<s:property value='%{#s.index}'/>].type"
													value="<s:property value='%{#s.index}'/>" />
												<a onclick="viewmin('<s:property value='risksteps[#s.index].id'/>')"  
												  style="cursor:hand">查看风险</a>
										 </td>
										</s:if>
										<s:else>
											<td align="center" nowrap>
												<input type="hidden"
													name="risksteps[<s:property value='%{#s.index}'/>].type"
													value="<s:property value='%{#s.index}'/>" />
												<a
													onclick="addMinRisk('<s:property value='%{#s.index}'/>',this,'<s:property value='risksteps[#s.index].id'/>' )"
													style="cursor:hand">增加/修改风险</a> ||
												<a onclick="viewmin('<s:property value='risksteps[#s.index].id'/>')"  
												  style="cursor:hand">查看风险</a>
										 </td>
										</s:else>
									
									</tr>
									<%
									i++;
									%>
								</s:iterator>
							</tr>
						</tbody>
					</table>
				</td>
			</tr>
		</table>
		<div id="detailid"></div>
		<input type="hidden" name="subindex" id="subindex" value="0" />
	</div>


（2）模板
<table id="templeteid" style="display:none">
	<tr height="22" class="td_list_background0" onmouseover="overrow(this)"
		onmouseout="outrow(this,0)" onclick="selectRow(this)">
		<td class="input_table_title" nowrap width="2%">
			<input type="hidden" name="risksteps[@sn].seq" />
		</td>
		<td align="center" nowrap>
			<s:hidden name="risksteps[@sn].id" id="risksteps[@sn].id" />
			<input type="hidden" name="risksteps[@sn].fileid" />
			<s:textfield name="risksteps[@sn].stepname" cssClass="inputcss"/>
			<input type="hidden" name="risksteps[@sn].type" value="@sn" />
		</td>
		<td align="center" nowrap>
			<a onclick="addMinRisk(@sn,this)" style="cursor:hand">增加/修改风险</a> ||
			<a onclick="viewmin('')"  style="cursor:hand">查看风险</a>
			
		</td>
</table>


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
assert 断言 处理部分校验：
	
	spring提供的工具类：

	方法入参检测工具类 

	Web 应用在接受表单提交的数据后都需要对其进行合法性检查，如果表单数据不合法，请求将被驳回。类似的，当我们在编写类的方法时，也常常需要对方法入参进行合法性检查，如果入参不符合要求，方法将通过抛出异常的方式拒绝后续处理。举一个例子：有一个根据文件名获取输入流的方法：InputStream getData(String file)，为了使方法能够成功执行，必须保证 file 入参不能为 null 或空白字符，否则根本无须进行后继的处理。这时方法的编写者通常会在方法体的最前面编写一段对入参进行检测的代码，如下所示： 

	public InputStream getData(String file) {
	    if (file == null || file.length() == 0|| file.replaceAll(" //s ", "").length() == 0) {
		throw new IllegalArgumentException("file入参不是有效的文件地址");
	    }
	…
	}
	  


	类似以上检测方法入参的代码是非常常见，但是在每个方法中都使用手工编写检测逻辑的方式并不是一个好主意。阅读 Spring 源码，您会发现 Spring 采用一个 org.springframework.util.Assert 通用类完成这一任务。 

	Assert 翻译为中文为“断言”，使用过 JUnit 的读者都熟知这个概念，它断定某一个实际的运行值和预期想一样，否则就抛出异常。Spring 对方法入参的检测借用了这个概念，其提供的 Assert 类拥有众多按规则对方法入参进行断言的方法，可以满足大部分方法入参检测的要求。这些断言方法在入参不满足要求时就会抛出 IllegalArgumentException。下面，我们来认识一下 Assert 类中的常用断言方法： 

	断言方法 说明 
	notNull(Object object)  当 object 不为 null 时抛出异常，notNull(Object object, String message) 方法允许您通过 message 定制异常信息。和 notNull() 方法断言规则相反的方法是 isNull(Object object)/isNull(Object object, String message)，它要求入参一定是 null； 
	isTrue(boolean expression) / isTrue(boolean expression, String message)  当 expression 不为 true 抛出异常； 
	notEmpty(Collection collection) / notEmpty(Collection collection, String message)  当集合未包含元素时抛出异常。notEmpty(Map map) / notEmpty(Map map, String message) 和 notEmpty(Object[] array, String message) / notEmpty(Object[] array, String message) 分别对 Map 和 Object[] 类型的入参进行判断； 
	hasLength(String text) / hasLength(String text, String message)  当 text 为 null 或长度为 0 时抛出异常； 
	hasText(String text) / hasText(String text, String message)  text 不能为 null 且必须至少包含一个非空格的字符，否则抛出异常； 
	isInstanceOf(Class clazz, Object obj) / isInstanceOf(Class type, Object obj, String message)  如果 obj 不能被正确造型为 clazz 指定的类将抛出异常； 
	isAssignable(Class superType, Class subType) / isAssignable(Class superType, Class subType, String message)  subType 必须可以按类型匹配于 superType，否则将抛出异常； 

	使用 Assert 断言类可以简化方法入参检测的代码，如 InputStream getData(String file) 在应用 Assert 断言类后，其代码可以简化为以下的形式： 

	public InputStream getData(String file){
	    Assert.hasText(file,"file入参不是有效的文件地址"); 
	    ① 使用 Spring 断言类进行方法入参检测
	…
	}
	  


	可见使用 Spring 的 Assert 替代自编码实现的入参检测逻辑后，方法的简洁性得到了不少的提高。Assert 不依赖于 Spring 容器，您可以大胆地在自己的应用中使用这个工具类 


apache + tomcat 整合 集群

	apache的配置文件 httpd.conf 配置文件是否正确，可以用自动的测试配置文件的程序来验证，以验证配置是否正确。


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day1 2010年8月9日

1 导入项目后，配置一些jar包
2 sql server数据库的使用，备份/还原等 - 选择数据库->任务->备份
3 一些项目管理软件的了解和使用。 cvs
版本控制软件的使用，了解
4 项目用jtas.jar作为sql server的jdbc驱动
5 项目的基本框架写好后，如果后续修改，应该记录备案。（按照一定规范）
6 ssl认证配置
7 项目大到几百M，启动要几十分钟时，系统的设计要考虑到测试的方便？ （调试方式启动+配置服务器内存大些 + ...）
8 待：
  日，周报表的总结；wyjs系统的熟悉；

系统架构1：
struts2 + hibernate + jsp+

几个网站： eip.ebuilds.net.cn / dev.ebuilds.net.cn

问题描述: 点击myeclipse的项目部署, 发现在project下拉框里 没有想要部署的项目
解决方案: 右键点击该项目,选择myeclipse---> Add Web Capabli....  (添加web项目)


2010-8-9

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day2 2010年8月10日

1 用debug分析系统的流程（重要-而不是输出打印来测试） 调试
先找到入口点，设置断点，debug查看。
因为是web应用，需要server下运行，在选择debug运行模式时，选择server模式。

也可以服务器运行在debug模式下，碰到断点会跟踪。如果不想调试 点 resume 按钮 ，等下次
又运行到断点又能调试。

myeclipse debug快捷方式：F5-step in F6-step over F7-return

【用debug调式，可以方便测出出错的位置，出错时的环境，参数等等 要熟练使用】

方法的调用层次，可以顺着逻辑走，也可以反查方法是由那些地方调用的 ，这都是IDE(myeclipse)提供的便利。

2 MyEclipse快捷工具 navigate-open source 快捷方式 CRTL+SHIFT+R
快速定位项目文件

* ctrl + h 搜索
* ctrl + o 快速定位 （quick outline）
* ctrl + shift + i 调试时查看变量或对象的值
* alt + 左右方向键 视图跳转

* 从MyEclipse的problems面板的输出看项目的问题，编译问题（jar包不对，缺失。。）等等。
* 设置jsp等内容的默认编辑器，在 File Association里设置

3 MyEclipse与cvs整合 比较文件修改的地方？
用comparewith命令与远程cvs服务器上的文件比较 ;用ReplaceWith替换本地文件。
先应该设置好cvs服务器，这样可以提交到服务器和用服务器的替换错误修改的文件。
这些个配置信息，都是在Myeclipse的工程项目配置信息里的。

* MyEclipse6.5 里 文件左边有个">"括号，表示修改了文件，即和cvs服务器上的不同，也许只是个空格。

CVS 冲突 提交：可以找到冲突点，拷贝下来，删除，更新了服务器的内容后在拷贝回去，然后提交即可。


---任务---
- 用debug看登录的流程
- 看 子系统切换-项目管控考核-技术质量 块 ：看流程 ，怎么实现的
- ？

4 模板技术 sitemash
<!-- 定义SiteMesh的核心过滤器 -->
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>
			com.opensymphony.module.sitemesh.filter.PageFilter
		</filter-class>
	</filter>

引用javaeye的一篇博文：
		一个网站，比如校内网，前端展示的页面总是有固定不变的地方，它们是：上部，左部，和底部，真正变化的内容，都是在
	中间产生的。 
		如果用jsp实现这种效果当然是可以的，到处是指令标签这样写起来分麻烦，而且一旦改动哪里，为了全局保持统一，到处都要
	改。为此，需要用一种好的解决方法，这就是SiteMesh框架，SiteMesh是基于Java、J2EE和XML的开源框架，依赖于从Servlet 2.3版本里
	引入的新功能——过滤器(Filters)，它的主要思想是装饰设计模式，把变化的和不变的分离开来，用不变的去修饰各种变化的内容。


SiteMesh使用了Decorator的设计模式.


5 struts2的分模块配置文件命名规则为 struts-*.xml (*代表各个命名空间) 比如：struts-emp.xml

并且这个命名空间，也是和子系统切换名对应的。

6 导项目是pm1项目


7 关于struts2配置action时，method属性的配置：
源于：对<action class="com.erp.portal.action.LayoutAction" method="{1}" name="Layout_*">配置的理解

参考：
-------------------------------
Wildcard Method

Many times, a set of action mappings will share a common pattern. For example, all your edit 
actions might start with the word "edit", and call the edit method on the Action class. The 
delete actions might use the same pattern, but call the delete method instead. 

Rather than code a separate mapping for each action class that uses this pattern, you can write 
it once as a wildcard mapping. 

<action name="*Crud" class="example.Crud" method="{1}">
    ...
Here, a reference to "editCrud" will call the edit method on an instance of the Crud Action class. 
Likewise, a reference to "deleteCrud" will call the delete method instead. 

Another common approach is to postfix the method name and set it off with an exclamation point (aka 
"bang"), underscore, or other special character. 

"action=Crud_input" 
"action=Crud_delete" 
To use a postfix wildcard, just move the asterisk and add an underscore.

<action name="Crud_*" class="example.Crud" method="{1}">
From the framework's perspective, a wildcard mapping creates a new "virtual" mapping with all the same 
attributes as a conventional, static mapping. As a result, you can use the expanded wildcard name as the
name of validation, type conversion, and message resource files, just as if it were an Action name (which it is!). 

Crud_input-validation.xml 
Crud_delete-conversion.xml 
 If Wildcard Method mapping uses a "Unable to render embedded object: File (" in the action name, the 
 Wildcard Method will overlap with another flexible approach to mapping, Dynamic Method Invocation. To
 use action names that include the ") not found." character, set struts.enable.DynamicMethodInvocation 
 to FALSE in the application configuration.  

----------from struts2 API

-------------------------------

项目里配置代码：
<action class="com.erp.portal.action.LayoutAction" method="{1}" name="Layout_*">
	<result name="view">/erp/portal/layoutview.jsp</result>
	<result name="input">/erp/portal/layoutinput.jsp</result>
	<result name="list">/erp/portal/layoutlist.jsp</result>
	<result name="listexcel">/erp/portal/layoutlistexcel.jsp</result>
	<result name="mylist">/erp/portal/layoutmylist.jsp</result>
	<result type="redirect-action">Layout_list?back=1</result>
</action>

这个action就用到了上面的 Wildcard Method，配置方式，本系统以这种方式配置的。

比如现在访问路径是：
http://localhost:8080/wyjs/portal/Layout_myview.action?userid=1&menuid=1

则struts2会找到LayoutAction里的myview()方法去执行。也就是以这种方式配置的action，struts2会根据配置文件及请求
的URI，找到要执行action的那个方法并执行。

比如上面：Layout_myview.action 则找到LayoutAction里的第一个匹配（由{1}决定）的myview（）方法执行。

支持这样配置的好处是：
struts2自动根据请求URI找到要执行的方法，而不需要在配置文件里，对action的多个方法的不同请求分别配置。
比如所有layout_*的访问都可以如上的 项目里配置代码 里配置一个就OK，然后根据不同的action请求的URI，分别调用方法.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day3 2010年8月11日

1 完成安排的工作 添加表单字段

* hibernate.cfg.xml和license.properties2个文件不要上传
* 



-> 参照其他功能 了解流程


根据 newsafficheinput.jsp 的表单页面修改 ，这个功能的表单页面 regulationsinput.jsp


-> 对regulationsinput.jsp增加的内容为：

<tr>
	<td align="right" class="table_input_td">
		<font color="red">*</font>可阅读组:
	</td>
	<td class="table_input_td2" colspan="3">
		<s:textarea name="allname" cols="60" rows="2" cssClass="textareacss"
			readonly="true" />
		<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
			width="15" height="15" style="cursor: hand;"
			onClick="getNewSendGroups('newsaffiche.readorgid','newsaffiche.readorgname','newsaffiche.readgroupids','newsaffiche.readgroupnames','allname')">
		<s:hidden name="newsaffiche.readorgid" />
		<s:hidden name="newsaffiche.readorgname" />
		<s:hidden name="newsaffiche.readgroupids" />
		<s:hidden name="newsaffiche.readgroupnames" />
	</td>
	<td class="table_input_td" align="left"></td>
</tr>
<tr>
	<td align="right" class="table_input_td">
		<font color="red">*</font>可阅读人:
	</td>
	<td class="table_input_td2" colspan="3">
		<s:textarea name="newsaffiche.readernames" cols="60" rows="2"
			cssClass="textareacss" readonly="true" />
		<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
			width="15" height="15" style="cursor: hand"
			onClick="getEmployees('newsaffiche.readerids','newsaffiche.readernames')" />
	</td>
	<td class="table_input_td"></td>
</tr>

-> 修改html标签属性 匹配 regulationsinput.jsp对应的action的数据
可阅读组：
	<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
		width="15" height="15" style="cursor: hand;"
		onClick="getNewSendGroups('newsaffiche.readorgid','newsaffiche.readorgname','newsaffiche.readgroupids','newsaffiche.readgroupnames','allname')">
	<s:hidden name="newsaffiche.readorgid" />
	<s:hidden name="newsaffiche.readorgname" />
	<s:hidden name="newsaffiche.readgroupids" />
	<s:hidden name="newsaffiche.readgroupnames" />
改为：
	<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
		width="15" height="15" style="cursor: hand;"
		onClick="getNewSendGroups('regulations.readorgid','regulations.readorgname','regulations.readgroupids','regulations.readgroupnames','allname')">
	<s:hidden name="regulations.readorgid" />
	<s:hidden name="regulations.readorgname" />
	<s:hidden name="regulations.readgroupids" />
	<s:hidden name="regulations.readgroupnames" />

可阅读人：
	<td class="table_input_td2" colspan="3">
		<s:textarea name="newsaffiche.readernames" cols="60" rows="2"
			cssClass="textareacss" readonly="true" />
		<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
			width="15" height="15" style="cursor: hand"
			onClick="getEmployees('newsaffiche.readerids','newsaffiche.readernames')" />
	</td>
改为：
	<td class="table_input_td2" colspan="3">
		<s:textarea name="regulations.readernames" cols="60" rows="2"
			cssClass="textareacss" readonly="true" />
		<img class="table_input_img" src="<eb:img file='img_lookup.gif'/>"
			width="15" height="15" style="cursor: hand"
			onClick="getEmployees('regulations.readerids','regulations.readernames')" />
	</td>


-> 标签属性修改后，对应的js验证代码也要修改；还要为一些新添加input元素用于存放数据。
【拷贝类似代码，要修改的地方注意下，比如js代码拷贝后，要把对象标识修改下等】
getEmployees() 定义在 wyjs/script/commonldialog_zn.js
getNewSendGroups() 定义在 wyjs/script/commonldialog_zn.js

function getEmployees(employeeids, employeenames,filter) {
修改后，这个js函数报 ：缺少对象
解决：
到这个函数的代码里看，
parm.push(new Array(document.all(employeeids).value, document.all(employeenames).value,filter));
上面的代码 ，是找到 employeeids对应的表单元素的，因为在regulationsinput.jsp里没有定义，故报错；加上表单元素，并添加验证js代码


-> 修改表单数据类 Regulations ,到 form的 数据对象 增加属性 ，在类的最后属性位置添加 【这些步骤，为写更新、修改记录用】
根据上面，要增加的属性为：
String readorgid ,String readorgname,String shareteamids,String shareteamnames,String shareempnames,String shareempids
-----参照 newsafficheinput.jsp的表单对象类 Newsaffiche.java 的属性数据类型。

【增加】：

private java.lang.String orgid;
 public void setOrgid(java.lang.String orgid ){
	 this.orgid=orgid;
	 addField("orgid");
 }
 public java.lang.String getOrgid(){
	 return this.orgid;
 }
 private java.lang.String readorgid;
 public void setReadorgid(java.lang.String readorgid ){
 this.readorgid=readorgid;
 addField("readorgid");
 }
 public java.lang.String getReadorgid(){
 return this.readorgid;
 }
 private java.lang.String readorgname;
 public void setReadorgname(java.lang.String readorgname ){
 this.readorgname=readorgname;
 addField("readorgname");
 }
 public java.lang.String getReadorgname(){
 return this.readorgname;
 }
 private java.lang.String shareteamids;
 public void setShareteamids(java.lang.String shareteamids ){
 this.shareteamids=shareteamids;
 addField("shareteamids");
 }
 public java.lang.String getShareteamids(){
 return this.shareteamids;
 }
 private java.lang.String shareteamnames;
 public void setShareteamnames(java.lang.String shareteamnames ){
 this.shareteamnames=shareteamnames;
 addField("shareteamnames");
 }
 public java.lang.String getShareteamnames(){
 return this.shareteamnames;
 }
 private java.lang.String shareempnames;
 public void setShareempnames(java.lang.String shareempnames ){
 this.shareempnames=shareempnames;
 addField("shareempnames");
 }
 public java.lang.String getShareempnames(){
 return this.shareempnames;
 }
 private java.lang.String shareempids;
 public void setShareempids(java.lang.String readerids ){
 this.shareempids=shareempids;
 addField("shareempids");
 }
 public java.lang.String getShareempids(){
 return this.shareempids;
 }

对copy方法也要修改，否则不能更新。

注：已在day4重新修改，上面可以忽略


并提供get/set方法，参照 Newsaffiche.java

-> /wyjs/oa/Regulations_doadd.action
找到form表单提交的action（经过上面的步骤，表单提交到的action就可以获得新增加的字段值了）
form提交地址为：
	action="/wyjs/oa/Regulations_doadd.action"

	<action class="com.erp.oa.issue.action.RegulationsAction" method="{1}" name="Regulations_*">
		<result name="view">/erp/oa/issue/regulationsview.jsp</result>
		<result name="input">/erp/oa/issue/regulationsinput.jsp</result>
		<result name="list">/erp/oa/issue/regulationslist.jsp</result>
		<result name="listexcel">/erp/oa/issue/regulationslistexcel.jsp</result>
		
		<!-- <result name="indexList">/erp/oa/issue/regulationsindexList.jsp</result> -->
		<result name="indexList">/common/frame.jsp</result>
		<result name="orgTree">/erp/oa/issue/regulationsorgTree.jsp</result>
		<result type="redirect-action">Regulations_list?back=1</result>
	</action>

-> （修改）RegulationsAction.class的doadd()方法

	public String doadd() {
	    regulations.setOrgid(this.getOrgid());
	    regulations.setCompanyid(getLoginInfo().getCompanyId());
	    regulations.setLastemployeeid(getLoginInfo().getEmployeeId());
	    regulations.setCreatedate(new Date());//创建时间
	    regulations.setLastdate(regulations.getCreatedate());//最后更新时间
		String refid=new RegulationsService().addRegulations(regulations);
		super.addFiles(refid);
		this.setOrgid(regulations.getOrgid());
		regulations=null;
		return SUCCESS;
	}

参照  newsafficheinput.jsp 页面中表单的提交action（NewsafficheAction.class）来修改这里的action的方法
他们是类似的，都有doadd()方法


分析后，对应表单增加的字段都已经字段set到Regulations对象里了，不需要手动set，故doadd()不修改

action里保存 数据代码：

String refid=new RegulationsService().addRegulations(regulations);

-> RegulationsService的regulationsDao.addEntry(o)方法 
	addEntry（）方法是继承自BaseDao的，声明为 ：
		public String addEntry(SimpleData data) {
	因为 Regulations是继承自SimpleData，所有向上转型后即可作为参数传入，并保存。
-> RegulationsDao（extends BaseDao）
-> BaseDao的addEntry(SimpleData data)方法 

	public String addEntry(SimpleData data) {
		Session session = HibernateUtil.getSession();
		try {
			session.beginTransaction();
			session.save(data);
			session.getTransaction().commit();
		} catch (JDBCException ex) {
			if (session != null) {
				session.getTransaction().rollback();
			}
			throw new MyException(ex.getSQLException());
		} finally {
			if (session != null && session.isOpen()) {
				session.close();
			}
		}
		return data.getId();
	}
-> （目前能保存成功，不过新的字段都没有在映射文件里设置，故还是原来的数据）
-> 修改 Regulations类对应的mapping配置文件 按照命名规则 应该为：Regulations.hbm.xml 
增加配置如下（根据上面对Regulations增加的属性）：

<property name="readorgid" type="java.lang.String" column="readorgid"/>
<property name="readorgname" type="java.lang.String" column="readorgname"/>

<property name="shareteamids" type="java.lang.String" column="shareteamids"/>
<property name="shareteamnames" type="java.lang.String" column="shareteamnames"/>

<property name="shareempids" type="java.lang.String" column="shareempids"/>
<property name="shareempnames" type="java.lang.String" column="shareempnames"/>
注：已在day4，重新修改，上面的忽略

【？注意：
按照任务要求 只要增加阅读组readgroupids和阅读人readerids 字段，而上面多添加了阅读部门readorgid（因为系统选择页面里，有
"选择组织机构"和"选择人员组"，如果只能选择一个的话，可以相应出去多的字段）】

-> 根据mapping文件找到 数据库表 
	Regulations.hbm.xml 对应的表为：T_OA_Regulations

-> 向T_OA_Regulations表添加如下字段（按照上面mapping的配置添加）：

shareteamids varchar(8000)
shareteamnames varchar(8000)
shareempids varchar(8000)
shareempnames varchar(8000)
readorgid varchar(8000)
readorgname varchar(8000)

添加 sql脚本：

alter table t_oa_regulations add shareteamids varchar(8000);
alter table t_oa_regulations add shareteamnames varchar(8000);
alter table t_oa_regulations add shareempids varchar(8000);
alter table t_oa_regulations add shareempnames varchar(8000);
alter table t_oa_regulations add readorgid varchar(8000);
alter table t_oa_regulations add readorgname varchar(8000);
注：以在day4进行了修改。

-> 
-> 
-> 
-> 
-> 

>>>>上面是数据录入并存入数据库流程 下面是把表单提交的Regulations对象（规章制度）保存好后，到显示页面的流程：<<<<

-> action 返回 "success"
	<action class="com.erp.oa.issue.action.RegulationsAction" method="{1}" name="Regulations_*">
		<result name="view">/erp/oa/issue/regulationsview.jsp</result>
		<result name="input">/erp/oa/issue/regulationsinput.jsp</result>
		<result name="list">/erp/oa/issue/regulationslist.jsp</result>
		<result name="listexcel">/erp/oa/issue/regulationslistexcel.jsp</result>
		
		<!-- <result name="indexList">/erp/oa/issue/regulationsindexList.jsp</result> -->
		<result name="indexList">/common/frame.jsp</result>
		<result name="orgTree">/erp/oa/issue/regulationsorgTree.jsp</result>
		//success 往这里执行了
		<result type="redirect-action">Regulations_list?back=1</result>
	</action>

【？问题：这里success的resutlt并没有定义

默认执行这个result，<result type="redirect-action">Regulations_list?back=1</result>】

-> Regulations_list?back=1 (return "list")

page = new RegulationsService().getRegulationsList(getQuerywhere(qlevel), getPageIndex().intValue(),Constant.PAGE_SIZE,orgid1,orgid2,getLoginInfo().getEmployeeId());
在取Regulations集合时，SQL语句根据权限返回记录集

-> /erp/oa/issue/regulationslist.jsp
-> 
-> 
-> 
-> 
-> 
>>>>下面是 "修改"  <<<<
"增加" 和 "修改" 都是同一个页面。
-> 点击 "修改"
-> 
-> 
-> 








2. /common/inc.jsp 有公用代码 js之类等。


3. 系统的权限管理分析

系统权限分为：操作级权限控制之外，还有数据级权限控制

1）数据显示权限 ，比如：规章制度里发布的内容，把权限信息保存为表的字段（把组，人等保存到一个字段中），通过
SQL语句，筛选符合权限的记录。
下面就是 规章制度在SQL语句里实现权限划分功能：

RegulationsService.java 的 getRegulationsList()方法

	public Page getRegulationsList(String where, int pageindex, int pagesize, String orgid,String preorgid,String employeeid) {
	String sql = "select * from T_OA_Regulations o where 1=1";
	sql += (new RangePolicyDao().getOrgRange(orgid, preorgid, employeeid,"o.orgid"));
	sql+=where + " order by o.name";
		return HibernateUtil.getSQL2MapPage(sql, pageindex, pagesize);

	}

RangePolicyDao.java 的 getOrgRange()方法 ：
//这里是权限控制地方之一

	public String getOrgRange(String orgid,String preorgid,String employeeid,String orgstr){
		StringBuffer sql = new StringBuffer();
		if(StringUtils.isNotEmpty(orgid) && !"null".equals(orgid)){
			if(StringUtils.isNotEmpty(preorgid) && "XXX".equals(preorgid.substring(preorgid.length()-3,preorgid.length()).toUpperCase())){
				sql.append(" and  "+orgstr+" in (select id from treelistforsystemorgstartfromid('" + orgid.substring(0,orgid.length()-3) + "')) ");
			}else{
				if(StringUtils.isNotEmpty(preorgid) && !"null".equals(preorgid)){
					//sql.append(" and ( "+orgstr+" in (select id from treelistforsystemorgstartfromid('" + orgid + "')) ");
					//sql.append(" or "+orgstr+" in (select distinct a.id from F_ORGrange('" + preorgid + "','"+employeeid+"','') a,T_Sys_OrgRangerole b where a.id = b.orgid)  )"); //增加的范围权限
					sql.append(" and  "+orgstr+" in  (select distinct id from F_OrgRange_new('" + preorgid + "','"+employeeid+"','" + orgid + "')  ) "); //增加的范围权限
				}else{
					sql.append(" and  "+orgstr+" in (select id from treelistforsystemorgstartfromid('" + orgid + "')) ");
				}
			}
			 return sql.toString();
	    	 /*if("XXX".equals(orgid.substring(orgid.length()-3,orgid.length()).toUpperCase())){	
	    		 //sql.append(" and "+orgstr+" in (select id from f_org('" + orgid.substring(0,orgid.length()-3) + "')) ");
	    		 sql.append(" and exists (select 1 from f_org('" + orgid.substring(0,orgid.length()-3) + "') t where t.id = "+orgstr+"  ) ");
	    	 }else{
	    		 if(StringUtils.isNotEmpty(preorgid) && !"null".equals(preorgid)){		//sql.append(" and  "+orgstr+" in (select id from f_org('" + orgid + "') ");
		    		 ///sql.append(" and  "+orgstr+" in  (select distinct id from F_ORGrange_hr('" + preorgid + "','"+employeeid+"','" + orgid + "')  ) "); //增加的范围权限
	    			 sql.append(" and  exists  (select 1 from F_ORGrange_hr('" + preorgid + "','"+employeeid+"','" + orgid + "')  t where t.id = "+orgstr+" ) "); //增加的范围权限
	    		 }else{
	    			 sql.append(" and exists (select 1 from f_org('" + orgid + "') t where t.id = "+orgstr+" ) ");  //sql.append(" and "+orgstr+" in (select id from f_org('" + orgid + "')) ");
	    		 }
	    	 }*/
	     }
		return "";
	}

2）参看：（工法管理）QuamethodmangerAction.java 里 index()方法 里的一句代码，目的：控制权限

	setShare("t_pm_quamethodmanger");

还有 input view 都对对象进行了修饰。

3）系统账号的权限设置：
分 
    * 角色授权 
        配置不同角色，不同的角色又通过管理界面配置访问树及其树下页面的按钮、搜索按钮等的权限 ，这里的权限是
    对系统的各个功能模块乃至模块下的页面，乃至页面里的按钮的访问控制，区别于机构访问权限。
        系统是，提供管理角色的页面，来管理角色；分配权限页面来分配角色。

         每个系统账户可能有多个岗位，每个岗位可以配置多个角色，每个角色设置了访问系统各个功能模块的权限。是
    根据系统的模块页面来进行访问控制，区别于组织树的访问权限（属于范围权限）。

    * 范围授权 
       对机构树的访问权限-就是对组织的各个分支，部门的访问权限的设置。
       系统事先建立好范围权限供分配权限的页面选择，分配到了范围权限也就要了其对应的访问组织机构的权限。

       【系统 账户 权限】一个系统账户，可能对应多个岗位，每个岗位可以分别配置角色和范围权限。每个范围权限设置
       了能访问的组织机构的节点，好比你是上海分公司的，默认情况三公司内部能见的数据你是看不到的，如何你有了
       访问三公司的范围权限，则你运行访问三公司的默认数据。


 4）现在的问题是 ，这多个权限是如何相互作用的 ？【权限的联系】

 系统有哪些权限种类，分别设置哪些哪些访问权，如何实现等这些知道后，还要知道这多种权限是如何一起作用的？

【权限 问题 ？】 权限的冲突，比如原来是通过控制操作按钮的可用性来控制是否有权限修改，增加之类操作，这样就可以和角色
配置一起进行对数据的访问控制权；现在又在数据的选择框上进行了选中控制，导致即使有修改的角色权限，也不能修改文件。

 比如，一个账户没有角色权限（不能访问某些模块，页面等），但他有范围权限（比如有三公司的范围权限）。可能会
 由于没有角色权限而没有进入三公司数据的入口。从这点，范围权限受制于角色权限，也是范围权限和角色权限共同作用控制数据
 显示和操作的授权。

 范围权限和角色权限联系例子：
     用户有范围权限能看到该范围的数据，如果没有该模块的角色操作权限（添加，修改等操作），是不能进行操作的；如果
     配置了允许操作的角色，则可以进行操作。


4. 
【任务】
- 对 协同门户-信息发布-规章制度-添加 里的可阅读组右边弹出的选择页面修改，
把"选择人员组" 标签去掉。
（1）把 协同门户-信息发布-规章制度-修改 对应的页面用struts标签取出原来的数据。 
（2）一些不允许输入的input，换为disableinput样式，避免误解 done


（1）
-> 找到弹出的页面(那个jsp页面)
->

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day4 2010年8月12日

1.任务
【任务】
（1） 参照 NewsafficheAction.java 添加个allname属性，用于显示 机构 和 组 的合并字符串。
（2） 对 T_OA_Regulations 表的字段进行修改，只留下id字段
同时，修改mapping文件；pojo类不用修改（shareorgnames等属性用于封转数据，在数据库里没有字段对应）
（3） 根据上面，数据库只存入id，在查看和修改 Regulations 数据时，需要写个逻辑根据id找到对应的name

（1）
-> 
-> 
-> 
-> 

（2）
-> 对表 T_OA_Regulations 修改 把原来添加的 字段去掉 重新 添加如下字段 

【修改】

原来：
alter table t_oa_regulations add shareteamids varchar(8000); -- 共享组id
alter table t_oa_regulations add shareteamnames varchar(8000);
alter table t_oa_regulations add shareempids varchar(8000); -- 人员id
alter table t_oa_regulations add shareempnames varchar(8000);
alter table t_oa_regulations add readorgid varchar(8000); -- 机构id
alter table t_oa_regulations add readorgname varchar(8000);

把上面字段都删除。

修改为：
alter table t_oa_regulations add sharegroupids varchar(8000); -- 共享组id
alter table t_oa_regulations add shareorgids varchar(8000); -- 机构id
alter table t_oa_regulations add shareempids varchar(8000); -- 人员id

-> 对表对应的pojo类 Regulations.java 修改

【添加】 

添加6个字段：

//映射到数据库
String sharegroupids， 
String shareempids， 
String shareorgids
//不映射到数据库，用于封转数据
String sharegroupnames， 
String shareempnames， 
String shareorgnames

提供set/get方法

-> 根据上面步骤，修改映射文件 Regulations.hbm.xml

要删除字段：alter table t_oa_regulations drop column shareteamids;

【添加】

<property name="shareorgids" type="java.lang.String" column="shareorgids"/>
<property name="sharegroupids" type="java.lang.String" column="sharegroupids"/>
<property name="shareempids" type="java.lang.String" column="shareempids"/>

-> 修改 regulationsinput.jsp 页面上标签的属性 

【修改】




-> 上面各个相关地方都修改后后，测试下 

结果：

能显示id的字符串，下步就是把id转换为name用于显示。

-> 根据（1）组织机构，（2）组，（3）员工id获得相应name字符串 ，用于页面显示

涉及到的表如下：


* 员工表 T_HR_Employee - 根据员工id，找到员工name的拼接字符串,用","隔开
* 组织机构表 F_org('') ，t_hr_org  - 获得机构名的字符串
* 人员组（自定义组）表 T_Sys_Group - 获得人员组名的字符串

【技巧】
【注意】想知道数据在哪些表里面，可以根据已有的功能和控制台sql语句输出，来判断
哪些数据用了哪些表。还能从原有的查询，运用到现在的类似查询：

比如，查询组织机构记录sql语句：
    select
        o.id,
        o.code,
        o.name as longname,
        o.parentid,
        t.name as shortname 
    from
        F_org('') o ,
        t_hr_org t 
    where
        COALESCE(o.status,'')<> '1' 
        and o.id in (
            select
                id 
            from
                t_hr_org 
            where
                companyid='402881e6220b291201220b9a66fd0001'
        ) 
        and o.id=t.id 
    order by
        o.taxis,
        o.code
上面语句是检索出 公司id='402881e6220b291201220b9a66fd0001'的公司下，包含的所有组织机构。


这里要用到的sql，从上面修改为：

    select
        o.id,
        o.code,
        o.name as longname,
        o.parentid,
        t.name as shortname 
    from
        F_org('') o ,
        t_hr_org t 
    where
        COALESCE(o.status,'')<> '1' 
        and o.id in (
	-- 变量，即组织机构id的字符串
        ) 
        and o.id=t.id 




根据ids检索names:

select emp.name 
from T_HR_Employee emp
where emp.id 
in ('402881762602738f01261b60255628c6');

需要对以","分隔的id字符串处理成能能被 in 范围接受的格式，然后检索出names。

-> 在 service层(RegulationsService.java)，新增加个方法 根据id返回，初始化好names的regulations对象

【增加】

RegulationsService.java

/**
 * 在 loadRegulations（）方法的基础上，对可阅读组的id ，转化为相应的 name，用于表单显示
 * @parm String id
 * @return Regulations
 */
public Regulations loadRegulationsWithDetail(String id){
	Regulations reg = loadRegulations(id);
	
	return reg;
}
====================================

   其实根据ids得到names，就是在regulations的service里，调用相关的service层构成
要用的数据，也就是在相关的service代码里加上 根据ids，返回names的方法。
  
   当然，有些还是需要dao层方法的支持。

   不过，系统是一步步熟悉的，发现 下面：
  - HibernateUtil.java（基础框架里的 ）提供 getSQL2MapList(Stirng sql) 方法，直接执行sql语句。可以在service层
传入sql脚本。
   这样，就可以越过各自dao层，直接执行sql，进行检索了 ^^

   不过，最好还是写在dao层理，分层思想；也不利于代码重用。

   所以，下面是在每个service层里加个方法，然后在 RegulationsAction.java里的view()方法里，再把
   对象修饰，丰富下，再给视图层显示。


   【注意】 上面action里的view()方法，对对象进行了加工，可以看看其他代码是否类似。

====================================

-> --------（1）组织机构部分----------OrgDao.java  OrgService.java
-> 加入 根据ids ，返回names的方法
-> dao层（oa/OrgDao.java里）增加个方法 返回符合上面步骤要求的 Regulations 对象
基础框架里的 HibernateUtil.java 类提供了一个方法来检索hql语句的所有记录。

	public static List getHQL2DtoList(String hql) {
		return getHQLPage(hql, 1, -1).getList();// -1 表示返回所有记录
	}
故只要在 dao层 写好hql语句，就ok。

-> 给action的view()方法调用

-> --------（2）人员组 部分---------- GroupDao.java GroupService.java

加入 根据ids ，返回names的方法

【系统：
- BaseDao.java（基础框架里的 ） 已经提供了formatString(Stirng ids) 把 "," 分隔的字符串，转换为符合用
于 sql查询的in范围的格式(类似 '1212','1212','1212')。
- HibernateUtil.java（基础框架里的 ）提供 getSQL2MapList(Stirng sql) 方法，直接执行sql语句。可以在service层
传入sql脚本。
】
-> 给action的view()方法调用
-> 
-> 
-> 
-> 
-> 
-> 
-> --------（3）员工 部分---------- EmployeeDao.java EmployeeService.java
【问题】 有多个EmployeeDao 和 EmployeeService类，怎么对应的？找个方法区别下

employeedao.java
- wyjs/src/com/erp/hr/employee/dao
- wyjs/src/com/erp/hr/salary/dao
- wyjs/src/com/erp/hr/socinsurance/dao

- wyjs/src/com/erp/oa/issue/dao //this is what we find


employeeservice.java
- wyjs/src/com/erp/hr/employee/service
- wyjs/src/com/erp/hr/salary/service
- wyjs/src/com/erp/hr/socinsurance/service

- wyjs/src/com/erp/oa/issue/service  //【系统】这里用的是这个service下的employeeservice.java类，并且
已经写好了 根据ids返回names的方法（还有其他操作都提供了相应的方法） 
它的实现如下：

/**
 * 根据员工ids得到员工姓名
 * @param empids 员工ids
 * @return 员工姓名
 */
public List getEmployeenameByEmpIds(String empids){
	return employeeDao.getEmployeenameByEmpIds(empids);
}


/**
 * 使用＂,＂拼接字符串
 * @param list field(应该就是map里对象对应的属性名 ，比如 regulation的name)
 * @return
 */
public String getJointString(List list,String field){
	String str="";
	for(int i=0;i<list.size();i++){
		Map map=(Map)list.get(i);
		if(map.get(field).toString().equals(""))continue;
		str=str+map.get(field)+",";
	}
	return str==""?"":str.substring(0,str.length()-1);
}


加入 根据ids ，返回names的方法 



->  给action的view()方法调用【系统】在查看时，是要经过action的view()方法的，而修改则不经过。看
navigater.txt里的流程就明白了。
要想在 修改页面上显示 names，就要在input()方法里把值初始化好。否则jsp页面显示不了。
-> 
-> 
-> 
-> 
-> 
-> 



2. myeclipse 手动编译工程 
project  --> clean...

快捷 "alt+p" 按 "n" 按 "回车"




day5 2010年8月13日

1. MyEclipse的 hierarchy 视图 能方便的查看类的属性和方法信息。



2. 做到后面，发现好多功能 都已经写好了，比如根据ids返回names，用","拼接字符串和把","拼接的
字符串处理成 能放在sql的where子句的in条件查询。


3. 【任务】
（1）把查看 政策 的页面修改下 ，添加显示 可阅读组和人的框。参照 公告
（2）通过语句控制中间的树的权限显示 
【系统】系统底层还是靠在数据库里的ids字段，在进行sql检索的时候进行权限控制。
权限控制的目的，就是不让用户看到不可见内容，避免意外操作。
（3）参看 项目管控考核 - 工法管理 来把 规章制度 修改下。
关于 组后面的 ","的取舍？可以再把 allname 用substring把 "," 号去掉

4. 对regulation.java做了修改，提供了set/get方法，但没注意到 原来类里的set/get方法里，还有个额外的语句
 addField("lastemployeeid");
就因为少了这个语句，导致新的属性不能被更新。
【注意 注意】 根据上面，修改代码，还是按照原代码修改，因为有些细节还没完全搞清楚。


5 提交的是代码文件 像web-inf下的jar包是不提交的，所以jar包导好能工作就OK.
显示出所有更新 和新加的文件 一起更新。

6 项目从cvs取到后，
1）配置jar包
2）配置license SSL
3）hibernate配置文件


5. 【系统】 在 系统设置 - 系统配置 里可以把一些功能关闭，以免控制台一直输出sql语句。


6. 【经验】 注意代码的健壮性 ，对可预见的异常进行考虑和处理。

【系统】
在 RegulationsAction.java 里面的 indexlist()方法里加入：
		super.setShare("T_OA_Regulations");
和 list()方法里的：
...
page = new RegulationsService().getRegulationsList(getQuerywhere(qlevel),getPageIndex().intValue(),Constant.PAGE_SIZE,orgid1,orgid2,getLoginInfo().getEmployeeId());
.....
super.setShareStatus(page);
..

可以控制 "范围权限"  - setShareStatus()方法

------范围权限的实现之 一 -------
 iRegulationsAction的ndexlist()方法是访问 regulation（规章制度）的入口，经过action的这个方法，
 到真正页面common/frame.jsp,为了实现范围权限-根据权限显示不同内容，在这个方法里加入了范围权限语句：
	
	super.setShare("T_OA_Regulations"); 

 来实现权限功能的。

 其他的类似功能也是这样实现的。
---------------------------------

reward - 属性/字段 用处？ 那是工商法的获奖情况。和 政策规章 无关。

t_sys_dictvalue - 应该是获奖情况相关表



7. select distinct  不能和text类型的一起查询，如何解决？


select * 
from T_OA_Regulations reg
where exists(select 1 from T_OA_Regulations where reg.id=id) 

不用 distinct ，用其他办法实现。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day6 2010年8月16日

1. 有text字段的查询去重
use wypm;
//此方法不是很好
select distinct 0.id,o.name,CAST(content as varchar(8000)) as content
from T_OA_Regulations o ,t_sys_group g 


//这种方法，优先【sql 技巧 text类型去重 自连接 】
select o.*,c.content from (
 select distinct r.id,r.name,r.createdate,r.orgid,r.publisher,r.publisherid,r.draftmanid,r.draftname 
 from T_OA_Regulations r , t_sys_group g , 
 F_allparentORG('402881e6220b291201220b9a671c0002') p  
 where  (charindex('402881922215b1480122160a80ba0a74',r.shareempids,0)>0   
 or charindex(p.id,r.shareorgids,0)>0   
 or (charindex('402881922215b1480122160a80ba0a74',g.empids,0)>0 
	and charindex(g.id,r.sharegroupids,0)>0)  
 or    r.orgid in  (select distinct id from F_OrgRange_new('402881e6220b291201220b9a671c0002','402881922215b1480122160a80ba0a74','402881e6220b291201220b9a671c0002')  )  )  
 and r.orgid in(select id from treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002') )  
) o left join T_OA_Regulations c on c.id = o.id

—— 先把能用distinct来去重的字段都取出来，作为一个查询的临时数据，然后在其外面再把那个text类型的通过左连接 来把text类型的数据取到。


2. 【任务】给规章制度 加上根据权限修改和添加的处理逻辑。

通过设置BaseAction里的属性：addData ，交给视图，视图判断是否有修改或增加的权限还是只是显示？


BaseActon.java
 
 private String addData;

 setShareStatus(Page page)


 setShare(String tablename)
			622909216782039015
 上面2个set方法，都是所有action公用的设置权限的方法。

 【中间树 ，需要刷新才出现其他公司】

3. 【IDE】 MyEclipse 的web项目运行在【debug】模式下，会将修改过的java文件，保存编译并部署到
 服务器目录下，而在正常运行状态是不会部署过去的。即，开发时，最好都开debug模式，以免漫长的服务器
 重启时间。

 不过，如何是增加了新的方法，还是要重启服务器的。

4. 【系统】 TreeAction.java 控制中间机构树的显示。

5.【任务】 研究下 中间树 是如何生成和作用的 
 关键就是：TreeAction.java 类 
 和 TreeService.java类

角色权限不够时，只能看到自己范围的树下的内容，比如分公司就不能看总部的，点上去的效果是收起树，而不是
转到URL 参考 公告 的 。不过有个弊端，因为中间的权限树已经限制的可见机构，这样的话，即使有权限也没地方进去看。

思路：可以让中间树，都可见，但操作时根据用户和权限设置只能访问某些树，其他提示没有权限。
或者都能进去，但数据是根据权限显示的，即能进去，但没权限就看不到

6. 【问题】 公告的 选择组织机构 出不来数据。 ?

从 CommonldialogAction.java 的 view() 方法 ，返回 view ，根据配置文件去到 view.jsp。


待解决

原因：js 导致最终页面 _getOrg.jsp 无法显示数据，把不要的js去掉

7. 【系统】 新的版本，实现数据层的权限显示，中间目录树是权限之一(在action的index方法里传入参数，来控制可见树)，
还有文件设置的共享权限，如果不符合共享权限，也没有中间树权限，则看不到。

这都是在 action的列出文件列表方法里处理的。当然，底层还是dao里的sql语句。




 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day7 2010年8月17日


1. treelistforsystemorgstartfromid("+orgid+") —— sql server函数 功能？

从运行结果来看功能。

应该是默认权限树的查询，返回的是orgid对应的 所有下级机构  


-- 登录用户的默认范围权限（机构树各各个节点的访问权限）
select id,* 
from treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002')

和上面联系一起 ，下面是获得上级机构的函数：

 -- 取得传入机构的所有上级机构id ,函数 getupOrgid(orgid) 
 -- 下面的F_allparentORG函数也是同样的效果，只是字段比getupOrgid(orgid)少检索几个
 -- 这两个函数作用差不多的
 
 select * from getupOrgid('402881e6220b291201220b9a671c0002')
 
 select * from F_allparentORG('402881e6220b291201220b9a671c0002')

2. 记录 样式

-------------------- add by chengshen ----------------------

3. 第一次 cvs提交 ok

4. 【任务】 项目管控考核-技术质量 下的 功能完善。




—— 参考：工法管理 和 QC成果


（1） 新技术应用示范 部分

a. 显示中间树 类似 工法管理  【系统 增加中间树 中间树】

-> 找出相关 文件，类，表

######################### 涉及到的资源 #####################

左边树 ： menuepm-config.xml 

位置：src / com/ erp/ epm/ tenicqua /

访问URI Quademotechnicnew_index.action


QuademotechnicnewAction.java

common/f.jsp

struts-epm.xml

<action class="com.erp.epm.tenicqua.action.QuademotechnicnewAction" method="{1}" name="Quademotechnicnew_*">
	<result name="view">/erp/epm/tenicqua/quademotechnicnewview.jsp</result>
	<result name="input">/erp/epm/tenicqua/quademotechnicnewinput.jsp</result>
	<result name="list">/erp/epm/tenicqua/quademotechnicnewlist.jsp</result>
	<result name="listexcel">/erp/epm/tenicqua/quademotechnicnewlistexcel.jsp</result>
	<result type="redirect-action">Quademotechnicnew_list?back=1</result>
</action>

QuademotechnicnewAction.java

QuademotechnicnewDao.java

QuademotechnicnewService.java

Quademotechnicnew.java —— 新技术应用示范 的POJO类 

Quademotechnicnew.hbm.xml

数据库表：t_pm_quaresultqc

#############################################################

-> 对 pojo 类 Quademotechnicnew.java 增加 7个属性,对其中3个含id的要按照要求（addfield操作等） 提供set/get方法

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

-> 修改 Quademotechnicnew.hbm.xml ，把新加属性映射进去

-> 修改 数据库表：t_pm_Quademotechnicnew 增加 3 个字段 

alter table t_pm_quademotechnicnew add sharegroupids varchar(8000); -- 共享组id
alter table t_pm_quademotechnicnew add shareorgids varchar(8000); -- 机构id
alter table t_pm_quademotechnicnew add shareempids varchar(8000); -- 人员id

-> 开始处理 数据的存入与显示问题

-> 修改左边树 menuepm-config.xml 对应 新技术应用示范 的 URL 为：
对 访问 的入口方法（ QuaresultqcAction.java ）进行修改 原来 指向 action的 
list(),改为指向index()

-> 对 action 增加新的 方法 index() （index方法里面设置frame.jsp里的各个出口将要去访问路径的参数）

【建议】 可以吧 index 作为静态常量定义在 BaseAction里，以免每个action都要定义。

-> 在配置文件里 配置上 index 对应的视图 为公用的 common/frame.jsp

-> 显示正常（action的result为list的视图） 开始找到 "增加" "修改" 等的页面 并根据数据进行权限等js操作

/erp/epm/tenicqua/quademotechnicnewlist.jsp 页面里：

"增加" —— /wyjs/epm/Quademotechnicnew_input.action

"修改" —— "/wyjs/epm/Quademotechnicnew_input.action?id="+pgform.ids.value

-> 修改 /erp/epm/tenicqua/quademotechnicnewlist.jsp 必须选择中间树公司，才能进行 增加 操作。

-> 修改action里的方法，设置数据访问标识 addData ， read 等 

【系统 read 】read 控制数据是只读，还是可以修改 ，在 BaseAction里处理的，对page数据进行处理 加入 read 键值对。

在 list 的jsp页面 通过get方式把read 传递到 input页面 （比如修改页面）


【建议】  service层的实例最好用工厂获得。

【系统】 有些action里叫 sharename，有些叫 allname ，意思都是一样的，表示 shareorgnames和sharegroupnames
的合并，用于页面显示。

【系统】系统的功能模块各种文件的命名，是在基础数据POJO类的名字上，依次类推的 比如：
知道 Regulations.java POJO类 ，对应的action就为 RegulationsAction ,输入表单页面为regulationsinput.jsp,
列表页面为regulationslist.jap ,查看页面为regulationsview.jsp 还有服务层 dao层等，都类似的。 

		【系统 命名】 因为是根据表自动生成，各层代码，故是通一的。


-> 根据工法部分 修改action和相应的视图页面。

-> 修改 dao层里的sql语句，根据权限过滤数据。

【异常 SQL 】
 Caused by: java.sql.DataTruncation: Data truncation

 以上异常是数据库数据存储时，超出字段大小导致。 
 例：name字段为varchar(50),那么当你name的值插入一个为51长度的字符串时候，就会报此异常了

-> 【问题 ？】 在换岗位，操作时 pojo对象的 eprjid 异常 ，比如：
eprjid	"4028819224fb69d4012523eecf89184b,010820091027019-1-01 ,景德镇市金岸名都项目-土建-01 ,,景德镇市金岸名都项目-土建-01-土建"	

出现原因是：在选择工程名称时 ，有的选项会出现上面的错误字符串，而有的是正常的。
【原因】 是在单选按钮间切换时，带上了历史数据，导致 oprjid（应该为32为的字符串） 字符串错误。


【系统】最右边窗口，最上面的 标题 的显示 和相应类似 quademotechnicnewinc.jsp 等有关
-> 【任务】 把弹出框 选择组织机构 修改下，原来不能显示数据。

【sql server】 修改字段类型 例子 

alter table table_name ALTER COLUMN column_name varchar(200)
【mysql】
alter table rs modify column rs_pool_name varchar(100) COMMENT '@desc rs pool name'
---------- begin task----------

根据 sql查询是有结果的，判断是 页面数据显示处理问题。
 
-> quademotechnicnewinput.jsp页面 js函数调用对话框：getOrg('quademotechnicnew.orgid','deptname'); 

此方法定义在 ：commonldialog_zn.js 

-> var url = path + "/common/selectdialog/index.jsp?type=getOrg&page=getOrg.jsp&orgpara="+para+"&time=" + escape(new Date());

-> /common/selectdialog/index.jsp

-> index.jsp页面动态 jsp:include 载入 /common/selectdialog/getOrg.jsp 作为其一部分

--> getOrg.jsp 转到 /wyjs/common/Commondialog_view.action?type=getOrg&orgpara=1&dotype=_getorg&returnindex=0&time=Tue%20Aug%2017%2019%3A15%3A20%20UTC+0800%202010 

补充：escape(new Date())  —— 弹出框的 url 后缀加上这个参数，解决不刷新页面问题。【窗口 刷新 escape(new Date())】


getOrgs.jsp 页面是指显示机构的地方，下面的弹出窗口不在这个窗口里。【问题 关键点】

##############################

getOrg.jsp 和 getOrgs.jsp 原来都是同一个文件。

问题就出在 这里！

##############################

2个frame的src都是 common/blank.jsp

--> action 到 /common/selectdialog/view.jsp

--> view.jsp取到 url 后构造 jsp视图名字 并 动态载入到自己 中

--> 测试 出来 是 因为传递来的 url = null ,即使为null 机构树还是能显示的，原因
是 getOrgs.jsp 页面显示了机构树 "选择组织机构"。

sql语句为：

select
        o.id,
        o.code,
        o.name as longname,
        o.parentid,
        t.name as shortname 
    from
        F_org('') o ,
        t_hr_org t 
    where
        COALESCE(o.status,'')<> '1' 
        and o.id in (
            select
                id 
            from
                t_hr_org 
            where
                companyid='402881e6220b291201220b9a66fd0001'
        ) 
        and o.id=t.id 
    order by
        o.taxis,
        o.code






----------- end ---------------

测试 能正常工作的 组织机构和组 的窗口 执行过程

------------- begin -----------

-> 从 js方法开始 getNewSendGroups(orggroupids, orggroupnames, newgroupids, newgroupnames, allnames)

-> path + "/common/selectdialog/index.jsp?type=getNewSendGroups&page=getNewSendGroups.jsp&time=" + escape(new Date())

-> /common/selectdialog/index.jsp


-> 和上面的 流程 走到一起了

-> url 也是 null

-> 正常的 机构 和组 选择都是在 view.jsp页面上显示的





------------ end --------------

day8 2010年8月18日

获得机构树的url : 

http://localhost:8080/wyjs/common/Commondialog_view.action?type=getNewSendGroups&dotype=_getorgs&returnindex=0&time=Wed%20Aug%2018%2009%3A45%3A28%20UTC+0800%2


-> 多选 机构树 出来 了 ，只能是单选 修改参数 应该是 js 的问题

-> 最终原因 ： 最后显示页面_getOrg.jsp 里倒入的2个js文件有错误，去掉就OK了。

-> 总结：【系统】功能都实现好了，出bug可能就是 一些小问题，比如 js失效等等。整体的逻辑应该
是正确的；
【经验】 用jsp输出 或 js 提示 来看不能debug代码的调试。


【IDE】 MyEclipse 的 package explorer 视图里有个 "link with editor" 按钮 ,可以
定位被打开文件的目录位置，方便在用 查找文件 方式打开的文件，要定位到目录的情况。





【经验】 表格布局，情况 可以 这样查看 
border="2" bordercolor="green">

<<< 新技术应用示范 end

############################################# 短期任务 ############################################

【任务】 

参照 项目管控考核-技术质量 下做好的模块 把其他模块完善好。

公共修改的地方：
 - 加上 可阅读组 和 可阅读人 的字段 并设置权限
 - 没有 所属部门 字段的加上所属部门字段（后面权限筛选用的到）

=================
（1） 专利管理

* 入口：http://localhost:8080/wyjs/epm/Quapatentmanger_list.action

menuepm-config.xml —— 入口所在树配置文件：

* （根据wyjs/epm/ 配置文件是struts-epm.xml）找到action为：QuapatentmangerAction.java
 
* 配置信息：
 <action class="com.erp.epm.tenicqua.action.QuapatentmangerAction" method="{1}" name="Quapatentmanger_*">
	<result name="view">/erp/epm/tenicqua/quapatentmangerview.jsp</result>
	<result name="input">/erp/epm/tenicqua/quapatentmangerinput.jsp</result>
	<result name="list">/erp/epm/tenicqua/quapatentmangerlist.jsp</result>
	<result name="listexcel">/erp/epm/tenicqua/quapatentmangerlistexcel.jsp</result>
	<result type="redirect-action">Quapatentmanger_list?back=1</result>
 </action>
*相关文件 (【经验】根据action名字都几乎可以判断出，缘于命名的统一性；另外，修改或调试一个系统，对其的一些规律的掌握，对后续工作很有帮助)

POJO类：Quapatentmanger.java

mapping文件：Quapatentmanger.hbm.xml

数据库表：t_pm_quapatentmanger

dao层：QuapatentmangerDao.java

service层：QuapatentmangerService.java


jsp页面：quapatentmangerinput.jsp
	 quapatentmangerview.jsp
	 quapatentmangerlist.jsp

开始：

-> 修改 pojo类 加入 8 个属性 其中前面3个要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示
String orgname
// String orgid //所属部门 id 映射到数据库 —— 已经有了

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_quapatentmanger add sharegroupids varchar(8000);
alter table t_pm_quapatentmanger add shareorgids varchar(8000);
alter table t_pm_quapatentmanger add shareempids varchar(8000);

-> 修改 左边大树到这个功能的入口 url为调用action的index方法 Y

-> 修改action 加入 index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 Y

-> 修改相关的 jsp 文件 Y

-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示 Y


【经验 Myeclipse】  MyEclipse在异常关闭时，可能没有关闭服务器的进程，导致后续开启服务器失败
提示 jvm bind ,只要在进程管理中把相应的 javaw关闭即可。

=================
（2） QC成果

* 入口：http://localhost:8080/wyjs/epm/Quaresultqc_index.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：QuaresultqcAction.java
 
* 配置信息：

<action class="com.erp.epm.tenicqua.action.QuaresultqcAction" method="{1}" name="Quaresultqc_*">
	<!-- <result name="index">/erp/epm/tenicqua/quaresultqcindex.jsp</result> -->
	<result name="index">/common/frame.jsp</result>
	<result name="tree">/erp/epm/tenicqua/quaresultqctree.jsp</result>
	<result name="view">/erp/epm/tenicqua/quaresultqcview.jsp</result>
	<result name="input">/erp/epm/tenicqua/quaresultqcinput.jsp</result>
	<result name="list">/erp/epm/tenicqua/quaresultqclist.jsp</result>
	<result name="listexcel">/erp/epm/tenicqua/quaresultqclistexcel.jsp</result>
	<result type="redirect-action">Quaresultqc_list?back=1</result>
</action>

*相关文件

POJO类：Quaresultqc.java

mapping文件：Quaresultqc.hbm.xml

数据库表：t_pm_quaresultqc

dao层：QuaresultqcDao.java

service层：QuaresultqcService.java


jsp页面：quaresultqcinput.jsp
	 quaresultqcview.jsp
	 quaresultqclist.jsp


开始：

-> 修改 pojo类 加入 7 个属性 其中前面3个要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_quaresultqc add sharegroupids varchar(8000);
alter table t_pm_quaresultqc add shareorgids varchar(8000);
alter table t_pm_quaresultqc add shareempids varchar(8000);

-> 修改action index 方法，并修改其他方法 Y

-> 修改相关的 jsp 文件 Y

-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示 Y



=================
（3） 科研成果

* 入口：http://localhost:8080/wyjs/epm/Researchresult_list.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：ResearchresultAction.java
 
* 配置信息：

	<action class="com.erp.epm.tenicqua.action.ResearchresultAction" method="{1}" name="Researchresult_*">
		<result name="view">/erp/epm/tenicqua/researchresultview.jsp</result>
		<result name="input">/erp/epm/tenicqua/researchresultinput.jsp</result>
		<result name="list">/erp/epm/tenicqua/researchresultlist.jsp</result>
		<result name="listexcel">/erp/epm/tenicqua/researchresultlistexcel.jsp</result>
		<result type="redirect-action">Researchresult_list?back=1</result>
	</action>

*相关文件

POJO类：Researchresult.java

mapping文件：Researchresult.hbm.xml

数据库表：t_pm_researchresult

dao层：ResearchresultDao.java

service层：ResearchresultService.java


jsp页面：researchresultinput.jsp
	 researchresultview.jsp
	 researchresultlist.jsp

开始：

-> 修改 pojo类 加入 7 个属性 其中前面3个要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_researchresult add sharegroupids varchar(8000);
alter table t_pm_researchresult add shareorgids varchar(8000);
alter table t_pm_researchresult add shareempids varchar(8000);

-> 修改 左边大树到这个功能的入口 url为调用action的index方法 Y

-> 修改action 加入 index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 Y

-> 修改相关的 jsp 文件 Y

-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示 Y

=================
（4） 论文集

* 入口：http://localhost:8080/wyjs/epm/Quamemoir_index.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：QuamemoirAction.java
 
* 配置信息：

	<action class="com.erp.epm.tenicqua.action.QuamemoirAction" method="{1}" name="Quamemoir_*">
		<!-- <result name="index">/erp/epm/tenicqua/quamemoirindex.jsp</result> -->
		<result name="index">/common/frame.jsp</result>
		<result name="tree">/erp/epm/tenicqua/quamemoirtree.jsp</result>
		<result name="view">/erp/epm/tenicqua/quamemoirview.jsp</result>
		<result name="input">/erp/epm/tenicqua/quamemoirinput.jsp</result>
		<result name="list">/erp/epm/tenicqua/quamemoirlist.jsp</result>
		<result name="listexcel">/erp/epm/tenicqua/quamemoirlistexcel.jsp</result>
		<result type="redirect-action">Quamemoir_list?back=1</result>
	</action>

*相关文件

POJO类：Quamemoir.java

mapping文件：Quamemoir.hbm.xml

数据库表：t_pm_quamemoir

dao层：QuamemoirDao.java

service层：QuamemoirService.java


jsp页面：quamemoirinput.jsp
	 quamemoirview.jsp
	 quamemoirlist.jsp


开始：

-> 修改 pojo类 加入 7 个属性 其中前面3个要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_quamemoir add sharegroupids varchar(8000);
alter table t_pm_quamemoir add shareorgids varchar(8000);
alter table t_pm_quamemoir add shareempids varchar(8000);

-> 修改 左边大树到这个功能的入口 url为调用action的index方法 PASS

-> 修改action index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 PASS

-> 修改相关的 jsp 文件 

-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示

=================

（5） 质量目标


* 入口：http://localhost:8080/wyjs/epm/Qualitygoal_list.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：QualitygoalAction.java
 
* 配置信息：

	<action class="com.erp.epm.tenicqua.action.QualitygoalAction" method="{1}" name="Qualitygoal_*">
		<result name="view">/erp/epm/tenicqua/qualitygoalview.jsp</result>
		<result name="input">/erp/epm/tenicqua/qualitygoalinput.jsp</result>
		<result name="list">/erp/epm/tenicqua/qualitygoallist.jsp</result>
		<result name="listexcel">/erp/epm/tenicqua/qualitygoallistexcel.jsp</result>
		<result type="redirect-action">Qualitygoal_list?back=1</result>
	</action>
*相关文件

POJO类：Qualitygoal.java

mapping文件：Qualitygoal.hbm.xml

数据库表：t_pm_qualitygoal

dao层：QualitygoalDao.java

service层：QualitygoalService.java


jsp页面：qualitygoalinput.jsp
	 qualitygoalview.jsp
	 qualitygoallist.jsp

开始：

-> 修改 pojo类 加入 9 个属性 其中前面4个（id相关）要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

String finishdeptname //应完成部门名称
String finishdeptid // 应完成部门id

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_qualitygoal add sharegroupids varchar(8000);
alter table t_pm_qualitygoal add shareorgids varchar(8000);
alter table t_pm_qualitygoal add shareempids varchar(8000);
alter table t_pm_qualitygoal add finishdeptid varchar(8000);



-> 修改 左边大树到这个功能的入口 url为调用action的index方法 Y

-> 修改action 加入 index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 Y

-> 修改相关的 jsp 文件 Y

【问题】 质量目标 里的 应完成部门 是否 就是 所属部门。？
个人感觉，还是分开的好 ，高级的部门可以给下级部门定目标，也可以自己部门定目标。
而且，默认下，平行部门不能相互看 制定的目标，除非被授权。


【问题】 在 应完成部门 部门的选择上，应该是上级对下级可以正确发布目标，下级想
给上级制定目标是不允许的；可以通过 工作流 的审批解决。


-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示 Y



=================

（6） 标准规范

* 入口：http://localhost:8080/wyjs/epm/Quastandard_index.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：QuastandardAction.java
 
* 配置信息：

	<action class="com.erp.epm.tenicqua.action.QuastandardAction" method="{1}" name="Quastandard_*">
		<!-- <result name="index">/erp/epm/tenicqua/quastandardindex.jsp</result> -->
		<result name="index">/common/frame.jsp</result>
		<result name="tree">/erp/epm/tenicqua/quastandardtree.jsp</result>
		<result name="view">/erp/epm/tenicqua/quastandardview.jsp</result>
		<result name="input">/erp/epm/tenicqua/quastandardinput.jsp</result>
		<result name="list">/erp/epm/tenicqua/quastandardlist.jsp</result>
		<result name="listexcel">/erp/epm/tenicqua/quastandardlistexcel.jsp</result>
		<result type="redirect-action">Quastandard_list?back=1</result>
	</action>

*相关文件

POJO类：Quastandard.java

mapping文件：Quastandard.hbm.xml

数据库表：t_pm_quastandard

dao层：QuastandardDao.java

service层：QuastandardService.java


jsp页面：quastandardinput.jsp
	 quastandardview.jsp
	 quastandardlist.jsp



开始：

-> 修改 pojo类 加入 7 个属性 其中前面3个要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_quastandard add sharegroupids varchar(8000);
alter table t_pm_quastandard add shareorgids varchar(8000);
alter table t_pm_quastandard add shareempids varchar(8000);

-> 修改 左边大树到这个功能的入口 url为调用action的index方法 PASS

-> 修改action index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 PASS

-> 修改相关的 jsp 文件 

-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示

=================

（7） 优质工程

* 入口：http://localhost:8080/wyjs/epm/Quahighpro_list.action

menuepm-config.xml —— 入口所在树配置文件：

* 找到action为：QuahighproAction.java
 
* 配置信息：

	 <action class="com.erp.epm.tenicqua.action.QuahighproAction" method="{1}" name="Quahighpro_*">
		<result name="view">/erp/epm/tenicqua/quahighproview.jsp</result>
		<result name="input">/erp/epm/tenicqua/quahighproinput.jsp</result>
		<result name="list">/erp/epm/tenicqua/quahighprolist.jsp</result>
		<result name="listexcel">/erp/epm/tenicqua/quahighprolistexcel.jsp</result>
		<result type="redirect-action">Quahighpro_list?back=1</result>
	</action>

*相关文件

POJO类：Quahighpro.java

mapping文件：Quahighpro.hbm.xml

数据库表：t_pm_quahighpro

dao层：QuahighproDao.java

service层：QuahighproService.java


jsp页面：quahighproinput.jsp
	 quahighproview.jsp
	 quahighprolist.jsp


开始：

-> 修改 pojo类 加入 8 个属性 其中前面4个（id相关）要映射到数据库 Y

String sharegroupids 
String shareorgids
String shareempids
String orgid

String sharegroupnames
String shareorgnames
String shareempnames

String sharenames //表示 shareorgnames +　shareempnames　用于视图显示

String orgname // 替换原来的 deptname ，用这个属性封装

-> 修改mapping文件 Y

-> 修改表 ，加入字段 Y

alter table t_pm_quahighpro add sharegroupids varchar(8000);
alter table t_pm_quahighpro add shareorgids varchar(8000);
alter table t_pm_quahighpro add shareempids varchar(8000);
alter table t_pm_quahighpro add orgid varchar(8000);


-> 修改 左边大树到这个功能的入口 url为调用action的index方法 Y

-> 修改action 加入 index 方法，并修改其他方法 Y

-> 配置 index方法 返回的 result 对应的视图 Y

-> 修改相关的 jsp 文件 Y

【问题】 质量目标 里的 应完成部门 是否 就是 所属部门。？
个人感觉，还是分开的好 ，高级的部门可以给下级部门定目标，也可以自己部门定目标。
而且，默认下，平行部门不能相互看 制定的目标，除非被授权。


【问题】 在 应完成部门 部门的选择上，应该是上级对下级可以正确发布目标，下级想
给上级制定目标是不允许的；可以通过 工作流 的审批解决。

"工程名称" —— 弹出框式根据权限显示的，没有权限不能添加工程，也就没有越级问题。


-> 修改 dao层 和 service层  ,提取 list的 sql语句  这里的数据影响页面的显示 Y

【问题 弹出框】 工程名称 选择的弹出框 可能出 js问题 。2010-8-19？


########################################## 短期任务结束 #####################################


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day9 2010年8月19日 



1. 【任务】

继续 昨天的任务

2. 【建议 系统】 系统可以开发个拦截器来阻止故意的权限越级访问。

拦截器 根据用户登录信息，数据里保存的消息 进行判断是否有权限。



【问题 系统】 在 QC成果 专利管理等 页面 组选择textare 和 原来页面的textarea长度不一致 ，美观问题 待美化。

【系统 表】 系统的表的字段，要引用其他表的数据，应该引用主键 id ,根据id获得其他字段，否则可能导致数据的不一致性。

比如：一个表要引用 所属部门 的部门资料，应该把部门主键id存到自己的字段里，而不是把id和name同时存入；可能以后name
变了，而这样表里还是原来的数据。


3. sql语句里处理好，根据表的 id 找到引用表对应的name值，及其类似情况。

4. 【系统 项目管控考核】下技术质量的数据访问权限 ，核心就是下面的sql语句。

	public Page getQuamemoirList(String where, int pageindex, int pagesize,String orgid,String shareCondition,String employeeid,String loginOrgid) {
        
		StringBuffer sql = new StringBuffer();
		sql.append(" select distinct o.*,dict.name as huoj,org.name as deptname from t_pm_quamemoir o , t_hr_org org , t_sys_group g,t_sys_dictvalue dict,F_allparentORG('"+loginOrgid+"') p ");
		sql.append(" where  (charindex('"+employeeid+"',o.shareempids,0)>0 ");
		sql.append("  or charindex(p.id,o.shareorgids,0)>0 ");
		sql.append("  or (charindex('"+employeeid+"',g.empids,0)>0 and charindex(g.id,o.sharegroupids,0)>0) ");
		sql.append("  or o.orgid  ");
		sql.append(shareCondition);
		sql.append(" ) ");
		sql.append(" and o.orgid=org.id ");
		sql.append(" and dict.id=o.reward ");
		sql.append(" and o.orgid in(select id from treelistforsystemorgstartfromid('"+orgid+"') ) ");
		sql.append(where);
		sql.append(" order by o.createdate desc  ");
        
		return HibernateUtil.getSQL2MapPage(sql.toString(), pageindex, pagesize);

	}



5 
【词汇】 memoir
名词 n. 

1.(本人写的)回忆录,自传[P]
write one's memoirs 
撰写某人的自传 
2.(由亲朋写的)传记,传略[C]
3.研究报告,专题论文[C]
4.(学会的)会报,纪要[P]
5.便条,备忘录[C]

【系统 验证】 有些输入/修改页面 的字段是必须填写的 ，把这部分 js 验证代码 完善下。

6 【问题 系统 sql】 系统的权限筛选sql ，涉及到的字段，如何字段非正常，比如不为空的字段为空，则可能
导致 数据检索错误。现象之一：没有获奖的记录出不来
比如 ,列表查询，有：

sql.append(" and dict.id=o.reward ");

如果 o.reward 没有存入 为空 将导致没有任何结果出来

但，有些东西不是一定都获奖的，故，还是要修改下sql语句。

下面 ，用了 左外连接 的方式解决了问题：

select a.*,dict.name as huoj from 
  (select
        distinct top 15 o.*,
        org.name as deptname 
    from
        t_pm_quademotechnicnew o ,
        t_hr_org org ,
        t_sys_group g,
        F_allparentORG('402881e6220b291201220b9a671c0002') p 

    where
        (   -- 查询 登录用户 是否在 共享人员名单 里面
            charindex('402881922215b1480122160a80ba0a74',o.shareempids,0)>0  
	    
	    -- 查询 登录用户所在机构 是否在 共享机构 里面
            or charindex(p.id,o.shareorgids,0)>0   

            or (
		-- 查询 登录用户 是否在 共享组 里面
                charindex('402881922215b1480122160a80ba0a74',g.empids,0)>0 

		-- 查询 登录用户共享组 是否在 共享组 里面
                and charindex(g.id,o.sharegroupids,0)>0
            )   
            or o.orgid  in (
                select
                    id 
                from
		    -- 登录用户的默认范围权限
                    treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002')
            ) 
        )  
        and o.orgid=org.id  
        and o.orgid in(
            select
                id 
            from
                treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002') 
        )  
    ) a left outer join t_sys_dictvalue dict
    on a.reward = dict.id
    order by
        a.createdate desc



【建议 数据库】 有些字段，必须设置 不能为空，有为空的字段 写查询时，必须注意 不能漏记录。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day10 2010年8月20日


1. 【任务】把输入页面的 输入验证 做下。

补充：
	hibernate 源码

	封装if判断的方式一：
	
	SessionImpl.java  ( SessionImpl extends AbstractSessionImpl )
	--------
	...
		protected void errorIfClosed() {
			if ( closed ) {
				throw new SessionException( "Session is closed!" );
			}
		}
	...
	--------

	AbstractSessionImpl ( AbstractSessionImpl implements SessionImplementor )
	--------
	...
		public Query createQuery(String queryString) {
			errorIfClosed(); // 也可以用spring的assert工具类来实现
			checkTransactionSynchStatus();
			return super.createQuery(queryString);
		}
	...
	--------

2. 【系统 设计】 系统设计用隐藏表单域来传递值的好处，还有，一些浏览器支持拖拉功能，即使是一个
disabled 的 input 也能把内容拖进去，（如果靠这个表单提交内容）太危险了。

3. 【系统 sql函数】 要测试sql server 的函数有什么用 ，可以给他参数，看结果来了解。

4. 分析权限 sql 语句

函数 1 ： 

F_allparentORG("+orgid+") —— 获取所有上级组织的集合，包含本身

--------

USE [wypm]
GO
/****** Object:  UserDefinedFunction [dbo].[F_allparentORG]    Script Date: 08/20/2010 11:36:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[F_allparentORG](@orgid varchar(100)) 

returns @tree_table table
(id   varchar(32),
code  varchar(50),
name varchar(500),
status  varchar(10)
)
as
/**
获取所有上级组织的集合，包含本身
**/
begin
declare  @id varchar(40);

   insert into @tree_table select id ,code,shortname as name ,status from  t_hr_org  where id=@orgid 
   select @id=parentid  from  t_hr_org where id=@orgid 
	while @id is not null
	begin 
	  insert into @tree_table select a.id,a.code,a.name,a.status 
		from t_hr_org a where id=@id;
        select @id=parentid  from  t_hr_org where id=@id; 
	end
return 
end

--------

函数 2： 

内置函数 —— charindex('402881922215b1480122160a80ba0a74',o.shareempids,0)>0 

CHARINDEX ( char1 ,string1 [ , start_location ] ) 
如果 char1 或 string1 之一是 Unicode 数据类型（nvarchar 或 nchar）而另一个不是，则将另一个转换为 Unicode 数据类型。CHARINDEX 不能与 text、ntext 和 image 数据类型一起使用。
如果 char1 或 string1 之一为 NULL，并且数据库兼容级别为 70 或更高，则 CHARINDEX 将返回 NULL。如果数据库兼容级别为 65 或更低，则 CHARINDEX 将仅在 char1 和 string1 都为 NULL 时才返回 NULL 值。
如果在 char1 内找不到 string1，则 CHARINDEX 返回 0。
char1  一个表达式，其中包含要查找的字符的序列。
string1  一个表达式，通常是一个为指定序列搜索的列。string1 属于字符串数据类别。
start_location  开始在 string1 中搜索 char1 时的字符位置。
如果 start_location 未被指定、是一个负数或零，则将从 string1 的开头开始搜索。start_location 可以是 bigint 类型。
 string1 中包含 char1 时返回字符位置
 string1 中不包含 char1 时返回0


函数 3：

treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002') 参数：机构id

根据登录用户的机构id，获得权限机构树。


5. 【系统 数据库】 还是数据库的数据完整性 问题 
比如 ： T_Sys_Group 表 ，即保存了emp的id，又保存了 emp的companyid ，如果emp换了company，companyid就变了，
而这里还是原来的  companyid 

6. 继续中间树 

流程：
——> begin

——> 左边树 

——> action的index方法（设置将要查询树的参数） 

——> 通用框架页frame.jsp 

——> 其中中间树的src根据action 构造出来,页面请求src

——> TreeAction的filialetree方法 

public String filialetree() {
	this.getTreeList();
	request.setAttribute("orgid",getLoginInfo().getOrgId());
	return TREE;
}

——> 继续调用TreeAction的getTreeList方法（返回树）

private void getTreeList() {
	String linkName = request.getContextPath()+request.getParameter("linkName"); 
	String treebz = request.getParameter("treebz"); ///树类型
	List<Map> list = treeService.getOrgs(getLoginInfo().getOrgId(),getLoginInfo().getCompanyId(),linkName,getLoginInfo().getEmployeeId(),treebz);
	
	//加入共享的机构树
	List<Map> rs = addShareOrgList(linkName,list);		

	rs = cutCompany(rs);		

	request.setAttribute("treeList",rs );
}

——> 根据 result = tree 到 /common/tree/tree.jsp

——> 显示

——> end

通用的acton的方法

	protected void setNoDepartment(){
		request.setAttribute("market","market");
	}
设置中间树是否显示部门。

7. 【问题 系统 健壮性】系统的表由于没有对一些字段进行约束，在一些关键字段上，如果为空，将导致
程序不可预见的异常。
比如：协同门户 - 信息发布 下的规章制度 如果把  编制人 以空值存入数据库，在查看这条记录时，
会导致，错误：

严重: Servlet.service() for servlet default threw exception
java.lang.OutOfMemoryError: Java heap space

解决：（1） 客户端验证，某些字段不能为空 （2）数据库加不为空约束 (3) 程序判断不能为空

（3）重启下应用服务器

8. 下步 ，可以看看 系统 弹出框 的设计。？


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day11 2010年8月23日


1. 【系统 css样式】 要找想要的css样式来修饰html元素，可以在inpt，view 页面里去找符合要求的，不要
只在本页面找。

2. 学习一个关于xml的开源框架 Castor ，它主要是实现了 xml到object的 映射，还有其他一些功能的支持。

	本系统用castor插件实现菜单，权限等的配置，从xml配置到对象。

	必须权限的配置模块：
	
	在服务器启动时加载权限信息

	configservlet.java

	/**
	 * 加载权限管理的相关配置
	 * 
	 * @return
	 */
	private PolicyConfig loadPolicyConfig() throws IOException,
			MappingException, MarshalException, ValidationException {
		String realpath = getServletContext().getRealPath("WEB-INF");
		String separator = System.getProperty("file.separator");
		String policyMappingFile = Constant.SERVLET_FILENAME_POLICYMAPPING_APPLICATION;
		String policyFile = Constant.SERVLET_FILENAME_POLICY_APPLICATION;
		Mapping map = new Mapping();
		map.loadMapping(realpath + separator + policyMappingFile);
		Reader reader = new FileReader(realpath + separator + policyFile);
		Unmarshaller unmarshaller = new Unmarshaller(map);
		Object o = unmarshaller.unmarshal(reader);
		PolicyConfig policyConfig = (PolicyConfig) o;
		return policyConfig;
	}
	
	// 权限管理配置
	public static String SERVLET_FILENAME_POLICYMAPPING_APPLICATION = "\\classes\\policy-mapping.xml";
	public static String SERVLET_FILENAME_POLICY_APPLICATION = "\\classes\\policy-config.xml";
	public static String AAS_APPLICATION_PERMISSION = "policyconfig";

	castor工具，根据 policy-mapping.xm 里对象的配置，把policy-config.xml的内容转化为对象。

	castor补充：

		Castor是ExoLab Group下面的一个开放源代码的项目，它主要实现的是O/R映射功能。它主要API和数据接口为：JDO-like, SQL, OQL, 
	JDBC, LDAP, XML, DSML。它支持分布式目录事务处理和时间；提供处理XML、Directory、XADirectory的类库，提供从XML到JAVA类的
	转换机制。 　　Castor（http://castor.exolab..org/）是一种将Java对象和XML自动绑定的开源软件。它可以在Java对象、XML文本、SQL数
	据表以及LDAP目录之间绑定。
	

3. dtree （js菜单树工具）

4. 【系统 问题】 在选择 所属部门 的弹出框时，在做AJAX请求前，进行了一次全部的检索，应该是没有的检索。

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day12 2010年8月24日

1. 【 sql server 】 
要想看几张关联表的关系图图，可以在 数据库关系图 中新建数据库关系图，然后把所要看的表拉到里面，关系
就能显示出来了。（server2008） 适用情况是在表建立好了，想看看关系时

放一张表进去，在表上右击，选择 添加相关表 可以把关联的表都加载进来，还有他们间的关系。


2. 权限树的控制，是在用户登录时，已经把权限树的id作为字符串保存起来了，后续访问树时，都是先取出所要的
树，然后根据权限树匹配，返回有权限的树的menu集合，视图通过dtree来显示树。

3. menu 有 parentid 和 rightid ，其中parentid用于区别菜单级别，而rightid则用于权限的筛选。

【系统 rightid】?

按字面意思理解就好 right - 有 "权力" 的意思

4. 取二级菜单的代码片段 如下：

	LeftmenuService.java

	...
	if (parentid2 != null && (parentid2.indexOf(parentid+".")==0
			|| parentid2.equals(parentid)))
	{
		//System.out.println(menu.getId()+"=="+parentid2.indexOf(parentid+"."));
		returnlist.add(menu);
	}
	...


     之前已把所要的menu对象取出，通过 这个逻辑 (parentid2.indexOf(parentid+".")==0  找到所有parentid下的
子menu，（得益于parentid的设计，这里可以方便的找出所有子菜单，不管是否为了dtree的需要）。【系统 设计】





5．jvm错误 

#
# An unexpected error has been detected by Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x6d9d57dd, pid=3732, tid=3864
#
# Java VM: Java HotSpot(TM) Client VM (11.0-b15 mixed mode windows-x86)
# Problematic frame:
# V  [jvm.dll+0x1257dd]
#
# An error report file with more information is saved as:
# D:\tomcat-6_wyjs\bin\hs_err_pid3732.log
#
# If you would like to submit a bug report, please visit:
#   http://java.sun.com/webapps/bugreport/crash.jsp
#



6. 【任务】

系统管理 - 门户设置 - 职能门户

    每个员工各有不同的岗位，各个岗位又属于不同的职能，比如职能有高管，也有普通职员；员工的职能是在 
系统管理 - 门户设置 - 组织岗位 - 岗位信息 里配置的。

现在的问题是：通过在职能门户里，对已有的职能所对应的默认布局等系统设置进行关联，即
每种职能的员工都有默认的系统设置，如果没有自定义的话。对这种关联进行完善。

公司员工结构划分：不同的职能下有各种岗位，每个员工都对应一种岗位。

员工可能任职于多个部门，就对应多个岗位，也许对应多个职能。

每个岗位对应一种职能（划分）

【系统 业务逻辑】公司职能划分，也就是搞清楚几个表间的关系

自顶向下的结构： 职能 -> 岗位类型（抽象的） -> 岗位 -> 员工

///////////////////////////

就是 下面 3 张表的关系。

相关数据：

   T_Sys_province —— 职能表 ，一些

	id
	code
	name
	remark
	layoutid -- 引用布局表 id ，设置此职能对应默认布局 ，
	portlet
	portletname
	companyid
	createdate
	lastdate
	employeeid


关于快捷方式：
	
   T_Portal_shortcut —— 存放用户的快捷信息

	id
	companyid
	userid
	provinceid -- 引用职能id，设置被引用的职能 默认的快捷菜单 信息
	modulename
	url
	createdate
	lastdate
	lastemployeeid

   top.jsp 负责显示快捷链接

   ShortcutService.java 快捷方式服务层
   ShortcutDao.dao dao层
   Shortcut.java POJO类


关于布局信息：
   
   T_Portal_Layout —— 布局信息表,被其他表引用 比如 职能表要引用

	id
	name
	filename
	imagurl

关于岗位：


   T_HR_POSTINFO ——　职能/岗位 表
	    
	  
   t_hr_dutypost　——　员工表/职能表 的中间表





---//////////////////////---



-> 默认配置是在哪里加载的，什么时候加载的。

-> 在 职能信息 里添加职能 （系统管理-权限管理-职能信息），比如：高管，普通，技术等

-> 在 职能门户 里设置职能的默认配置信息（系统管理 - 门户设置），比如布局，排版等

-> 把 岗位 和职能相关联，（在 组织岗位-岗位信息 里进行了关联）

-> 把 员工和岗位相关联， （录入员工时，设置岗位信息，完成关联）

-> 修改检索SQL语句,把员工对应的职能配置信息取出来（没有自定义时），
自定义的话，直接返回，否则去找默认配置。

例子sql：

select f.* 
from t_SYS_User a,t_hr_employee b,t_hr_dutypost c,T_HR_postinfo d,T_Portal_shortcut f 
where a.employeeid=b.id 

and c.employeeid=b.id 
and c.dutypost=d.id 
and d.provinceid=f.provinceid 
and a.id='4028e3f02aa28fc3012aa3718e7500b3'

比如：shutcutservice.java 里就是这个逻辑。

-> 修改下 ShortcutDao.java 的 getMyShortcutList 方法 ，解决 默认快捷方式关联问题

问题：出来的快捷是重复的，在sql里用了个distinct

-> 


切入点：自定义设置的执行流程，因为自定义是正常的，从它这里分析。

>>>>>>>>>>>>>>快捷方式 部分<<<<<<<<<<<<<<<

自定义时：

  只涉及 一张表 T_Portal_shortcut 



岗位类型检索：

    select
        o.id,
        o.name as name 
    from
        f_dictvalue1('oa15') o 
    order by
        o.code

【系统 表】 t_sys_dictvalue 是数据字典表，包含各种信息 ，比如 岗位类型 有，奖项信息也有
把一些公用的数据都放到一张表里面。



7. 看看 默认布局 是哪里加载的

* LayoutAction.java 关于布局部分代码：

   //用户布局 
   Usermenu usermenu = new UsermenuService().loadUsermenu(userid,menuid);

	//如果用户没有自定义布局信息 则从MenuService里取
	if (usermenu==null|| usermenu.getId()==null)
	{
		Menu menu=new MenuService().loadMenu(menuid);
		portletids = menu.getPortletids();	
		layoutid=menu.getLayoutid();

	}//用户自定义了布局信息，则从UsermenuService里取
	else{
		portletids = usermenu.getPortletids();	
		layoutid=usermenu.getLayoutid();
	}

* 用户自定义布局：

表 T_Portal_Usermenu 
   
	id
	userid -- 用户标识 ，下面是公用的表，故没有这个字段
	menuid -- 1
	portletids
	layoutid


删除用户自定义布局例子：
delete from T_Portal_Usermenu where userid = '4028e3f02aa28fc3012aa3718e7500b3'

置空：update t_sys_province set layoutid = ''

* 默认布局：

表 T_Portal_Menu

	id
	layoutid
	code
	name
	demo
	url
	portletids

【问题】修改了职能表的布局信息，对用户布局没效果

应该是加载的时候，没有读取到默认布局？默认布局是存在职能表里面的。
看流程：

下面右边 (主显示窗口 mainpage)

<%=request.getContextPath()%>/<%=mainpage%>

--> http://localhost:8080/wyjs/portal/Layout_myview.action?userid=1&menuid=1

--> LayoutAction.java 的 myview()方法

这个方法里：
    ---> 根据 userid 获得 usermenu/menu (如果 usermenu == null ,则取默认 menu)

    ---> 根据usermenu/menu取得 portletids（应用），layoutid（样式页面，用于放应用）

     portletids = menu.getPortletids();	//要使用根据职能默认的portlet，这里需要修改
     layoutid=menu.getLayoutid();

    ---> 通过 PortletService，LayoutService 取得 portlets 和 layout

    ---> 重定向到上面得到的 页面

    ---。 显示

--> 没显示出来，应该就是取 默认 menu 时出错了。（取 usermenu 是正确的，测试过）

--> 问题出在 LayoutAction 的myview方法：
	...
	if (usermenu==null|| usermenu.getId()==null)

	{	//这个loadMenu 导致不能关联默认布局
		Menu menu=new MenuService().loadMenu(menuid);

		portletids = menu.getPortletids();	
		layoutid=menu.getLayoutid();
	}
	...

修改 ：
    其他不变，把 layoutid 从 t_sys_province 里面取出来。



    登录用户如何获得职能标识？menu表是哪里修改的？


    【系统 问题】 ？employee 和 province 没有进行关联 ，也就不能确定员工是属于哪个职能部门
    不过 ，可以根据 employeeid 获得职责id（在表 T_HR_DUTYPOST里），再获得职能id （职责/岗位id和职能id是对应的）

    最后，在logininfo 对象里获得postid，在取得其他的。

     默认 portlet 在哪里设置的？ 也就是menu里的setPortletid()方法，是在哪里调用的？即menu是在哪里被
     操作的？

     【系统 portlet 】找到 默认  portleet 配置是在配置布局时，一起配置的；布局页面上有个小图标，可以设置要显示的 portlet 

     设置默认布局，没有把默认 portlet 设置上 ，修改下。


     【系统 portlet 设置】

     * 用户自定义porlet的sql语句：

	update
	  T_Portal_Usermenu 
	set
	  layoutid='2c9480a619bd86b30119bda3d4e2000b',
	  portletids='2,2c90484f1b0594b1011b0599108d001a,2,2c9480d71a9e7fc7011a9e811c48001a' 
	where
	  userid='402881922436b95e01244b9bd632051d' 
	and 
	  menuid='1'
	
	用户 按钮 布局等信息都定义在表： T_Portal_Usermenu 

     * 设置默认portlet的sql语句：

	update
	 T_Sys_province 
	set
	 code=?,
	 name=?,
	 remark=?,
	 layoutid=?,
	 portlet=?,
	 portletname=?,
	 companyid=?,
	 createdate=?,
	 lastdate=?,
	 employeeid=? 
	where
	 id=?

     找到读取portlet配置的地方？




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day13 2010年8月25日


1. 【系统 岗位查询 sql】 

    select
        o.*,
        a.name as dutypostname,
        c.name as orgname  
    from
        t_hr_dutypost o  
    left join
        t_hr_postinfo a 
            on o.dutypost=a.id   
    left join
        F_org('') c 
            on o.dutyorgid=c.id   
    where
        o.employeeid='402881922215b1480122160a80ba0a74'  
        and isnull(o.isoff,'0') <> '1'  
    order by
        seq  






2. 系统的返回功能的实现

【系统 back】BackPage.java类 和 back 参数 ，实现了多级跳转的返回。二级检索，二级查询，多级检索，多级查询
待 ？


	通过把请求的 url ，存到session中，保存访问历史。通过 qlevel 判断是第几层的访问（主列表qlevel=1；弹出框列表qlevel=2） ，分别保存到 
	session中。
		也就是，在到达新页面前，已经保存了前一个页面的url，这样在这个新页面继续跳转时，只要传递一个back=1或者back=2，告诉
	程序执行返回操作。此时的功能只能返回到上一个视图，如果要多级则需要传递参数。


3. 系统 Portlet.java 类[【系统 portlet 数据对象】 POJO类 ？是个数据对象，包含"入口"的各项参数

可以按 "入口" 来解释；就是一个个独立的显示模块或功能，用户可以自己配置要显示哪些模块/功能，类似
于百度的"添加应用",在本系统里，比如 可以添加 "学习园地"，还可以添加 "最新帖子"，他们都对应各自的
portlet。

每个portlet就是一个小小的功能模块，或者说应用；类似百度的添加的各种应用 天气，股票等等；这样用户就
可以定制应用。

- 它的实现就是 配置好portlet信息，存在数据库，
- frame通过src（根据存在数据库中的配置）请求 portlet
- 每个portlet会请求相应的action
- action执行好后，转到视图 （这个视图是要准备好的，原来显示各种result的类型的数据）
- 于是frame就显示这个视图 (在这个，还是用了frame，它好比是个架子，有布局，但没内容；从而可以根据src的不同显示不同内容)
- 结束

系统portlet（类型portlet）应用的一整套流程。就是上面了。

比如本系统portlet在数据库中的字段：

id	title			filename					state	rightid

5	成本执行风险预警	/portal/Riskwarn_portallet.action?code=4	1	1
1	待处理流程		/oa/Flowdispatch_checklist.action		1	1
3	发起的流程		/oa/Flowdispatch_outlist.action			1	1
7	合同变更风险预警	/portal/Riskwarn_portallet.action?code=2	1	1
6	进度管理风险预警	/portal/Riskwarn_portallet.action?code=1	1	1
4	美丽今日		/erp/portal/portlet/weather.jsp			1	1, 1, 1, 1

注：rightid 是权限控制用的



布局信息，应该包括页面的样式，还有页面上该显示哪些portlet（应用）。

【系统 布局页面理解】对于布局页面，它是一个jsp页面。里面通过框架 frame 位置，大小，个数等的不同来构成不同的布局样式，
比如 2-2-2 ，1-1,等等。每个frame通过src去请求对应的portlet的action，action返回结果，于是一个包括多个portlet，
多样式的页面，显示出来了。


【系统 页面呈现】本系统大量的使用了frame，通过frame请求action，显示数据。

表 T_Portal_Portlet

	id
	title
	filename
	state
	rightid

POJO类 - Portlet.java
mapping文件 - Portlet.hbm.xml
action - PortletAction.java
service - PortletService.java
dao层 - PortletDao.java



4. 【sql delete】 delete 语句不能起别名 sql server


5. 【系统 数据丢失】？ 在 系统账号 列表页面里，不在使用（注销掉的）的账号无法显示。应该是显示出来的，
状态为，注销之类。

 因为 and o.state =1 这样只能看到非注销的user 【系统 特性】客户需求 可以在高级查询里显示注销后的信息。


6. 【问题 bug ？】 在设置职能默认快捷时，由于设置人权限高，某些快捷其他用户是看不到的。权限底的查看权限高的
快捷菜单时，导致错误。

解决办法一： 可以在设置默认快捷页面前，把要设置职能相应的权限也带进来，也就是设置不同的职能时，快捷
也是按照权限来显示的，过滤掉越级的快捷。
方法二 ：给进行设置的用户多个角色，切换不同角色来设置默认快捷。

当前，快捷列表选择框 是根据登录用户权限来显示的。分析下权限逻辑。

切换选择项时：

-> /wyjs/portal/Shortcut_myinputleft.action?....

-> ShortcutAction.java 的myinputleft方法（result = MYINPUTLEFT）

	<action class="com.erp.portal.action.ShortcutAction" method="{1}" name="Shortcut_*">
		<result name="myinput">/erp/portal/shortcutmyinput.jsp</result>
		<result name="myinputleft">/erp/portal/shortcutmyinputleft.jsp</result>
		<result type="redirect-action">Shortcut_list</result>
	</action>

-> /erp/portal/shortcutmyinputleft.jsp

-> 

-> 

-> 

-> 

-> 

-> 

-> 



7. 修改 配置 默认快捷 时可以置空 。如果用户也没配的话，就是没有快捷方式。
同样职能的布局也能置空 
-------
...
if("".equals(layoutid)||layoutid==null){
...
--------


8. 综合项目管理 部分 看看。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day14 2010年8月26日 


1. 【任务】

对 综合项目管理-分包管理 下的合同信息 里的 分包明细 里的某些字段 加入 js验证，不能为空。
后台插入记录已经做了处理，前台提示下，人性化。


流程在 navigater.txt 的 第 6 条

要验证的页面：

function dogo(index){
		
	if (index==1){
			self.location="/wyjs/pm/Subconbill_list.action?index=dogo(1)";
		}
	else if (index==2){
		self.location="/wyjs/pm/Stuff_view.action?index=dogo(2)";
	}
	else if (index==3){
		self.location="/wyjs/pm/Machine_view.action?index=dogo(3)";
	}
	else if (index==4){
			self.location.href="/wyjs/pm/Other_view.action?index=dogo(4)";
	}
	else if (index==5){
			self.location.href="#";
	}
}

* 人工类 页面：/erp/pm/subcontract/maninput.jsp
  
  要求：单价，数量不能空。2010-8-26


* 材料类 页面：/erp/pm/subcontract/stuffinput.jsp
  StuffAction.java

* 机械类 页面：/erp/pm/subcontract/machineinput.jsp
  MachineAction.java

* 其他 页面：/erp/pm/subcontract/otherinput.jsp
  OtherAction.java

  完成 ： 其他页面依次修改 ^^

2. js 操作

取得表格的行数 ，可以利用 dom模型里table对象的方法和属性。

   //返回一个table对象 注意：document,table等都属于DOM对象，而不是js对象，Array是js对象。
   var table = document.getElementById("t");
   var rs = table.rows;//返回一个数组
   alert(rs.length);

由于表格是可以操作的，添加删除等，这样就不能通过顺序来检测，只能通过标识来匹配存在。

//要么在提交时，给每个input触发下onblur方法，如何代码触发事件。这样每个对象都执行自己的onblur方法，
没有的话就不执行。

因为不管如何操作表格，有一个东西是不变的，只要插入了数据（不插入数据name应该为空，测试通过），那么 工种和工
种类别的name属性就确定下来了然后，根据name提取出object[i]里的i值（字符串操作），这样，就能拼接成
新name，也就可以取到这个对象了。

还是原来的方法，表格操作不会影响逻辑处理，只要处理下对象是否存在就行。

还有处理下 ，加行再删行导致的下标改变bug。主要是删除原有的行再

采用DOM节点方式，访问表格，来解决这个下标变化问题。


【js 不用jquery的精确定位 范围查找，定位元素】 
document.getElementById('maindiv').getElementsByTagName("p"); 

action层被修改了。 已改回来

除去非法数据：delete from T_PM_Manpower where waddate = '2010-08-27 00:00:00.000';

下面这段代码就是操作表格（通过DOM节点方式访问）的代码： 表格验证 js表格

/////////////
...
   //
   var table = document.getElementById("t");
   var trs = table.getElementsByTagName("tr");//
   var rs = table.rows;
   var cs = table.cells;
   rslen = rs.length;//行数
   cslen = cs.length/rslen;//列数   
   var flag = true;
   for(i=1;i<rslen;i++){	   		
   		var inputs = trs[i].getElementsByTagName("input");
   		var flag2 = false;
   		for(k=0;k<inputs.length;k++){
   			if(inputs.item(k).value != ""){
   				flag2 = true;
   			}
   		}
   		if(!flag2){//忽略这行,所有都为空
   			continue;
   		}else{//检查关键字段不能为空
   			var tds = trs[i].getElementsByTagName("td");
   			
   			for(m=0;m<tds.length;m++){
   				var input = tds[m].getElementsByTagName("input").item(0);
				switch(m){
					case 1:
					 if(input.value==""){
					  alert("编码不能为空");
					  input.focus();
					  return false;
					 }					
					case 2:
					 if(input.value==""){
					  alert("名称不能为空");
					  input.focus();
					  return false;
					 }
					 break
					case 3:
					 if(checkNum(input)){
					 }else{
					  flag = false;
					  alert("单价不能为空")
					  input.focus();
					  return false;
					 } 
					 break
					case 4:
					 if(checkNum(input)){
					 }else{
					  flag = false;
					  alert("数量不能为空");
					  input.focus();
					  return false;
					 }
					 break
					case 5:
					 break
				}
   			}
   		}	
   }

...
/////////////


3. struts2还支持多种集合的自动赋值 比如 List<Map>


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day15 2010年8月27日

1. 【系统 问题 js验证】 
对于day14的 任务 ，在人工页面上的js操作有问题。比如 在有多行输入情况下，无论是选择第几行添加数据
，添加后的数据都是按从上到下的顺序插入的，也就是不能在选择的选定行插入记录。这样，如果进行表格添加/删除的
话就导致一直不能在某一行上进行输入，最后只能不用那行，全部置空（一定要），否则js验证不通过。

问题是由于表格操作，改变了行的下标（表格操作）；只要保证插入记录时，是插入正确的行就OK.

js插入时，是按照表格下标构造input的name属性的，以实现提交到action后，action自动填充成对象集合。

要修改的话，就要考虑到方便action构造表单集合对象。

页面在：common\tableedit.jsp 

2. 基于上面问题，分析 表格插入记录流程

参考 navigater.txt 

【IDE MyEclipse】又体会到IDE的强大(觉得有必要去把IDE的常用功能查查)，方便 用search菜单下的搜索功
能，可以非常灵活的搜索文件，甚至文件里的字符串，支持模糊匹配查找。

比如：要找一个项目里某个js方法在那个文件里定义的。CTRL +　Ｈ　




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day16 2010年8月30日

1. 【问题】 第一次进 分包管理-合同信息 点击显示 分包明细 时，第一次点击视图是空白，需要再次点击，
后续正常了。

分析点击 "分包明细" 的流程，找出原因：

-> http://localhost:8080/wyjs/pm/Subconbill_list.action?id=4028e3f02aadca8d012aadfd84080068

-> action是 SubconbillAction.java 

配置如下：

	<action class="com.erp.pm.subcontract.action.SubconbillAction" method="{1}" name="Subconbill_*">
		<result name="view">/erp/pm/subcontract/subconbillview.jsp</result>
		<result name="input">/erp/pm/subcontract/subconbillinput.jsp</result>
		<result name="modinput">/erp/pm/subcontract/subconbillmodinput.jsp</result>
		<result name="list">/erp/pm/subcontract/subconbilllist.jsp</result>
		<result name="billlist">/erp/pm/subcontract/subconbillbilllist.jsp</result>
		<result name="bcillist">/erp/pm/subcontract/bcillist.jsp</result>
		<result name="unitlist">/erp/pm/subcontract/subconbillunitlist.jsp</result>
		<result name="inputbilllist">/erp/pm/subcontract/subconbillinputbilllist.jsp</result>
		<result name="inputunitlist">/erp/pm/subcontract/subconbillinputunitlist.jsp</result>				
		<result name="singlelist">/erp/pm/subcontract/subconbillsinglelist.jsp</result>
		<result name="unitsinglelist">/erp/pm/subcontract/subconbillunitsinglelist.jsp</result>
		<result name="maninput">/erp/pm/subcontract/maninput.jsp</result>
		<result type="redirect-action">Subconbill_list</result>
	</action>	

-> list()方法 return "bcillist"

-> /erp/pm/subcontract/bcillist.jsp 

-> 通过js提示测出 执行在这个页面某个地方 出问题了
---------------------------
<%@ page contentType="text/html; charset=UTF-8" language="java"%>
<%@ taglib prefix="s" uri="/struts-tags"%>
<%@page import="com.erp.util.Constant"%>
<%@ taglib prefix="eb" uri="ebTag"%>
<script type="text/javascript">
<!--
alert(0);
//-->
</script>
<eb:js file="prototype-1.6.0.2.js"/>
<script type="text/javascript">
<!--
alert(1);
//-->
</script>
<script type="text/javascript">
<!--
alert(2);
//-->
</script>
<%@ page import="org.apache.commons.lang.StringUtils"%>
<script type="text/javascript">
<!--
alert(3);
//-->
</script>
<%@include file="bcillistinc1.jsp"%>

----------------------------

只弹出 0 ，问题出在  <eb:js file="prototype-1.6.0.2.js"/> ，只有再次访问才能正常。


2. 理解 方案 的含义 —— 解决某一类问题的一套方法
...
   使用sitemesh给我们带来的是不仅仅是页面结构问题，它的出现让我们有更多的时间去关注底层业务逻辑，而
不是整个页面的风格和结构。它让我们摆脱了大量用include方式复用页面尴尬局面，它也提供了很大的灵活性
以及给我们提供了整合异构Web系统页面的一种方案。
...

—— 摘自：EB产品框架指南


3. 拿到 OA账号 设置 CVS

选择到 CVS Repositeries 工作模式，增加或修改配置。 ——　根据MyEclipse帮助
CVS和oa账号是不同的。。。

4. 【任务】
//////////
任务1：
系统设置-供应商信息
//////////

开始2010.8.30 - 2010.9.1

系统设置下：
-> menuset-config.xml 供应商 改为 分供商
-> policy-config.xml 供应商 改为 分供商

配置文件：struts-lqpm.xml
<action class="com.erp.lqpm.provider.action.ProviderAction" method="{1}" name="Provider_*">
	<result name="areatree">/erp/lqpm/provider/areatree.jsp</result>
	<result name="areatree2">/erp/lqpm/provider/areatree2.jsp</result>
	<result name="cityselect">/erp/lqpm/provider/cityselect.jsp</result>
	<result name="orgtree">/erp/lqpm/provider/orgtree.jsp</result>
	<result name="view">/erp/lqpm/provider/providerview.jsp?provider.status=${provider.status}</result>
	<result name="input">/erp/lqpm/provider/providerinput.jsp?provider.status=${provider.status}</result>
	<result name="indexlist">/erp/lqpm/provider/providerindexlist.jsp?provider.status=${provider.status}</result>
	<result name="providertypetree">/erp/lqpm/provider/providertypetree.jsp</result>
	<result name="providerlist">/erp/lqpm/provider/prolist.jsp</result>
	<result name="listexcel">/erp/lqpm/provider/providerlistexcel.jsp</result>
	<result name="list">/erp/lqpm/provider/providerlist.jsp?provider.status=${provider.status}</result>
	<result type="redirect-action">Provider_list?back=1&amp;type=${type}&amp;provider.typeid=${provider.typeid}&amp;provider.status=${provider.status}</result>
</action>  

action有：
ProviderAction.java

jsp页面：
上面配置文件里的

lqmp/provider/目录下jsp文件


要显示provider的类型字段，必须根据类型id，得到类型名字，再用provider封装，显示。
由于从数据库里是直接把数据以List<Map>方式查询出来的，即不是provider对象，而是page对象，故
只要修改sql语句，得到type值。

分供商 类型在表：
F_Dictvalue1('PM57')
 ——即在数字字典里面，通过传递参数给函数来查询值。
 【系统 数字字典 DICT 】


【系统 问题】 provider的action里 请求列表的逻辑有问题。

status 在where里面处理好了

检索 注意 join 连接 有些字段是空的，导致数据不对。

黑名单出不来。解决方法：类型在输入时 ，是必须的，保证不为空 即可解决pmode=null的记录查不出来。
也就是 非法数据 的问题。数据正确，就能正常显示。


分包商编码 为什么一样的问题？数据本身错误
-> 看 编码 的产生逻辑
	-----1-----
	...
	//自动生成编码。
	String code = citycode+new ProviderService().getNewCode();
	provider.setCode(code);
	...
	----------

	-----2-----
	...
	//生成当前时间的流水号。
	 public String getNewCode()
	    {
	        String code = "";
	        String date = (new SimpleDateFormat("yyyy")).format(new Date());
	        code = providerDao.getNewCode(date);
	        if(code != null )
	        {
	            int number = Integer.parseInt(code)+1;
	            code = String.valueOf(number);
	            if(code.length() < 4)
	            {
	                int j = code.length();
	                for(int i = 0; i < 4 - j; i++)
	                    code = (new StringBuilder("0")).append(code).toString();

	            }
	            code = (new StringBuilder(String.valueOf(date))).append(code).toString();
	        } else
	        {
	            code = (new StringBuilder(String.valueOf(date))).append("0001").toString();
	        }
	        return code;
	   }
	...
	----------

	-----3-----
	...
	// 获取当前时间的最大流水号。
	public String getNewCode(String year) {
		String code = null;
		StringBuffer sql=new StringBuffer();
		sql.append("select max(RIGHT(code,4)) as code from T_PM_Provider o ");
		sql.append(" where  SUBSTRING (code,7,4) = '");
		sql.append(year);
		sql.append("'");
		List list = HibernateUtil.getSQL2MapList(sql.toString());
		for (int i = 0; i < list.size(); i++) {
			Map map = (HashMap) list.get(i);
			code = (String) map.get("code");
		}

		return code;
	}
	...
	----------



  注：上面就是自动编号的基本生成逻辑。编码 = 城市编码 + 年 + 递增值 【系统 自动编码 】

  例子sql，操作字符串：
	----------
	select max(RIGHT(code,4)) as code 
	from T_PM_Provider o  
	where  SUBSTRING (code,7,4) = '2010'
	----------


高级查询部分：【系统 高级查询 配置】

配置步骤：

	* 在出现高级查询的页面（比如list页），加入下面语句，其中moduleid是要配置的
		<jsp:include page="/common/query/query_main.jsp">
		  <jsp:param name="moduleid" value="800" />    
		</jsp:include>
	* 配置上面的moduleid，在query-config.xml 里配置，上面才能读取到配置信息
	* 

-> 这个函数控制高级查询块的显示与否：query_ShowWindow （定义在 script/query.js ）
	function query_ShowWindow( t ){
		if( t == null) t = true;
		if( t )	document.all("query_div").style.display = "inline";
		else document.all("query_div").style.display = "none";
	}
-> moduleid是在列表页面（providerlist.jsp）里设置的，如下：

<jsp:include page="/common/query/query_main.jsp">
  <jsp:param name="moduleid" value="800" />    
</jsp:include>

-> 相关文件
 --> query_main.jsp ——　通用的高级查询窗口页面
 --> query_view.jsp —— 通用的根据不同模块显示不同字段查询的页面 （内部可以自定义逻辑，比如默认有机构树 ，
	可以配置自己的选择框）
		
		部分代码如下：这个页面，会根据查询配置文件的配置进行查询页面的渲染处理
		----------
		...
				else if ("dateMonth".equals(fieldtype)){%>
					<td>
						<input type="hidden" name="fieldcode" id="fieldcode_<%=index%>" value="<%=field.getFieldcode()%>" size="4"/>
						<input type="hidden" name="fieldtype" id="fieldtype_<%=index%>" value="<%=field.getFieldtype()%>" size="4" />
						从<input type="hidden" name="operation" id="operation_<%=index%>" value=" >= " size="2" />
						<input name="fieldvalue" class="inputcss2" style="width:130px" id="fieldvalue_<%=index%>"  onClick="setday( this ,'fieldvalue_<%=index%>')"   readonly="true"/>
						<%index++;%>
						<input type="hidden" name="fieldcode" id="fieldcode_<%=index%>" value="<%=field.getFieldcode()%>" size="4"/>
						<input type="hidden" name="fieldtype" id="fieldtype_<%=index%>" value="<%=field.getFieldtype()%>" size="4" />
						到<input type="hidden" name="operation" id="operation_<%=index%>" value=" <= " size="2" />
						<input name="fieldvalue" class="inputcss2" style="width:130px" id="fieldvalue_<%=index%>"  onClick="setday( this ,'fieldvalue_<%=index%>')"  readonly="true"/>
					</td>
				<%}
				else if (fieldtype.startsWith("lov:")){%>
					<td>
						<input type="hidden" name="fieldcode" id="fieldcode_<%=index%>" value="<%=field.getFieldcode()%>" size="4"/>
						<input type="hidden" name="fieldtype" id="fieldtype_<%=index%>" value="lov" size="4" />
						<input type="hidden" name="operation" id="operation_<%=index%>" value=" in " size="2" />
						<select name="fieldvalue" id="fieldvalue_<%=index%>" style="width:300px">
						<option value="">-------请选择-------</option>
						<%
						String code = fieldtype.split(":")[1];
						DictvalueService lov = new DictvalueService();
						List lst = lov.getDictvalueList2(code);
						for (int k=0;k<lst.size();k++)
						{
						HashMap dict=(HashMap)lst.get(k);
						%>
						<option value="<%=dict.get("id")%>"><%=dict.get("name")%></option>
						<%}%></select>
					</td>
				<%}
				else if (fieldtype.startsWith("yearlist")){%>
		...
		----------
		处理下面的配置文件为具体的表单元素。

		配置文件部分代码如下：
		----------
		...
			<module title="分包计划明细" id="t_pm_fb_subcontractplan_mx"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.01" fieldname="分包内容" fieldcode="o.content" fieldtype="text"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.02" fieldname="分包类型" fieldcode="o.type" fieldtype="enum:1:劳务:2:专业"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.03" fieldname="组织招标单位" fieldcode="a.name" fieldtype="norg"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.04" fieldname="招标形式" fieldcode="o.invitebidtype" fieldtype="enum:1:招标:2:议标"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.05" fieldname="计价方式" fieldcode="b.name" fieldtype="lov2:pmbjxs"/>
			      <field moduleid="t_pm_fb_subcontractplan_mx" id="t_pm_fb_subcontractplan_mx.06" fieldname="预计分包金额" fieldcode="o.presubmoney" fieldtype="text"/>
		...
		----------



-> 根据 moduleid 来动态加载其下配置的所有字段
 QueryService service=new QueryService();
 List fields=service.getFieldList(request,moduleid); —— 摘自 query_view.jsp

-> QueryService.java 

用到 QUERY_APPLICATION_PERMISSION 标识的对象
是在configservlet里设置的：
	getServletContext().setAttribute(
			Constant.QUERY_APPLICATION_PERMISSION, loadQueryConfig());

  loadQueryConfig() —— 加载高级查询的相关配置

  代码如下：【系统 高级查询 配置】 这里涉及系统通用高级查询信息,通过下面，了解系统高级查询
  的一个基本流程。


------ 上面，就是系统高级查询实现基本原理  ------

	简要描述：利用xml插件castor，将高级查询信息配置到xml文件里，此文件符合castor的xml格式，
然后在系统初始化时利用castor将配置文件转换为一个个的查询对象数组，存于servlet上下文中(ServletContext)
;当某个查询页面被调用时，根据传入的moduleid在前面的上下文中找到对应的查询信息，然后在 query_view.jsp
页面里迭代出这些表单 ，提交到action后，利用QueryUtil工具类 的如下方法：
	-------
	...
		public static ArrayList getQueryWhere(HttpServletRequest request,
				HttpServletResponse response) {
			String[] fieldcode = request.getParameterValues("fieldcode");
			String[] fieldvalue = request.getParameterValues("fieldvalue");
			String[] fieldtype = request.getParameterValues("fieldtype");
			String[] operation = request.getParameterValues("operation");

			ArrayList lst = new ArrayList();
			
			if (fieldcode == null) {
				return lst;
			}
			for (int i = 0; i < fieldcode.length; i++) {
				if (ConvertUtil.isNotEmpty(fieldvalue[i])) {
					Query q = new Query(fieldtype[i],fieldcode[i],operation[i],fieldvalue[i]);
					lst.add(q);
				}
			}
			return lst;
		}
	...
	-------
	和 public static String getQueryWhere(ArrayList list) 方法，
		-------
		...
			public static String getQueryWhere(ArrayList list) {
				String where = "";
				for (int i = 0; i < list.size(); i++) {
					Query q = (Query) list.get(i);
					String fieldtype = q.getFieldtype();
					String fieldcode = q.getFieldcode();
					String operation = q.getOperate();
					String fieldvalue = q.getFieldvalue();

					if (fieldvalue == null || fieldvalue.length() == 0) {
						continue;
					}
					if (operation.indexOf("like") >= 0) {
						where += " and " + fieldcode + " like '%" + fieldvalue + "%'";
						
					} else {
						if (fieldtype.equals("text")) {
							where += " and " + fieldcode + "  " + operation + "'"
									+ fieldvalue + "'";
						}else if (fieldtype.equals("date")) {
							where += "  and " + fieldcode + "  " + operation + " '"
									+ fieldvalue + "'";
						}else if (fieldtype.equals("dateMonth")) {
							where += "  and " + fieldcode + "  " + operation + " '"
									+ fieldvalue.substring(0,7) + "'";
						}else if (fieldtype.equals("number")) {
							where += " and  " + fieldcode + " " + operation + " "
									+ fieldvalue;
						}else if (fieldtype.equals(QConstant.T_LOV) && operation.equals(QConstant.OP_IN)) {
							where += " and  " + fieldcode + " " + operation + " (select id from F_Dictvalue('"+ fieldvalue+"'))"; 
						}else if (fieldtype.equals(QConstant.T_ORG) && operation.equals(QConstant.OP_IN)) {
							where += " and  " + fieldcode + " " + operation + " (select id from F_ORG('"+ fieldvalue+"'))";
						} else {
								where += " and  " + fieldcode + " " + operation + "  '"
									+ fieldvalue + "'";
						}
					}
				}
				return where;
			}
		...
		--------
			上面，这个方法里处理了特殊的查询条件 比如机构查询，字典查询；要进行供应类别多条件查询，需要在这个扩展，扩展一个
		多条件查询。
			具体，就是对一个多个条件拼接的字符串，要分别构造条件查询。类似 QConstant.T_ORG 要进行机构查询的定制。

		扩展如下代码：

				else if (fieldtype.equals(QConstant.T_MULTI_AND) && operation.equals(QConstant.OP_IN)) {
					String[] valueArr = fieldvalue.split(",");
					for (String value : valueArr) {
						where += " and  charindex('" + value + "', " + fieldcode + ",0) > 0 ";//
					}
				} 

	将提交的表单值构造为sql条件 ，追加到where条件中 ok。

	高级查询条件，以and的方式追加到lsql的where条件后面，结合系统的查询功能，实现可配置，易扩展的
查询功能。

注意：query_view.jsp 中取应用的路径变量 path ：var path = '<%=request.getContextPath()%>'; 
	例：var url = path + "/pm/Providerinfo_getSupplyType.action?time="+escape(new Date())+"&type=radio";

	当把js方法合并到js文件中时，可以用这个页面的js变量获得 contextpath，

//////////////////////
补充：

	普通查询，高级查询 可以在 action的 getQuerywhere 方法里配置，list页设置了那些检索字段，这里给它配置上。【查询 配置】

/////////////////////

	private QueryConfig loadQueryConfig() throws IOException, MappingException,
			MarshalException, ValidationException {
		String realpath = getServletContext().getRealPath("WEB-INF");
		String separator = System.getProperty("file.separator");
		String queryMappingFile = Constant.SERVLET_FILENAME_QUERYMAPPING_APPLICATION;
		String queryFile = Constant.SERVLET_FILENAME_QUERY_APPLICATION;

		Mapping map = new Mapping();
		map.loadMapping(realpath + separator + queryMappingFile);
		Reader reader = new FileReader(realpath + separator + queryFile);
		Unmarshaller unmarshaller = new Unmarshaller(map);
		Object o = unmarshaller.unmarshal(reader);
		QueryConfig queryConfig = (QueryConfig) o;

		return queryConfig;

	}
  --> SERVLET_FILENAME_QUERYMAPPING_APPLICATION = "\\classes\\query-mapping.xml"
      SERVLET_FILENAME_QUERY_APPLICATION = "\\classes\\query-config.xml"

      ---> 真正的query配置在 query-config.xml 里，所以这里也是要修改的 从 "供应商" 改为 "分供商"

      ---> 修改 query-config.xml ，改名字 ，并加入 类型（对应 pmode 字段，引用字典里的id，得到类型名称）
      字段，类型字段是在字典里定义的，状态有 ：
		01	材料供应
		02	分包商
		03	劳务单包
		99	其他
		04	设备供应
		05	设备租赁
		06	周材租赁

      line:2051
      	<module title="供应商查询 " id="800"/>
		<field moduleid="800" id="800.01" fieldname="供应商编码" fieldcode="o.code" fieldtype="text"/>
		<field moduleid="800" id="800.02" fieldname="供应商名称" fieldcode="o.name" fieldtype="text"/>
		<field moduleid="800" id="800.02" fieldname="地址" fieldcode="o.address" fieldtype="text"/>
		<field moduleid="800" id="800.04" fieldname="联系人" fieldcode="o.linkuser" fieldtype="text"/>
		<field moduleid="800" id="800.05" fieldname="联系电话" fieldcode="o.phone" fieldtype="text"/>
		<field moduleid="800" id="800.06" fieldname="供应商状态" fieldcode="o.status" fieldtype="enum:0:备用:1:合格:2:不合格:3:黑名单"/>

  --> 通过上面配置高级查询代码，用了xml工具把xml文件映射为对象，类似菜单的方式。

  --> 修改好配置文件后，修改查询的sql

  下面是点击高级查询的 "执行查询" 按钮
  --> query_doQuery()

  --> query_doQuery_JSP() (定义在 /wyjs/script/query.js )

  --> form的action路径：/lqpm/Provider_list.action

  --> ProviderAction的list方法， qlevel 作为普通查询（qlevel=1）和高级查询（qlevel=2）的标志

      getQuerywhere(qlevel,provider) —— 设置查询条件


########  注意： ###############

  上面步骤，修改为直接修改 query-config.xml 把类型字段配置为数字字典。上面步骤可作为分析参考
done



//////////
任务2：
//////////
done

//////////
任务3：
//////////
done


//////////
任务4：
////////// 

系统好像没有加入修改权限设置，换个用户就会出现这个问题，"您无权修改该记录"，

把这个验证去掉。

修改 根据权限不同 分：disable，正常

disable的处理逻辑是：

	<input id="updatesubmit" type="button" value="  修改"
		class="button_mod" onclick="update()"

		<eb:right id="2.2.4.4"/>

		onmouseout="this.className='button_mod'"
		onmouseover="this.className='button_mod2'"/>

根据


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day17 2010年8月31日

1. 【系统 建议】 有些查询，比如列表页面，只需要显示部分字段，不需要全部查询。

2. 写月总结：
对框架的了解，对任务的完成，做了哪些事，还有那些问题。

3. 继续在昨天的记录基础上，继续任务。

4. 系统的 高级查询 相关

5. 【调试 js 文件】
有时候 需要把浏览器关闭，才能调用修改过的js文件。否则即使部署的文件都对了，但页面还是用原来的。
解决方法：关闭浏览器，重新打开。

6. 高级查询 支持数字字典的数据类型 怎么解释？找个例子看看

下面是 query_view.jsp部分代码，体会支持数字字典类型：
	-----------------
	...
	else if (fieldtype.startsWith("lov")){%>
	<td>
		<input type="hidden" name="fieldcode" id="fieldcode_<%=index%>" value="<%=field.getFieldcode()%>" size="4"/>
		<input type="hidden" name="fieldtype" id="fieldtype_<%=index%>" value="lov" size="4" />
		<input type="hidden" name="operation" id="operation_<%=index%>" value=" in " size="2" />
		<select name="fieldvalue" id="fieldvalue_<%=index%>" style="width:300px">
		<option value="">-------请选择-------</option>
		<%
		String code = fieldtype.split(":")[1];
		DictvalueService lov = new DictvalueService();
		List lst = lov.getDictvalueList2(code);
		for (int k=0;k<lst.size();k++)
		{
		HashMap dict=(HashMap)lst.get(k);
		%>
		<option value="<%=dict.get("id")%>"><%=dict.get("name")%></option>
		<%}%></select>
	</td>
	...
	------------------


	

在 query-config.xml 里配置时，这样配置：
	
	---------------
	...
	<module title="分供商查询 " id="800"/>
	...
	<field moduleid="800" id="800.03" fieldname="类型" fieldcode="o.pmode" fieldtype="lov:PM57"/>
	...
	---------------

	注：query_view.jsp 里根据 fieldtype 字符串，以及fieldtype以什么开头来进行相应的处理。

这样配置好后，高级查询窗口里，就有了 类型 选择项 ，并能正确执行查询。


【系统 高级查询 理解 ？】 从这次的，向分供商的高级查询里添加个"类型"查询字段（数据字典类型），并能正确
执行查询的过程，理解系统这块的设计思路。
【系统 查询系统 设计 】

经过测试 ，发现系统特点 【系统 特点 系统设置-分供商信息 高级查询 】
  
  高级查询的结果和所在的分供商状态页面有关，在黑名单列表页面，只能查询黑名单里的分供商，其他显示不出来。
这样的设计？

7.【任务】

//////////
补充任务 5

T_HR_Org

给 "公告维护"等列表页面，加入发布部门的显示字段
* 如何集合是page的，直接根据id找到name，修改sql语句 ，这里也体现了不是完全的O/R映射，而是设计了用于
列表显示的page对象，体会设计。【系统 设计 page 对象 】
* 如果是POJO类返回的，封装下再显示。

公告维护 done

这里注意 列表页面是 afficheworklist.jsp 不要搞错了。命名的例外

最新公告 done
T_OA_NEWSAFFICHE

规章制度 done

学习园地 done 修改list页面；修改sql语句（根据orgid得到orgname）
T_OA_NEWS

软件下载 done
T_OA_SOFTDOWNLOAD

给输入页面 加入发布部分 不能为空 验证

资料共享 done
T_OA_SHARINGINFO

注：
1）sql语句的union查询要保证字段一致

2）套路是：根据url找到action，再找到list方法，进到dao层里的sql，修改sql，修改页面,测试通过，OK

3）锻炼了sql语句分析，修改

//////////

//////////
补充任务 6

* 将分供商信息里 列表页面里高级查询里的分供商状态字段去掉，要保持高级查询和列表显示字段的一致。

* 对上面补充的字段的列表页面里的高级查询也修改下，加入发布部门的查询字段

-> 添加的字段，是text字段，模糊匹配，不能用数字字典又要跨表查询 解决？

参考其他配置，只要在配置文件里 把加入字段的fieldcode设置为对应sql语句里的字段 ，就可以查询了。

-> 根据 现有的高级查询字段名，找到相应的页面在 query-config.xml 里配置的位置。

【系统 问题】 资料中心 能正常，信息发布里由于是在取出对象后再取orgname的，故需要修改下sql语句。

sql错误：在进行多层子查询时 报 无法绑定由多个部分组成的标识符 "org.name"。 
可能就是因为没有取到正确的层的字段别名 比如下面：即把子查询的多个平行字段拿来比较。

错误的 ：

-----------

    select
        count(*) as count 
    from
        (  select
            o.*,
            c.content 
        from
            ( select
                distinct r.id,
                r.name,
                r.createdate,
                r.publisshdate,
                r.orgid,
                r.publisher,
                r.publisherid,
                r.draftmanid,
                r.draftname,
                org.name as orgname 
            from
                T_OA_Regulations r ,
                T_HR_Org org,
                t_sys_group g ,
                F_allparentORG('402881e6220b291201220b9a671c0002') p 
            where
                (
                    charindex('402881922215b1480122160a80ba0a74',r.shareempids,0)>0 
                    or charindex(p.id,r.shareorgids,0)>0 
                    or (
                        charindex('402881922215b1480122160a80ba0a74',g.empids,0)>0 
                        and charindex(g.id,r.sharegroupids,0)>0
                    ) 
                    or r.orgid in (
                        select
                            id 
                        from
                            treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002')
                    ) 
                ) 
                and r.orgid in(
                    select
                        id 
                    from
                        treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002') 
                ) 
                and r.orgid = org.id 
            ) o 
        left join
            T_OA_Regulations c 
                on c.id = o.id 
        where
            1=1 
            and org.name like '%12%'  
        ) liguohui

-----------

正确的：
-----------

    select
        count(*) as count 
    from
        (  select
            o.*,
            c.content 
        from
            ( select
                distinct r.id,
                r.name,
                r.createdate,
                r.publisshdate,
                r.orgid,
                r.publisher,
                r.publisherid,
                r.draftmanid,
                r.draftname,
                org.name as orgname 
            from
                T_OA_Regulations r ,
                T_HR_Org org,
                t_sys_group g ,
                F_allparentORG('402881e6220b291201220b9a671c0002') p 
            where
                (
                    charindex('402881922215b1480122160a80ba0a74',r.shareempids,0)>0 
                    or charindex(p.id,r.shareorgids,0)>0 
                    or (
                        charindex('402881922215b1480122160a80ba0a74',g.empids,0)>0 
                        and charindex(g.id,r.sharegroupids,0)>0
                    ) 
                    or r.orgid in (
                        select
                            id 
                        from
                            treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002')
                    ) 
                ) 
                and r.orgid in(
                    select
                        id 
                    from
                        treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002') 
                ) 
                and r.orgid = org.id 
            ) o 
        left join
            T_OA_Regulations c 
                on c.id = o.id 
        where
            1=1 
            and orgname like '%12%'  -- 更正之处，要注意所在的层级 ；这里也是高级查询加入到条件
        ) liguohui

-----------

就是最后的where子句取字段名时错误了。

【sql 调试】 可以把控制台的sql拷贝到sql执行窗口 ，调试错误，再修改sql字符串。

【经验】找到问题出现的原因，是解决问题的关键
all done
//////////



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day18 2010年9月1日

1.总结

2. 对于昨天添加的 所属部门 查询字段 吧原来按照输入查询改为选择框。sql语句暂时不改回来。

3. 【eip 域名 bug】 高级搜索的配置有问题，配置错误

4. 还是对于 高级查询 在query-config.xml里配置后，高级查询窗口就能用，底层是如何实现的？
【问题】

5. 把职能默认portlet修改下。
有账号读取默认布局会有问题。

测试过程又见：java.lang.OutOfMemoryError: Java heap space

6. EditPlus的小技巧 搜索时，在搜索对话里点击 SetMarker 可以把要找的内容所在的行在行头标识
出来。

7. 这样改变 ces 样式

onmouseout="this.className='button_mod'" onmouseover="this.className='button_mod2'"

拓展见识了 。
本系统涉及到js操作的方方面面，要花点时间看看。

8. 这样复杂的系统，在设计上进行了总体的考虑，对功能模块分而开发之，对公共模块进行抽取，使得
系统繁而不乱。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day19 2010年9月2日


1. 【系统 设计 基础数据 数据字典】 

在 系统数据-基础数据 下面有各种 基础数据 的查看和管理入口。比如数字字典的管理，计量单位的管理等等。

并有公共的访问函数，传递不同的字典名，即可得到对应的数据。看看这个处理字段表的函数的逻辑实现 ？。
F_dictvalue,f_dictvalue1 ... 

比如：f_dictvalue1('oa15') 是如何检索的?


2. 继续 综合项目管理-

错误：Exception in thread "http-8080-6" java.lang.OutOfMemoryError: Java heap space

然后tomcat就没反应了。

【系统 问题】tomcat占内存为155400 k ,发生了错误后，就再也不变化了。tomcat刚启动占内存119808 k。

测试了一下 ，把内存耗到 15k5400k超过几次 服务器就挂了。


3. 开始 研究报表 部分

先看下面几部分：

综合项目管控
用工管理
材料管理
技术质量报表

注：在查看报表时，需要选择机构，因为报表显示的不是列表，而是一个表，要选定要看的项目或机构。
不要误认为没数据。

问题：

*  看数据是如何合出来的？
*  需要合哪些数据？数据哪里来的
*  要合成哪些数据？报表需要哪些数据的显示
*  合数据的流程；
*  涉及到哪些东西。

以 宁波分公司 的各个报表作为参考，分析不同的报表格式，要求（数据有限）。


4. 多看看 框架文档说明

5. 重复提醒一个细节：分析问题、流程的时候，以主要流程为主线，不要轻易扩大分析面。

6. 对apache开发的commons组件的使用


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 20   2010年9月3日


1. 做报表 的步骤

 * 做那类报表，格式字段（管理单元）是什么 比如：是成本分析，还是资金分析，还是设备分析
 * 从那几个表里取数据（原始数据的分布）
 * 哪些数据是要特别计算得出的
 * 得到表头列名和对应的数据后，显示

 以 List<Map> 对象来保存报表数据，给视图显示。

2. 报表的管理单元，即要得出的列名在数据字典里有定义

可以采用下面方法，找到报表管理单元所在的字典编码：
  -----------
   select * from T_Sys_Dictvalue d where d.name =  '总部季度检查'
  -----------
 这样，就找到了  '总部季度检查' 及其相关的内容所在数字字典的情况。其他类推。


3. 系统的资源表 T_PM_RESOURCE 保存工程上用到的各种资源信息。


4. 分析报表时 ，用到了 GUtilService 类 ，有时间看看。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 21 2010年9月6日

1. 继续看报表逻辑

项目级 报表的数据是 通过列名 和 项目部id（或分公司id ）传递给一个方法，由其来计算的。

简要步骤：
  先得到列名，即要整合的字段；
  在根据列名map（管理单元），和id 去获得数据；
  添加小计；
  视图显示；

涉及到的表：



合同统一一张表，项目一张表，合同成本一张表，etc

通过涉及到的各个表。来看报表的生成过程；看系统是把这些个数据如何分解层一个个表的数据的 比如：某个项目
的合同的控制单元的数据，是根据控制单元的id来设置和读取的。

【系统 建议】能提供表的说明 和 java类的关键字段注释，对后续开发修改调试都很有帮助。

【系统 方法】 把本系统报表数据的数据保存结构，和这种数据结构在视图上的读取方式搞明白，其他的报表呈现，可以
参考这种方式。

2. 【系统 问题】报表部分，大量关键变量都没注释，影响阅读。数据库表应该有说明。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day22 2010年9月7日

1. 继续看报表部分 不同层级的（项目，分公司，集团）、不同类别（成本报表，资金报表，质量报表等）的报表
 * 系统 action的定义，有的action的方法在父类里定义的，不要被没有相应的action方法假象迷惑。比如：FundReportAction
 的tree方法，是定义在其父类ReportBaseAction里的，因为tree方法是公用的，体会设计意图。

 在tree方法里根据不同的显示级别（项目，分公司，集团）返回相应的树的数据，通过dtree显示出来。

 * 报表父类action  - ReportBaseAction 看看这个报表父类action都做了什么

    类的说明：
	 管控报表->所有报表的父类：
	 提供index、tree、waiting、list方法的公用功能部分
	 以减少其他的报表Action中的代码量
	 提高代码的重用性！

 * 

 * 集团级的 不需要组织树
 
 * 修改 ： 改宁波分公司为浙北分公司 作为报表分析的例子。

2. b/s 模式极大的可扩展性和公众参与性扩展性，都是C/S结构不能比的。c/s可以开发插件，但要求一般
都比较高。

3. tomcat的内存配置 

set JAVA_OPTS=-Xms30m -Xmx256m 

原来是60多M(可以在服务器管理页面的状态信息里看到)，配置多点后，运行速度快多了。

如果要在MyEclipse里启动tomcat，可以在服务器配置里的 ..tomcat 5.x> jdk 里的
Optional java VM arguments 输入框内（一般为空）加入：-Xms30m -Xmx256m 
这样，从MyEclipse里启动tomcat就能按照配置的内存启动。

应用程序在大负载的情况下可以把-Xms和-Xmx设为一样大，避免频繁的请求内存。


* 在tomcat里配置：

	Windows下，在文件/bin/catalina.bat，Unix下，在文件/bin/catalina.sh的前面，增加如下设置：

	JAVA_OPTS='-Xms【初始化内存大小】

	-Xmx【可以使用的最大内存】'

	需要把这个两个参数值调大。例如：

	    JAVA_OPTS='-Xms256m-Xmx512m'   
	     

	表示初始化内存为256MB，可以使用的最大内存为512MB。


		另外需要考虑的是Java提供的垃圾回收机制。虚拟机的堆大小决定了虚拟机花费在收集垃圾上的时间和频度。
	收集垃圾可以接受的速度与应用有关，应该通过分析实际的垃圾收集的时间和频率来调整。如果堆的大小很大，
	那么完全垃圾收集就会很慢，但是频度会降低。如果你把堆的大小和内存的需要一致，完全收集就很快，
	但是会更加频繁。调整堆大小的的目的是最小化垃圾收集的时间，以在特定的时间内最大化处理客户的请求。
	在基准测试的时候，为保证最好的性能，要把堆的大小设大，保证垃圾收集不在整个基准测试的过程中出现。

		如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5秒。如果垃圾收集成为瓶颈，
	那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理
	内存的80%作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。

	来自：http://developer.51cto.com/art/201009/227046.htm

	tomcat调优 jvm内存调优 java_opts java性能 tomcat性能 jvm性能

 * 根据Java虚拟机规范，JVM将内存划分为：

    New（年轻代）
    Tenured（年老代）
    永久代（Perm）

  其中New和Tenured属于堆内存，堆内存会从JVM启动参数（-Xmx:3G）指定的内存中分配，Perm不属于堆内存，
  有虚拟机直接分配，但可以通过-XX:PermSize -XX:MaxPermSize 等参数调整其大小。

	
 【系统 调优 perm内存方面】
	本系统，摘掉多余的类，方法，减少不必要的加载；代码中对象变量尽量不要存放在大范围中，尽量做到
用好就等待回收。；即时的释放各种内存占用。
	利用好各种缓存和连接池来提高反应速度 页面缓存，结果集缓存，数据库连接池等。
	jvm调优

gc回收 垃圾回收
	
	垃圾回收算法
	  垃圾回收算法可以分为三类，都基于标记-清除（复制）算法：

	•	Serial算法（单线程）
	•	并行算法
	•	并发算法
	  JVM会根据机器的硬件配置对每个内存代选择适合的回收算法，比如，如果机器多于1个核，会对年轻代选择并行算法，关于选择细节请参考JVM调优文档。
	  稍微解释下的是，并行算法是用多线程进行垃圾回收，回收期间会暂停程序的执行，而并发算法，也是多线程回收，但期间不停止应用执行

	  “并行算法是用多线程进行垃圾回收，回收期间会暂停程序的执行，而并发算法，也是多线程回收，但期间不停止应用执行”

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day23 2010年9月8日 

1. 整sql server

尝试从2005到2008,不好升级；还是按照2008 

还原数据库时，选择"覆盖"选项，否则提示数据库不一致不能还原。特别适用，重新建立数据库，并把
现有的数据库备份还原的情况。
【sql server 2008 还原】
期间还碰到端口占用问题，关掉服务就OK了。

配置 ODBC

2.  配置powerdesigner 到sql server2008的链接；
步骤是：
1) 先配置数据源（ODBC配置） - 在配置这里时，碰到个小问题：在选择链接那个sql server服务器的时候，
选用了错误的服务器，其实，对应本机的话只要输入localhost就OK。后续步骤就很顺利了，以前也配置过的。

【本机 = localhost windws系统的特点】在你不确定机子名称时，这个localhost是最好的选择。
2) 在powerdesigner里配置：

3. .mpp扩展名的文件 是Office Project  微软项目管理软件 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day24 2010年9月9日

1. 提交修改的文件 到cvs服务器

【开发 cvs 更新】
	每次对系统进行更新时，对于数据库的更新，要及时同步到数据库里，这个要特别注意！
(其他内容直接更新就OK，而数据库的更新时必须再同步到数据库才算更新完成)

2. 根据数据库表的某些字段的注释，看相关的表及表间的关系。

3. sql server 2008 shift+单击 批量选择单选按钮

4.  分析 "项目级设备分布" 用到的查询语句和表

--------------
    --------------- 取得内租设备信息------------
    select
        p.id as prjid, -- 项目id
        p.name as prjname, -- 项目名
        count(o.id) as neizu, -- 内租id
        type.code, -- 设备类别码 （区分设备所属不同的类别）
        type.name as typename  -- 设备类别名（可以是设备名，也可以是设备类别名-其parentid为空） 
	                                     -- 第一行的字段名，从这里取 ，有多少这个值就有多少个大列
    from
        T_PM_MachineInnerEnterDetail o   -- 设备内租进场明细表
    left join
        T_PM_MachineInnerEnter fu  -- 设备内租进场表
            on fu.id = o.machineid   
    left join
        t_epm_hqmachineryregisterdetail register  -- 自购设备登记明细表
            on register.id = o.registid    
    left join
        T_PM_EquipSort type  -- 设备类别表
            on type.id = register.typeid   
    left join
        t_pm_project p  -- 项目表  
            on p.id = fu.prjid   
    left join
        T_HR_Org org  -- 机构部门表
            on org.id = p.deptid   
    where
        1=1   
        and (
            p.deptid = '4028819222bed3240122cf8b424a2f83'   
            or org.parentid = '4028819222bed3240122cf8b424a2f83'
        )   
        and o.id not in (
            select
                ISNULL(o.indetailid,
                '')    
            from
                T_PM_MachineInnerExitDetail o    -- 设备内租退场明细表 （项目综合管理-机械设备管理）
            left join
                T_PM_MachineInnerExit fu  -- 设备内租退场表
                    on fu.id = o.machineid    
            where
                1=1  
        )   
    group by
        register.typeid,
        p.id,
        p.name,
        type.code,
        type.name  

Hibernate: 
    --------------- 取得外租设备信息------------
    select
        p.id as prjid, -- 项目id
        p.name as prjname, -- 项目名
        count(o.id) as waizu, -- 外租id
        type.code, -- 
        type.name as typename   -- 
    from
        t_pm_machineoutenterdetail o   -- 设备外租进场明细表
    left join
        T_PM_MachineOutEnter fu  -- 设备外租进场表  
            on fu.id = o.machineid   
    left join
        T_PM_EquipOutLendDetail register  -- 设备外借明细表
            on register.id = o.equipid    
    left join
        T_PM_EquipSort type  --
            on type.id = register.sortid   
    left join
        t_pm_project p  -- 
            on p.id = fu.prjid   
    left join
        T_HR_Org org  -- 
            on org.id = p.deptid   
    where
        1=1   
        and (
            p.deptid = '4028819222bed3240122cf8b424a2f83'   
            or org.parentid = '4028819222bed3240122cf8b424a2f83'
        )   
        and o.id not in (
            select
                ISNULL(o.indetailid,
                '')    
            from
                T_PM_MachineInnerExitDetail o    -- 
            left join
                T_PM_MachineInnerExit fu -- 
                    on fu.id = o.machineid    
            where
                1=1  
        )   
    group by
        register.sortid,
        p.id,
        p.name,
        type.code,
        type.name  

Hibernate: 
    --------------- 取得自供设备信息------------
    select
        p.id as prjid, -- 
        p.name as prjname, -- 
        count(o.id) as zigou, -- 自购id
        type.code,
        type.name as typename   
    from
        T_PM_HqMachineryTurnBuyEnterDetail o   -- 
    left join
        T_PM_HqMachineryTurnBuyEnter fu 
            on fu.id = o.headerid   
    left join
        T_PM_EquipOutLendDetail register 
            on register.id = o.equipid   
    left join
        T_PM_EquipSort type 
            on type.id = register.sortid   
    left join
        t_pm_project p 
            on p.id = fu.prjid   
    left join
        T_HR_Org org 
            on org.id = p.deptid   
    where
        1=1   
        and (
            p.deptid = '4028819222bed3240122cf8b424a2f83'   
            or org.parentid = '4028819222bed3240122cf8b424a2f83'
        )   
    group by
        register.sortid,
        p.id,
        p.name,
        type.name,
        type.code  

--------------

上面3个sql语句分别获得：内租、外租、自购设备信息；通过这些数据整合成报表。

简单关联关系：

	设备内租进场明细表(machineid) -> 设备内租进场表(prjid)  -> 项目表(deptid) -> 机构部门表

5. 【系统 特点】 系统中间树的信息，都是通过自连
接方式（parentid）表示在各种树对应的表里面的 比如 上面的设备类别表，就是各种设备信息通过parentid来
表示之间的关系；原来的机构表 也是 ，还有其他的树都是通过这种方式。

6.【任务 】
系统设置-分供商信息 下的excel导出问题：

高级查询的结果，是导出所有的结果，修改为导出查询后的结果。

参考：综合项目管理-机械设备管理-设备预登记 


问题在于：
ProviderAction 的 getQuerywhere方法里取到的where对应的数据有问题，正确的话能根据这个得到筛选条件。

where = (String) session.get("where"); //debug 到 where = ""

/////
this - session - session - session - attributes - keyset (hava "where")


现象是：存进去立即能取出来（高级查询过程），再去导出excel就取不到where的值了；
把where改为foo或其他名，就OK了，
具体原因，待查。

发现高级查询后session里where的值还是对的（通过输出到视图验证），推测是在请求生成excel数据时，把session里的
where重置了；于是分析生成excel的流程，发现action里并没有改变where的值，确在刚进入doexcel方法（生成
excel数据的方法入口）时，where就被重置了；推测是在流程走到这之前被重置的，于是找到拦截器。最终debug
显示就是拦截器进行的重置。

 拦截器 LoginInterceptor.java 里：
	---------------
	...
		 if((qlevel == null || "".equals(qlevel)) && list != null && list.toLowerCase().contains("list") && !"1".equals(pageevent)){
			request.getSession().setAttribute("where", "");
		 }
	...
	----------------


解决：由于 生成excel的方法名为 listExcel() 拦截器逻辑以为是查看列表，所以把方法改为doexcel即可。

【系统 问题 拦截器】action里生成excel的方法名只要包含list字符串，就不能生成正确数据的excel，原因是这种情况下，
拦截器会重置where为空；解决方法是 1）修改拦截器判断逻辑 2）修改所有action的生成excel的方法名，不能要list
字符串。

7. 进行第二次提交CVS

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day25 2010年9月10日

1. 继续昨天的第6条

【调试程序】善于设置切面，用排除法找问题所在 ；也就是方法论的问题

想到了以前哲学里的世界观和方法论的片段。还有主要矛盾，次要矛盾的问题。

方法论 -> 系统工程

2. 分析报表 继续 昨天 第4条 项目级设备分布

【tip】做报表首先知道 数据的结构（相对于字段）和分布（相对于表）

切入口： 【系统 表 检索字段分析法 经验 】

 如何猜测表格的字段意思，根据查询的结果，反过来去看查询的字段，估计字段代表的意思（可以查看表里对
 应字段的内容），根 据上面得出表之间的关系。

进而，得出各个sql语句(根据查询某个报表的控制台输出sql)的执行目的是什么（通过横向纵向比较），得到的是
什么结果。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day26 2010年9月13日

1. 【任务】项目管控考核-用工管理 下页面的检索字段修改 ：
 （1） 修改时间检索字段为 XXX 到 XXX 时间段检索
 （2）增加 公司名称 的检索字段 
 （3）检查数据是否正确显示

参考：项目管控考核-综合项目核心管控-资金分析 页面里的搜索块

开始
 （1）

 -> http://localhost:8080/wyjs/epm/Worker_workeronlinenumber.action 

	<action class="com.erp.epm.worker.action.WorkerAction" method="{1}" name="Worker_*">
			<result name="workerlevelonlinenumber">/erp/epm/worker/workerlevelonlinenumber.jsp</result>
			<result name="workerlevelonlinenumberExcel">/erp/epm/worker/workerlevelonlinenumberexcel.jsp</result>
			<result name="workeronlinenumber">/erp/epm/worker/workeronlinenumber.jsp</result>
			<result name="workeronlinenumberExcel">/erp/epm/worker/workeronlinenumberexcel.jsp</result>
			<result name="workeronlinenumberbyfilialeid">/erp/epm/worker/workeronlinenumberbyfilialeid.jsp</result>
			<result name="workeronlinenumberbyfilialeid">/erp/epm/worker/workeronlinenumberbyfilialeid.jsp</result>
			<result name="workeronlinenumberbyfilialeidExcel">/erp/epm/worker/workeronlinenumberbyfilialeidexcel.jsp</result>
			<result type="redirect-action">Quastandard_list?back=1</result>
	</action>

 -> WorkerAction.java 的 workeronlinenumber 方法 ，return WORKERONLINENUMBER

 ->/erp/epm/worker/workeronlinenumber.jsp  （参照： fundreportlist.jsp、FundReportAction.）

     timearea.jsp 是原来显示时间搜索字段的页面，同时这样的搜索，action要继承 TimeAreaAction类，以使用公用的检索时间的
获取。
     现在可以跳过这个类，直接在action类获得时间范围，用于检索（参考FundReportAction对这个的处理）。【系统 特点】

 -> 点击上面页面的 搜索 按钮

 ->  提交到 /epm/Worker_workeronlinenumber.action 

对workeronlinenumber方法修改，取到时间范围

 -> 获得时间范围，检索（对检索时间的字段合法性在拼接sql时检查），返回列表

修改的地方：
* 页面里时间字段显示
* action里取得表单时间，其他不变

（2）增加 公司名称 字段

提供输入模糊查找，和对话框选择查找 两种方式。【系统 检索 建议】

filiale 字段

修改action


还要修改下级页面，跳过点击公司名进入（lookup方法根据公司id）。
-> Worker_workeronlinenumberbyfilialeid.action?"+para
-> WorkerAction的 workeronlinenumberbyfilialeid 方法 return WORKERONLINENUMBERBYFILIALEID="workeronlinenumberbyfilialeid";
-> workeronlinenumberbyfilialeid.jsp

此action的显示列表的方法和显示查询的方法，是公用一个方法的，故需要修改参数（多传递一个用于匹配公司名称的参数），以达到检索
公司名称的目的。


【struts2 异常说明】 下面是由于对属性没有提供set方法
13:24:28,247 ERROR ParametersInterceptor:204 - ParametersInterceptor - [setParameters]: Unexpected Exception caught setting 
'searchorgname' on 'class com.erp.epm.worker.action.WorkerAction: Error setting expression 'searchorgname' with value 
'[Ljava.lang.String;@14a7229'


（3）workeronlinenumber.jsp 数据显示不完整 ，数据多，字段少，没有对应上。
   
   
   注：这个页面时显示统计数据，相应的登记数据在 综合项目管理-劳动力管理-劳动力进退场 里面

       List<Map> onlinenumbergroupbyfilelist = (List<Map>)request.getAttribute("onlinenumbergroupbyfilelist");
       List<String> workertypes = (List<String>)request.getAttribute("workertypes");

     到action里看原始数据，再分析视图是否显示正确。

     debug数据：

//List<String>的数据结构 
workertypes=[公司名称, 瓦工, 木工, 电焊工, 运输工, 泥工, 钢筋工, 电工, 综合工, 防水工, 脚手架工, 油漆工, 
混凝土工, 水工, 钢构件安装工, 人工挖土工]

//List<Map>的数据结构
onlinenumbergroupbyfilelist=[

{filialeid=4028819222bed3240122cf8b424a2f83, filialename0=浙北分公司, workerinoutnumber0=24, 
workerinoutnumber1=10, workerinoutnumber10=0, workerinoutnumber11=0, workerinoutnumber12=0, 
workerinoutnumber13=0, workerinoutnumber14=0, workerinoutnumber15=0, workerinoutnumber16=0,
workerinoutnumber2=30, workerinoutnumber3=30, workerinoutnumber4=10, workerinoutnumber5=29, 
workerinoutnumber6=15, workerinoutnumber7=130, workerinoutnumber8=0, workerinoutnumber9=0
}, 
{filialeid=4028819222bed32401230dc5df986909, filialename1=七公司, workerinoutnumber0=0, workerinoutnumber1=0,
workerinoutnumber10=10, workerinoutnumber11=50, workerinoutnumber12=20, workerinoutnumber13=0, 
workerinoutnumber14=10, workerinoutnumber15=0, workerinoutnumber16=0, workerinoutnumber2=0, workerinoutnumber3=0,
workerinoutnumber4=0, workerinoutnumber5=0, workerinoutnumber6=23, workerinoutnumber7=0, workerinoutnumber8=0, 
workerinoutnumber9=0
}, 
{filialeid=4028819223bb58280123c21fe8f80437, filialename2=宁波分公司, workerinoutnumber0=0, workerinoutnumber1=20,
workerinoutnumber10=0, workerinoutnumber11=30, workerinoutnumber12=10, workerinoutnumber13=0, workerinoutnumber14=0,
workerinoutnumber15=12, workerinoutnumber16=30, workerinoutnumber2=2, workerinoutnumber3=0,workerinoutnumber4=0,
workerinoutnumber5=40, workerinoutnumber6=0, workerinoutnumber7=0, workerinoutnumber8=0, workerinoutnumber9=0
}

]

比如 宁波分公司 在 劳动力进退场 页面里就有7个工种对应的数据,如下：

    工种		工种类别	数量	进场日期		备注  
    木工		二类工		 20		2008-05-06	地下室工程  
    钢筋工	三类工		 40		2008-05-06	地下室工程  
    泥工		二类工		 30		2008-05-06	地下室工程  
    钢构件安装工   二类工	 12		2009-07-01	16-18层  
    油漆工	二类工		 10		2009-09-08	地下室工程  
    电焊工	二类工		 2		2008-05-06	地下室工程  
    人工挖土工 三类工		 30		2008-05-06	地下室工程  
            
把上面的数据和统计页面的数据比较，发现数据错位了，/*用工类型字段数据（workertypes）是没问题的*/。-------后面证实还是这里的问题，
原因在于各个工种还细分为不同的级别，故而应该按各工种各级别作为字段名。

-> 看数据是如何得到的 ，是取的问题，还是显示的问题？
因为用工类型数据是对的，而对应的数据却多出2列
//line 1
List<Map> workerinandoutnumbers = workerService.getWorkerOnlineNumber(lengthbegindate,lengthenddate,searchorgname,orgid1,orgid2,getLoginInfo().getEmployeeId());
//line 2
List<Map> onlinenumbergroupbyfilelist = workerService.workerOnLineNumberGroupByFile(workerinandoutnumbers);

通过debug对照数据，line 1 取出的数据是对的，取出的是每个公司的各类用工工种进出数量。对应sql如下：
select o.filialeid,o.filialename,o.workertypeid,o.workertypename,SUM(o.workerinnumber)workerinnumber,SUM(o.workeroutnumber)workeroutnumber  
from ( 
        select r.id filialeid ,r.name filialename,s.id workertypeid,s.name workertypename,isnull(o.amount,0) workerinnumber,0 as  workeroutnumber
        from t_pm_workerindetail o   	
        left join t_pm_Workersort s       
          on o.workersortid=s.id   	
        left join t_pm_workerin w         
          on  o.inid = w.id    	
        left join t_pm_project p          
          on w.prjid = p.id        	
        left join t_pm_eproject e         
          on p.eprjid = e.id     	
        left join t_hr_org r              
          on  p.filialeid=r.id    
        where 1=1  
        union all  	
          select r.id filialeid ,r.name filialename,s.id workertypeid,s.name workertypename ,0 as workerinnumber,isnull(o.amount,0)   workeroutnumber    	
          from t_pm_workeroutdetail o   	
          left join t_pm_Workersort s       
           on o.workersortid=s.id   	
          left join t_pm_workerout w         
           on  o.outid = w.id    	
          left join t_pm_project p          
           on w.prjid = p.id        	
          left join t_pm_eproject e         
           on p.eprjid = e.id     	
          left join t_hr_org r              
           on  p.filialeid=r.id    
          where 1=1 
         )  as o 
where 1=1  
and  o.filialeid in 
         (
          select distinct id 
          from F_OrgRange_new('402881e6220b291201220b9a671c0002','402881922215b1480122160a80ba0a74','402881e6220b291201220b9a671c0002')  
         )  
group by o.filialeid,o.filialename,o.workertypeid,o.workertypename 

注：上面数据，按照 o.filialeid,o.filialename,o.workertypeid,o.workertypename 的顺序进行了分组。


line 2 的代码就是对这个sql的结果（原始数据）进行处理，方便视图取值显示。

看下面的原始数据：
filialeid	filialename	workertypeid	workertypename	workerinnumber	workeroutnumber
4028819222bed3240122cf8b424a2f83	浙北分公司	40288091219ed98801219eeccd660495	电工		15	0
4028819222bed32401230dc5df986909	七公司		40288091219ed98801219eeccd660495	电工		23	0
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120f184ef0120f2d05a9b1abe		电焊工		30	0
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d05a9b1abe		电焊工		6	6
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2d05a9b1abe		电焊工		2	0
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d1011c1ac6		防水工		10	10
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2d153cf1aca		钢构件安装工	12	0
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120f184ef0120f2da070b1b1e		钢筋工		29	0
4028819222bed32401230dc5df986909	七公司		4028809120309ee70120329169e30773	钢筋工		12	12
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2da070b1b1e		钢筋工		24	24
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2da070b1b1e		钢筋工		40	0
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d657de1b01	混凝土工	32	32
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d4a0991ae6		脚手架工	20	10
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120309ee70120329387c10790	木工		10	0
4028819222bed32401230dc5df986909	七公司		4028809120309ee70120329387c10790	木工		41	41
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120309ee70120329387c10790	木工		20	0
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120f184ef0120f2d6a0ed1b05		泥工		10	0
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d513481af1		泥工		71	21
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2d513481af1		泥工		30	0
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2d78cb51b0f		人工挖土工	30	0
4028819222bed32401230dc5df986909	七公司		40288091219ed98801219eec94a2048e	水工		20	10
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120309ee70120329260e5077d	瓦工		67	43
4028819222bed32401230dc5df986909	七公司		4028809120f184ef0120f2d594211af9		油漆工		26	6
4028819223bb58280123c21fe8f80437	宁波分公司	4028809120f184ef0120f2d594211af9		油漆工		10	0
4028819222bed3240122cf8b424a2f83	浙北分公司	4028809120f184ef0120f2d5ecb11afd		运输工		30	0
4028819222bed3240122cf8b424a2f83	浙北分公司	40288091228c524601229245a8553e0d	综合工		130	0

注：钢筋工、泥工 不同id对应同一个工种，原始数据出问题了。（七公司的钢筋工和浙北分公司的泥工）
更正，不是数据问题，而是命名的时候没有把区别写上去，实际上，钢筋工还细分为：二类工、三类工等（在数据字典的工种级别里【系统 工种 相关】）。所以应该根据
id来区别不同工种，而不能按照name来区分，再根据对应的工种级别id得到工种级别。

管理 工种明细 的地方在 ：
       系统设置-资源库-工种明细 里面

 工种级别：在数据字典里管理


 故而，最后的原因还是 在 WorkerService 里通过工种名来区分不同的工种导致错误，代码如下：
	
	// 下面代码，由于根据workertypename来区分不同工种是错误的，本系统通过工种id来区别（再通过id得到工种的级别）
	public List<String> getWorkerTypeByName(List<Map> newresult){
		List<String> workerTypeIdList = new ArrayList<String>();
		// 以分公司装组的各工种的数据。
		List<String> filialeidList = new ArrayList<String>();
		workerTypeIdList.add("公司名称");
		for (Map map : newresult) {
			if (map.get("workertypename") != null) {
				String workertypename = map.get("workertypename").toString();
				if (!workerTypeIdList.contains(workertypename)) {
					workerTypeIdList.add((map.get("workertypename")==null?"":map.get("workertypename").toString()));
				}
			}
		}
		return workerTypeIdList;
	}


系统的显示目的？在报表里把同一个工种的不同级别都放到一起显示，点进去看详细时，再显示同一工种的不同级别。
如果是这样，那在处理同一工种不同级别时的逻辑就是错误的（应该有个同一工种不同级别的用工数相加的逻辑，
而不是覆盖-WorkService.java里的workerOnLineNumberGroupByFile方法），也就是workerOnLineNumberGroupByFile里区别工种
的标准也要按照name来。

最后修改：

 修改WorkerService里的 workerOnLineNumberGroupByFile 方法，把筛选逻辑修改了下。修改后的逻辑是：按照分公司把对应的
 分公司下的各工种数量统计下（各级别的同一工种加在一起）。用到一个map来存放已有工种名。
 代码段如下：

  ----------------
  ...
	// 各工种标题名字
	//List<String> workerTypeName = new ArrayList<String>();
	//add by cs
	List<String> workerTypeName = getWorkerTypeByName(newresult);
	workerTypeName.remove(0);
	// 以分公司装组的各工种的数据。		
	List<Map> workerInAndOutNumberGroupByFile = new ArrayList<Map>();
	
	//区分分公司的标识
	int j=0;
	//循环分公司id
	for (String filialeid : filialeidList) {
		Map newmap = new TreeMap();
		Map tempmap = new TreeMap();
		newmap.put("filialeid", filialeid);
		int i=0;
		//循环工种标题名
		for (String workertypeName : workerTypeName) {
			
			boolean flage = false;	
			//这个循环应该把同一工种的数量求和（因为同一个工种会对于多个级别，但还是一个工种的）
			for (Map map : newresult) {
				
				// 判定当前循环出来的公司id 与外层id是否一直
				if (map.get("filialeid") != null) {
					String fid = map.get("filialeid").toString();
					if (fid != null && filialeid.trim().equals(fid.trim())) {
						// 判定当前循环出来的工种类型id是否和外层工种id一致。
						if (map.get("workertypename") != null) {
							String wtpname = map.get("workertypename").toString();
							if (workertypeName.equals(wtpname)) {
								// 如果公司也等，则将该种工种，添加到该公司上去。
								newmap.put("filialename"+j, (map.get("filialename") == null ? "" : map.get("filialename")));
								if(!tempmap.containsKey(workertypeName)){
									tempmap.put(workertypeName, "workerinoutnumber"+i);
									newmap.put("workerinoutnumber"+i,Integer.parseInt((map.get("workerinnumber")==null?"":map.get("workerinnumber").toString()))
											-Integer.parseInt((map.get("workeroutnumber") == null ? "": map.get("workeroutnumber").toString())));
									i++;
								}else{
									String tempname = (String)tempmap.get(workertypeName);
									int num = Integer.parseInt(newmap.get(tempname).toString())+Integer.parseInt((map.get("workerinnumber")==null?"":map.get("workerinnumber").toString()))
									-Integer.parseInt((map.get("workeroutnumber") == null ? "": map.get("workeroutnumber").toString()));
									newmap.put(tempmap.get(workertypeName),num);										
								}		
								flage = true;
							}	
						}	
					}
				}
			}
			if(!flage){
				newmap.put("workerinoutnumber"+i,0);
				flage = true;
				i++;
			}
		}
		j++;
		workerInAndOutNumberGroupByFile.add(newmap);
	}	
  ...
  ----------------
【经验】
注意：这段代码通过一个map类型变量来实现循环里同类数据的累加逻辑。

done

问题：这个逻辑被下面的一个页面也用到了 ，其实这个本就是下面页面 “各工种等级在场期间统计 ”
的逻辑。



2. 【任务】 
系统设置的范围权限，没有加入到数据显示权限中，需要修改。
  原来的权限筛选：
     默认权限（自己发布的自己能看，自己所在机构发布的能看）
     共享人
     共享组
     共享机构
  再加上：
     包含在范围权限里的用户也能看该范围下的数据。


参照 新技术应用示范 把其他涉及都共享组之类权限的地方的模块都修改下，

通过这个任务，在后续测试时，要配置范围权限并测试 【系统 测试 权限】
同样，测试时，要知道有哪些角色，并对其一一测试；有哪些特殊情况，也要一一测试；

比如对于范围权限的测试案例如下：【 测试 案例 】
   已知一个用户A属于上海分公司，三公司的文件F1没有设置共享权限，即只有三公司和其上级部门能看到，这样A就
不能看到F1。现在对A授予一个范围权限（有访问三公司机构树的权限-没有的话可以先定义一个范围权限点），这样A应该就能看到三公司的默认权限文件。




3. 记录下常见异常的原因：
NoSuchMethod 异常 —— 容易出现在修改或添加了方法而没有重启服务器时报，重启即可。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day27 2010年9月14日

1. 类似 sougou，baidu的可扩展性，开放开发接口，大众参与插件开发。具有活力。
【设计】

2. 权限的综合体 —— 系统账户的权限是各个部分权限的综合，且各个权限都事先定义好，除了默认权限。
理解本系统的 权限控制，管理。

3. 继续上次第2条任务 给相关模块实现范围权限数据筛选 

参照：项目管控考核-技术质量-新技术应用示范

注：像 “增加”，“修改”等的权限是在角色权限里设置的。比如如果账户A，不能修改 新技术应用示范 里的文章，只要
建立个角色，授予 新技术应用示范 的修改权限，则就能进行修改了。

但是，不同权限控制有冲突，原来是通角色控制操作按钮的可用性，现在有在底层数据上进行了权限筛选，并在页面上
进行了控制，即即使能看到操作按钮比如“修改”，却提示权限不够，可能数据筛选忽略了角色权限。

现在是：

先做出一个例子，再考虑是否继续修改(角色权限的考虑)的问题。

（1）工法管理 Quamethodmanger_index.action 
done
 高级查询 pass
（2）专利管理 Quapatentmanger_index.action
done
pass
（3）QC成果 Quaresultqc_index.action
done
pass
（4）科研成果 Researchresult_index.action
done
pass
（5）论文集 Quamemoir_index.action
done
pass
（6）质量目标 Qualitygoal_index.action
done
pass
（7）标准规范 Quastandard_index.action
done
pass
（8）优质工程  Quahighpro_index.action
done

（9）协同门户-信息发布-规章制度
done
（10）协同门户-信息发布-公告维护 （原来没有权限筛选）




其中一个例子：




范围权限筛选字符串在 BaseDao.java里生成 ，代码如下：
	------------
	...
	public String getRangeSql(String postid){
		StringBuffer sql = new StringBuffer();
		sql.append(" select distinct orgid from t_sys_orgrangerole  ");
		sql.append(" where rangeroleid in( ");
		sql.append(" 	select rangeroleid from t_sys_userrangerole ");
		sql.append(" 	where dutypostid='"+postid+"' ");
		sql.append(" ) ");
		return sql.toString();
	}
	...
	------------

	根据 postid 获得对应的范围权限。在dao代码里用 super.getRangeSql(loginInfo.getPostid()) 调用。
	即，根据登陆用户的职能id（postid ），取得对应的范围权限。

        表：
	t_sys_orgrangerole - 机构范围权限角色定义 ，定义各角色能访问的机构，以范围角色id对应机构id的多对多关系来实现

	t_sys_userrangerole - 用户范围角色定义，职能id对应范围角色id，一个用户可能有多个职能，每个职能id对应多个范围角色id


    从dao层开始修改，这样，就能看到那些地方用到了这个方法。逐一修改。

4. 一个 类型转换的问题 要注意

(String)Integer 这样把Integer对象强转是不行的，可以直接 Integer.toString() 转换为字符串。

异常

5. 【系统 问题】 页面显示问题，如果使用系统的窗口很小的话，大树就弹不开了。不过一般不会发生这种情况。但还是
可以改进的。

6. 【系统 特点】 系统不少逻辑代码是公用的，修改时要注意不要破坏其他逻辑。

多测试。

7. 【任务】 day26第一条下面的 “各工种等级在场期间统计 ”，数据显示也有问题，进行修改。


8. 【系统 显示 问题 ？】 对于范围权限的情况，控制按钮不可见，多选框不能选等的逻辑没有像其他权限一样进行处理。


9. 小悲剧 一个中文逗号引起的悲剧 呵呵 
在拼接sql字符串时，不小心输入了中文标点，IDE又不能检查 ，只能是在输出sql，再把sql拿到命令行窗口里调试。

【调试 sql 中文标点】



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day28 2010年9月15日 

1. 【系统 建议 】 系统的大部分操作都是sql执行的操作，对sql语句进行优化能明显提高系统的反应速度，提高客户体验。

2. 【系统 特点】 范围权限时，注意 设置了共享组能看 ，还是要到发布部门下看

3. openfire 数据库 系统允许也需要的数据库

select * from openfire..ofuser a where a.username='zhangph'  

注：这种查询方法 openfire..ofuser 包含了数据库名和表名 ，
垮数据库查询 ，hibernate配置的是wypm数据库。

4. 
系统只允许同一个终端一个用户登录，还是

【系统 多用户同终端登录 ？】 登录用户会相互替换。比如访问同一个子系统 ，不是系统的原因是浏览器的原因，
通过ctrl+n 方式新建的窗口和原来的窗口公用一个session的，故而其中一个变化另一个也变化。

不是系统的原因

5. 【系统 权限】 像 项目管控考核-技术质量 下的页面里中间树的显示，是根据范围权限（对机构树的访问）来控制的，
比如 ：用户A有个范围权限叫“系统管理-全局最高”，它对应配置的是能访问所有本系统的机构树节点，那么中间树也就
显示出能访问的所有节点。

     中间树的节点 = 范围权限的节点 + 默认所属机构的节点 = 中间树的显示数据

中间树与范围权限的关系 就是上面的内容。

【系统 中间树 】
故而，要得到一个登录用户的中间树信息，就要先得到该用户有哪些 范围权限 点(根据岗位不同而不同)，从这些点的定义表里得到对应的
机构节点 + 用户所属机构默认节点，就是要显示的数据了。

默认是上面的情况 ，如果

6. day27第7条 项目管控考核-用工管理 各工种等级在场期间统计 

先分析原始数据是否正确，对照 综合项目管理-劳动力管理-用工台账  （以宁波红巨大厦为例）

-> http://localhost:8080/wyjs/epm/Worker_workerlevelonlinenumber.action

WorkerAction.java

-> action 的 workerlevelonlinenumber 方法
   	//各等级工种在场数量
	public String workerlevelonlinenumber() {
		WorkerService workerService = new WorkerService();
		//从父类里拿到期间起始时间和结束时间
		Date lengthbegindate = super.getBeginDate();
		Date lengthenddate = super.getEndDate();
		//获取所有等级工种的进场和退场明细及数量。
		this.orgBase("list");
		List<Map> workerinandoutnumbers = workerService.getWorkerTypeInAndOutNumber(lengthbegindate,lengthenddate,searchorgname,orgid1,orgid2,getLoginInfo().getEmployeeId());
	/*	// 统计出进场每条明细对应的出场数量
		List<Map> result = workerService.sumSameWorkerInOutNumber(workerinandoutnumbers);
		// 统计同种工种同种等级的工种的进场数量和出场数量。
		List<Map> newresult = workerService.sumSameWorkerTypeid(result);*/
		//算出各公司，各工种的在线人数。
		List<Map> onlinenumbergroupbyfilelist = workerService.workerOnLineNumberGroupByFile(workerinandoutnumbers,1);
		//顺序显示各种工种。
		request.setAttribute("workertypes", workerService.getWorkerTypeById(workerinandoutnumbers));
		request.setAttribute("onlinenumbergroupbyfilelist", onlinenumbergroupbyfilelist);
		return WORKERLEVELONLINENUMBER;
	}
	
-> 它也是先 先取得原始数据，再经过处理，给试图显示。

->
调试数据后，发现是表格数据和表格头的列没对上号。遍历不是按同样的序列进行的。

即数据配对时没有按照正确序列配对。修改为同一序列匹配即可(修改了生成单一工种名list的方法，WorkService里的getWorkerTypeById)。

done



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day29 2010年9月16日

1. 给协同门户-资料中心 下的页面加上 范围权限显示 sql脚本是原来系统的字段也不一样，注意点。


2. 用户能看的数据从下面几个方面决定的：
    * 用户所在机构
    * 用户所在组
    * 用户所在的范围权限
    * 用户自己的标识（可能在可阅读人里面）

3. 【系统 表 数据结构】机构表
-------------
...
-- 某个职责的所有范围圈对应的所有能见orgid ，系统里 每个工程也是按机构来看待都在 t_hr_org 表里
select
distinct orgid , org.name
from
t_sys_orgrangerole r ,T_HR_Org org
where
r.rangeroleid in(
    select
        rangeroleid 
    from
        t_sys_userrangerole   
    where
        dutypostid='402881922215b1480122160a80ba0a75')
...
-----------------
部分数据如下：

id	parentid	type	code	taxis	name	shortname	builddate	faxes	telephone	postnum	address	status	createdate	lastdate	lastemployeeid	companyid	qx
402881922354560d012354ab570f015b	4028819222bed3240122ce88f24c2ec3	1	01010015	113	资金管理部	资金管理部	2009-08-26 00:00:00.000					2	2009-08-26 11:06:38.223	2009-09-18 09:14:00.590	402881922216115101221b6b93740f38	402881e6220b291201220b9a66fd0001	NULL
402881922354560d012354ad3d530164	4028819222bed3240122ce88f24c2ec3	1	01010016	114	法务部	法务部	2009-08-26 00:00:00.000					2	2009-08-26 11:08:42.707	2009-08-26 11:08:42.707	402881922216115101221b6b93740f38	402881e6220b291201220b9a66fd0001	NULL
402881922533bb7401254e886bde16dd	4028819222bed32401230dc9102f6911	2	0117023	NULL	上虞百官广场  	上虞百官广场  	2009-12-02 00:00:00.000					2	2009-12-02 16:36:21.087	2009-12-02 16:36:21.087	402881922215b148012215b8cbdb0042	402881e6220b291201220b9a66fd0001	NULL
402881922533bb7401254e89bc6a16e2	4028819222bed32401230dc9102f6911	2	0117024	NULL	 C#厂房  	 C#厂房  	2009-12-02 00:00:00.000					2	2009-12-02 16:37:47.243	2009-12-02 16:37:47.243	402881922215b148012215b8cbdb0042	402881e6220b291201220b9a66fd0001	NULL
402881922533bb7401254e8a49a616e4	4028819222bed32401230dc9102f6911	2	0117025	NULL	 B#E#厂房 	 B#E#厂房 	2009-12-02 00:00:00.000					2	2009-12-02 16:38:23.397	2009-12-02 16:38:23.397	402881922215b148012215b8cbdb0042	402881e6220b291201220b9a66fd0001	NULL
402881922533bb7401254e8aedf516e6	4028819222bed32401230dc9102f6911	2	0117026	NULL	AD#厂房	AD#厂房	2009-12-02 00:00:00.000					2	2009-12-02 16:39:05.460	2009-12-02 16:39:05.460	402881922215b148012215b8cbdb0042	402881e6220b291201220b9a66fd0001	NULL
402881922533bb7401254e8dc15816f5	4028819222bed32401230dce022d691d	2	0123020	NULL	富丽碧蔓汀土建总包工程 	富丽碧蔓汀土建总包工程 	2009-12-02 00:00:00.000					2	2009-12-02 16:42:10.647	2009-12-02 16:42:10.647	402881922215b148012215b8cbdb0042	402881e6220b291201220b9a66fd0001	NULL
402881922533bb74012553214cff1b7d	4028819222bed3240122cf8c4bfa2f87	2	01050013	NULL	纯高国际现代商务花园工程	纯高国际现代商务花园工程	2009-12-03 00:00:00.000					2	2009-12-03 14:01:49.057	2009-12-03 14:01:49.057	4028819224fb69d4012523b534191742	402881e6220b291201220b9a66fd0001	NULL



4. 【系统 bug】 协同门户-资料中心 中间由于不是机构树，比如好似资料类型树等，在service层代码还是按照id去找机构，也
没有对null值处理，于是就出空指针异常。

在这个模块里 id已经不是机构的id了。

即 要用到BaseAction里的getShareCondition() 方法来获得默认权限，传递给action的id只能是机构id，或者不传递

另外 学习园地的中间树 通过get方式传递参数有问题 ，修改为用typeid传递资料类型，id传递机构id或不传。

-> 修改中间树的URL后缀 newstypeTree.jsp

【任务 】协同门户-资料中心

public Page getNewsPage(String where, int pageindex, int pagesize,String orgid,String typeid,String shareCondition,LoginInfo loginInfo) {

注意：
* 这里传递的 String where 参数，是服务于查询的。这个列表数据函数实现了各类列表数据的逻辑，显示，查询，生成excel等。
* String orgid 传递的是要显示那个机构下的数据
* String shareCondition  ？


参数：

 * where 有多个地方的dao层都是这样的逻辑的。sql里where的位置要放对否则查询操作会出错。
 * shareCondition 内部就是  "in (select id from treelistforsystemorgstartfromid('" + orgid + "'))" 故而这样写就OK：
		------------------
		...
   		sql.append("  or o.orgid  ");
		sql.append(shareCondition);
		...
		------------------

		这里还有一点注意：

		看到了吧，上面 o.orgid 就是字段名，这个字符串是在高级查询的配置文件里定义的，所以如果修改了
		sql语句导致字段改变，则也必须改变查询字段名配置：

		如：

		-------------
		...
			<module title="新技术应用示范" id="605"/>
			<field moduleid="605" id="605.01" fieldname="工程名称" fieldcode="o.eprjname" fieldtype="text"></field>
			<field moduleid="605" id="605.02" fieldname="所属部门" fieldcode="o.deptname" fieldtype="text"></field>
			<field moduleid="605" id="605.03" fieldname="获奖情况" fieldcode="o.huoj" fieldtype="text"></field>
			<field moduleid="605" id="605.04" fieldname="立项时间" fieldcode="o.itemtime" fieldtype="date"></field>
			<field moduleid="605" id="605.05" fieldname="获得时间" fieldcode="o.gettime" fieldtype="date"></field>
			<field moduleid="605" id="605.06" fieldname="备注" fieldcode="o.remark" fieldtype="text"></field>
		...
		-------------
		
		由于修改了sql机构，导致 o.deptname 无效，并改为了 org.name （原来是在子查询里面的字段，现在把
		它提到外面来了）则配置文件也要相应修改。




【系统 特点】修改sql时，要注意看看是否影响到了高级查询，因为在高级查询配置文件里字段名是硬编码的。

5. 
信息发布-公告维护 页面里的所属部门不能修改 ，查下？

通过debug发现，提交到action的数据时正确的 所属部门 已经改变了，剩下就是更新操作了的原因了。
发现 pojo对象的copy方法漏掉了orgid加上即可。

done


6. 【任务】 把day27第3条，修改过的dao层代码对应的高级查询配置都修改下。

科研成果 的高级查询有问题。高级查询where变量的字符串位置不对

优质工程重复定义 高级查询配置

有两种类型的sql代码 （是否distinct处理text类型字段）：

第一种 ，含text类型字段数据的去重：用子查询绕过text字段

--------------
...
	StringBuffer sql = new StringBuffer();
	sql.append(" select o.* , dict.name as huoj , org.name as deptname from ");
	sql.append(" ( ");
	sql.append(" select distinct o.* from t_pm_quaresultqc o  , t_sys_group g,F_allparentORG('"+loginInfo.getOrgId()+"') p ");
	sql.append(",(");
	sql.append(super.getRangeSql(loginInfo.getPostid()));
	sql.append(") rangerole ");
	sql.append(" where  (charindex('"+loginInfo.getEmployeeId()+"',o.shareempids,0)>0 ");
	sql.append("  or charindex(p.id,o.shareorgids,0)>0 ");
	sql.append("  or (charindex('"+loginInfo.getEmployeeId()+"',g.empids,0)>0 and charindex(g.id,o.sharegroupids,0)>0) ");
	sql.append("  or o.orgid  ");
	sql.append(shareCondition);
	sql.append(" or charindex(rangerole.orgid,o.shareorgids,0)>0 ");
	sql.append(" ) ");		
	sql.append(" ) o left outer join t_sys_dictvalue dict");
	sql.append(" on o.reward = dict.id ");
	sql.append(" left join t_hr_org org on org.id=o.orgid ");
	sql.append("where org.id in(select id from treelistforsystemorgstartfromid('"+orgid+"') )  ");
	sql.append(where);
	sql.append(" order by o.createdate desc  ");//m.name
...
--------------

第二种，直接去重

--------------
...
	StringBuffer sql = new StringBuffer();
	sql.append(" select distinct o.*,org.name as deptname from t_pm_quapatentmanger o , t_hr_org org , t_sys_group g , F_allparentORG('"+loginInfo.getOrgId()+"') p ");
	sql.append(",(");
	sql.append(super.getRangeSql(loginInfo.getPostid())); -- 取得范围权限的orgids
	sql.append(") rangerole ");
	sql.append(" where  (charindex('"+loginInfo.getEmployeeId()+"',o.shareempids,0)>0 "); -- 可阅读人
	sql.append("  or charindex(p.id,o.shareorgids,0)>0 "); -- 可阅读机构
	sql.append("  or (charindex('"+loginInfo.getEmployeeId()+"',g.empids,0)>0 and charindex(g.id,o.sharegroupids,0)>0) "); -- 可阅读组
	sql.append("  or o.orgid  ");
	sql.append(shareCondition); -- 默认范围 同一个机构
	sql.append(" or charindex(rangerole.orgid,o.shareorgids,0)>0 "); -- 可阅读范围权限
	sql.append(" ) ");
	sql.append(where); -- 查询条件
	//筛选所点击机构下的数据 （点击左边大树是显示用户所在机构下的数据，和action里的orgid，orgid1，orgid2有关系）
	sql.append(" and org.id in(select id from treelistforsystemorgstartfromid('"+orgid+"') )  "); -- 筛选某个机构下的数据
	sql.append(" and o.orgid=org.id ");
	sql.append(" order by o.createdate desc  ");//m.name
...
--------------

上面的sql多个地方用到的，尽量优化下 ?

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day30 2010年9月17日

1.  技术质量下 注意：

获奖情况 和 获奖名称的区别 
t_pm_quaresultqc 里有rewardid 和 rewardname 分别对应获奖情况和获奖名称 ，在配置高级查询字段名时可能要涉及到。

2. 再丰富多样和优秀的应用，也都是建立在现有技术的基础上的
代码自动生成，数据分析处理等等应用。

3. 【系统 建议】
     
     * 技术质量下 一些列表页面的字段内容显示样式 是中间对齐的，修改为左对齐比较好看些 
     * 技术质量下 高级查询里的所属部门显示格式不一致，有的是输入框有的是下拉框 修改为一致的


4. sql server 日期段比较 ，数据库里是data类型字段：
----------
...
	and o.publishtime   >=  '2010-09-17 10:57:36'  and o.publishtime   <=  '2010-09-21 10:57:36'
...
----------

获奖情况 显示的是名称实际比较的还是id，故配置高级查询字段名时，要根据实际匹配的字段设置。

5.  下面sql代码是显示指定机构树下的数据，点中间树的一个机构，显示其下的数据
-----------
...
		sql.append(" left join t_hr_org org on org.id=o.orgid ");
		sql.append("where org.id in(select id from treelistforsystemorgstartfromid('"+orgid+"') )  ");
...
-----------

所以 ，treelistforsystemorgstartfromid('"+orgid+"') 函数是返回给定orgid下所有的机构id ，实际应用就是
可以返回该orgid下所有的数据。

所以 这个orgid是根据点击的某个中间树通过get方式传递到action的，第一次显示列表是从登陆信息里
取的用户登陆机构id。
    这也就是默认数据显示那个机构的数据的逻辑。

 【系统 action里的orgid，orgid1，orgid2】 这些成员变量的作用，判断是第一次访问还是后续访问，是否采取
 默认访问（默认显示用户所在机构的数据）。

6.  从 newsafficheinput.jsp 页面的应用看 web office 组件

7. 代码及命名的一致性 ，貌似和代码页面生成技术有关系 【系统 代码自动生成 快速开发】

代码生成模块在 webapp/tool 目录下

入口：webapp/tool/index.jsp

看框架说明文档 ；根据数据库表和页面元素设置生成代码的，从这里也就知道系统的命名都是
从表的名称衍生出来的，各种文件命名都很一致。

从表到POJO，到dao层，到service层，到action层，到jsp页面，大部分骨架都是相同的，只是改改变量而已，利用
代码生成器，能快速生成基础骨架代码，在人工加入特定的逻辑，从而实现快速开发。

这种代码生成对数据库表的机构和模型层的机构要一致。

补充：

整理本系统的代码自动生成流程
	
	建表 - 配置代码生成参数 - 生成简单各层代码 - 丰富代码，配置功能

action的方法 ， service方法 ，dao方法，jsp页面里各种功能的配置（高级查询，查询，分页等等）


8.  把默认职能布局 复查下

初步判断是由于注册新的系统用户时，就设置了用户默认布局信息到 T_Portal_Usermenu 表（保存用户布局信息等的表）
里面，从而导致默认职能布局不起作用。

-> 先查出 T_Portal_Usermenu 表里的记录作为对比

-> 新建一个系统用户 ，看 T_Portal_Usermenu 表是否有新记录

-> 没有记录 检查正常 
、

-。

接着：

-- 职能相关信息表 ：包含布局 和 portal 信息
select * from T_Sys_province

职能门户列表页面：erp/sys/provinceportallist.jsp


-> portal 关联修复下。

-> 用户自定义portal是如何实现的？ 
------------
...
    -- 如果第一次配置，则先插入用户记录 
    insert 
    into
        T_Portal_Usermenu
        (userid, menuid, portletids, layoutid, id) 
    values
        (?, ?, ?, ?, ?)

...
    update
        T_Portal_Usermenu 
    set
        layoutid='2c9480a619bd86b30119bda3d4e20001',
        portletids='1,2' 
    where
        userid='402881922216115101221b6f4d7e0f54' 
        and menuid='1'
...
-------------
   ——　把自定义的portal保存到 T_Portal_Usermenu 表（存放用户自定义布局和portal信息）里

->  操作过程是通过在布局由上角，选择portal，提交到action，存入数据库的。

-> 下面要修改的就是：在设置职能默认布局的地方，也通过选择portal存入数据库中

-> 设置职能默认布局的地方已经将portal信息存入了 T_Sys_province 
表，所以只要关联上就OK（前提是用户 
没有自定义布局，否则从用户自定义的表 T_Portal_Usermenu 里读取，而不从默认职能信息表T 
_Sys_province里读取）

LayoutAction.java 加载布局和portal信息。

	--------------
	...
	 //用户布局
			   Usermenu usermenu = new UsermenuService().loadUsermenu(userid,menuid);
			 
				if (usermenu==null|| usermenu.getId()==null)
				{
					Menu menu=new MenuService().loadMenu(menuid);
					//add by cs			
					LoginInfo logininfo=getLoginInfo();
					String postid = logininfo.getPostid();
					Dutypost dutypost = new DutypostService().loadDutypost(postid);
					Postinfo postinfo = new PostinfoService().loadPostinfo(dutypost.getDutypost());
					Province province = new ProvinceService().loadProvince(postinfo.getProvinceid());
					layoutid = province.getLayoutid();
					portletids = province.getPortlet();
	/*				//如果没有设置默认portal
					if(portletids==null||"".equals(portletids)){
						portletids = menu.getPortletids();	
					}*/
					//如果没有设置默认布局
					if("".equals(layoutid)||layoutid==null){
						layoutid=menu.getLayoutid();
					}
					
				}
				else{
					portletids = usermenu.getPortletids();	
					layoutid=usermenu.getLayoutid();
				}
	...
	----------------

	上面的逻辑，只要用户有了任何的自定义配置，则布局和portal信息都从自定义表里取。而，自定义表
	T_Portal_Usermenu 是按照userid来区分用户的定义配置的，这样就不能存放用户多个岗位的布局信息，即
	不同岗位必须使用同一个布局和portal信息。


【系统 自定义布局portal】 如果用户进行了自定义操作，则默认职能布局和portal不起作用；还一个问题，就
是上面说到的。





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day31 2010年9月19日

1. 关于布局和portal的问题

	如果要根据不同岗位可以设置不同布局和portal 则需要修改 t_portal_usermenu 表，再增加个岗位字段（postid）.
这样，通过userid和postid联合唯一来确定用户的某个岗位的布局和portal。

	职能默认设置的是在用户没有自定义任何内容前的配置，用户一但进行了配置，则不会从默认职能表里取布局和
portal信息了。
	
	问题是，只要采取默认职能的配置才能对不同的职能（对应不同的岗位）配置不同的布局和portal ；用户一但自定义
就导致每个岗位的布局portal都是一样的。

【系统 bug】试用期的员工如果配置系统账号的话，进系统时会报null point 空指针异常，因为他们在职责表里没有记录。
由下面sql决定：
-------------
...
    select
        a.id as postid,
        a.dutyorgid as orgid,
        c.name as orgname,
        a.dutypostname,
        b.companyid as companyid,
        d.name as companyname,
        d.logpath as comimgpath 
    from
        t_hr_dutypost a,
        t_hr_Employee b,
        F_org('') c,
        t_sys_company d 
    where
        a.employeeid=b.id 
        and a.dutyorgid=c.id 
        and b.id ='402881922216115101221b6874710f24' 
        and b.companyid=d.id 
        and a.status=1 -- 必须是在职员工
...
--------------
【任务】
下面是实现每个账户根据岗位不同可以自定义布局和portal的操作：（表格层面上就是userid和postid联合唯一）

->  分析
      * 存入布局和portal信息时（在t_portal_usermenu）,应该同时存入userid和postid
      * 取出的时候也要userid和postid都一致，从而得到某个用户某个岗位的布局和portal信息
-> 找到用户自定义布局和portal的地方

相关要修改的地方：
     UsermenuAction
     UsermenuService
     UsermenuDao
     Usermenu

     LayoutService
     LayoutAction
     
     还有相关 jsp 页面 ：(注意；有的jsp页面还是用混用了java代码的，所有修改了java类方法或参数时，要注意相
     关jsp页面里java代码的同步修改，错误如：) 【系统 经验 特点】
     layoutmylist.jsp

     Usermenu.hbm.xml 

     【经验】 记住了 ，本系统修改了POJO类或表格字段，就要同时修改映射文件 （mapping），不要忘了 ，记住
     一些修改步骤。

【调试】
java.lang.NoSuchMethodError: com.erp.portal.service.LayoutService.getLayoutId(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	at org.apache.jsp.erp.portal.layoutmylist_jsp._jspService(layoutmylist_jsp.java:211)

上面的提示：是在处理jsp页面时报的 方法找不到错误，不要忽略了jsp里也有java代码。



-> 修改表结构 
【修改 SQL】
-- 修改表格 T_Portal_Usermenu
alter table T_Portal_Usermenu add postid varchar(32)
alter table T_Portal_Usermenu add constraint userid_postid_key unique (userid,postid) -- 联合唯一 ,联合主键

-> 修改 POJO类 Usermenu.java 增加postid属性。 
这样就能细到岗位来配置个人配置。

-> 修改 mapping文件 映射文件

-> 修改 action service dao

涉及到 T_Portal_Menu 表 -- 布局信息表

	id
	layoutid
	code
	name
	demo
	url
	portletids

注意：这里的menu也就是layoutaction在取不到布局和portal值时，以这个表的记录为准。

->  修改用到了java类的jsp页面

-。 done


通过上面的修改过程：在usermenu模块了，没有单独的设置usemen的方法，而是放在update方法里的，通过
判断是否存在记录判断是更新还是添加。

结果：

经过上面的修改，用户第一次登录后采用每个岗位对应的默认配置，如果自定义了某个岗位则按自定义的来，没有
定义的还是从默认配置里读取。

实现到岗位级的自定义，职能级的默认配置。


2.  系统 sql 函数

 -- 取得传入机构的所有上级机构id ,函数 getupOrgid(orgid) 
 -- 下面的F_allparentORG函数也是同样的效果，只是字段比getupOrgid(orgid)少检索几个
 -- 这两个函数作用差不多的
 
 select * from getupOrgid('402881e6220b291201220b9a671c0002')
 
 select * from F_allparentORG('402881e6220b291201220b9a671c0002')
----------------------
...
	 -- 学习园地 
	 
	  select o.*,d.name as typename,e.name as ename,org.name as orgname from ( 
		select o.id,o.orgid,o.title,o.publishdate,o.lastdate,o.promulgator,o.typeid ,o.companyid, o.promulgatorname     
		from T_OA_NEWS o 
		-- 可阅读人组可见
		where charindex('402881922215b1480122160a80ba0a74',o.personids,0) > 0 
		-- 最后编辑者可见
		or charindex('402881922215b1480122160a80ba0a74',o.lastemployeeid,0)>0 
		-- 发布者可见
		or charindex('402881922215b1480122160a80ba0a74',o.promulgator,0)>0 
		-- 可阅读机构可见（当前登录者所属机构的上级机构在可阅读机构里）
	    union 
		select o.id,o.orgid,o.title,o.publishdate,o.lastdate,o.promulgator,o.typeid ,o.companyid , o.promulgatorname    
		from T_OA_NEWS o,getupOrgid('402881e6220b291201220b9a671c0002') b 
		where charindex(b.id,o.orgids,0)>0 
		-- 范围权限可见
		union 
		select o.id,o.orgid,o.title,o.publishdate,o.lastdate,o.promulgator,o.typeid ,o.companyid , o.promulgatorname    
		from T_OA_NEWS o 
		  ,( select distinct orgid from t_sys_orgrangerole   where rangeroleid in(  	select rangeroleid from t_sys_userrangerole  	where dutypostid='402881922215b1480122160a80ba0a75'  )           ) rangerole  	where charindex(rangerole.orgid,o.orgids,0)>0 
	    -- 下级机构发布的数据上级可见      
		union 
		select o.id,o.orgid,o.title,o.publishdate,o.lastdate,o.promulgator,o.typeid ,o.companyid , o.promulgatorname    
		from T_OA_NEWS o , t_hr_org org 
		where o.orgid = org.id 
		and o.orgid 
			in (select id from treelistforsystemorgstartfromid('402881e6220b291201220b9a671c0002')) 	-- 清远公司 40288176262f82f901264e792ade0d9e
	    -- 可阅读组(自定义组)可见
	    union 
		select o.id,o.orgid,o.title,o.publishdate,o.lastdate,o.promulgator,o.typeid,o.companyid , o.promulgatorname    
		from T_OA_NEWS o,t_sys_group b 
		where charindex(b.id,o.groupids,0)>0 
	 ) o 
	 left join T_HR_Org org on o.orgid = org.id  left join t_hr_employee e on e.id = o.promulgator 
	 left join T_Sys_Dictvalue d on d.id = o.typeid  
	 where 1=1  and o.companyid='402881e6220b291201220b9a66fd0001' 
 ...
 ---------------------
注意：这种通过union的方式和原来一起检索的方式的区别。

3.  debug调试进行时，如果进行了数据库操作，会锁住正在操作的表 。
 现象就是：你通过其他人口修改或删除数据会一直等待。


4. 【任务】 修改 项目管控考核-用工管理下的  
（1）“各工种在场期间统计"里的子页面时间查询样式 
（2）"各工种等级在场期间统计 "的时间样式。

参考 day26第一条

(1) 子页面

workeronlinenumber.jsp 页面

->  点击分公司名称触发js函数： lookup('4028819222bed3240122cf8b424a2f83')
--------------
...
	function lookup(id){
 		var para = "filialeid="+id;
 		pgform.action="<%=request.getContextPath() %>/epm/Worker_workeronlinenumberbyfilialeid.action?"+para;
 		pgform.submit();
 	}
...
--------------
->  /wyjs/epm/Worker_workeronlinenumberbyfilialeid.action?filialeid=4028819222bed3240122cf8b424a2f83 请求分公司的记录数据
（这里以浙北分公司为例）

->  到 WorkerAction 的 workeronlinenumberbyfilialeid 方法 ，return  WORKERONLINENUMBERBYFILIALEID
	------------------
	...
	<action class="com.erp.epm.worker.action.WorkerAction" method="{1}" name="Worker_*">
			<result name="workerlevelonlinenumber">/erp/epm/worker/workerlevelonlinenumber.jsp</result>
			<result name="workerlevelonlinenumberExcel">/erp/epm/worker/workerlevelonlinenumberexcel.jsp</result>
			<result name="workeronlinenumber">/erp/epm/worker/workeronlinenumber.jsp</result>
			<result name="workeronlinenumberExcel">/erp/epm/worker/workeronlinenumberexcel.jsp</result>
			<result name="workeronlinenumberbyfilialeid">/erp/epm/worker/workeronlinenumberbyfilialeid.jsp</result>
			<result name="workeronlinenumberbyfilialeid">/erp/epm/worker/workeronlinenumberbyfilialeid.jsp</result>
			<result name="workeronlinenumberbyfilialeidExcel">/erp/epm/worker/workeronlinenumberbyfilialeidexcel.jsp</result>
			<result type="redirect-action">Quastandard_list?back=1</result>
	</action>
	...
	-------------------
->  /erp/epm/worker/workeronlinenumberbyfilialeid.jsp (最终显示页面)

->  对上面页面进行修改 

-> 点 搜索提交到 workeronlinenumberbyfilialeid方法

->  对action获得时间段逻辑修改

-> 测试 通过

-。done





(2) "各工种等级在场期间统计 "的时间样式

-> http://localhost:8080/wyjs/epm/Worker_workerlevelonlinenumber.action 左边树入口

-> WorkerAction 的 workerlevelonlinenumber 方法 ，return  workerlevelonlinenumber 

-> /erp/epm/worker/workerlevelonlinenumber.jsp

-> 点 搜索提交到 workerlevelonlinenumber 方法

-> 对action获得时间段逻辑修改

-。done



问题：就是查询的结果生成报表，没有生成查询数据到报表的逻辑，如果需要可以加上。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day32 2010年9月20日

1.  分析报表

【系统 报表】项目管控考核部分报表 ，根据综合项目管理部分的数据来分析。分析清楚各项数据的关系是前提。
工程业务，办公业务，

-------------				------------------
管控考核			综合项目管理
-------------				 ------------------
设备分析			机械设备管理
用工管理分析		劳动力管理
成本分析			成本管理
资金分析			资金管理
合同履约			合同管理


      通过上面分析：所有报表的数据都是在某些数据管理模块里取得，并进行分析运算获得的。对于本系统，
就是各项数据的管理模块是产生对应报表的数据来源。【系统 报表 特点】




2. js验证时间段 ， 对2个时间字符串进行比较大小

function strToDate(){   
      var nowDate = new Date();        
      var oldDate = '2009-06-08';   
      var oldTime = '16:00';   
      var year = oldDate.substr(0,4);   
      var month = oldDate.substr(5,2);   
      var day = oldDate.substr(8,2);   
      var temDate = month+'/'+day+'/'+year+' '+oldTime+":00";   
      alert(temDate);   
      //与当前时间比较   
      alert(new Date(Date.parse(temDate))>nowDate);   
}  
javascript字符串转换成日期[js常用]



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day33 2010年9月21日

1. 系统的 风格统一 、一致性 美 （颜色，布局等等）。页面设计范畴
    
2. 继续day32的第一条 报表分析
    从总体上把握报表制作流程。归纳，总结

3. 【任务 】  项目管控考核-用工管理 下实现根据查询条件输出报表
把查询条件 公司名称 改为项目状态 ，把代码里的 searchorgname 改为 status

【问题】  它这里提及的都是开工的项目，像竣工的项目没有数据，是因为确实没有数据后续会有数据。


4. 【问题 】技术质量模块 点上级机构不能全部显示下级机构的数据，还需点下级机构才能显示数据

5. 用js拼接URL字符串，请求服务器时，要注意乱码问题。还是用form来提交方式好。


6. 表的关系


 select * from t_pm_project
 
  select * from t_pm_eproject

  上面两张表的关系？

  关系是：首先，清楚一点，工程(按中标获得)是源头，其只有一个合同对应，工程下面再细分项目，每
  个项目又对应不同的合同，每个不同的合同对应各自的合同变更。

 7. 方法声明修改后，记得要重启服务器，否则结果一直不变，会误以为是代码问题。

 8. 学习园地（news） 暂时不修改 ，把前面修改的覆盖掉，后面再一起修改 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day34 2010年9月25日

1. 技术的熟练度 要多用多练多总结

除了报表再把相关的点熟习下。【 agenda 】
技术为基础，技术为业务服务。

技术人的清醒。

2. 周总结

3. 我的快捷 也可以设置为根据岗位不同而不同。

4. 工作流 的实现原理 【系统 工作流 ？】
流程分析 见 navigater.txt

简单说明：

	工作流管理是协同门户子系统的核心模块。简单来说，工作流就是把一项工作化解为多个步骤，由多人协同来完成。
这里所指的工作是形形色色的，在办公室里进行的很多不同类型的工作，都可以用工作流管理来表达。工作流管理主要
由表单设计、流程设计、流程引擎三个重要元素构成：
	* 表单设计：在工作流管理中，与工作相关的数据都可以通过“表单”来体现，“表单”是数据的载体，相当于现实工作
中的各类纸制或word工作单。在表单以外，还可以通过附件文件来传递数据和信息。
	* 流程设计：在工作流管理中，工作过程都可以通过“流程”来体现，流程是工作过程和环节的描述，代表了一种制度
或规范。流程设计通过“流程设计器“工具来完成，通过流程设计器可以设置任务节点和步骤的相关属性。
	* 流程引擎：流程引擎是工作流管理的核心部分，负责解释工作流流程定义，创建并初始化流程实例，控制流程流动
的路径，记录流程运行状态，终止正在运行的流程，与其他引擎之间通讯等等工作。

重要概念及属性说明：
	工作流就是多人协同完成一项工作，简单而言，就是几个人按次序填写同一张表单，或者填写会签意见、传递附件。
	表单定义主要用weboffice定义日常工作表单，可以由软件用户自行设计（一般由系统管理员设计好）。
	流程模板定义主要是以图形化的形式定义流程，同时设置任务节点和步骤的相关属性等（一般由系统管理员设计好）。
	每个流程模版对应一个表单，不同流程模板可以共用一个表单。
	流程节点就是日常工作的一个审批环节，节点分为基本节点和条件节点，基本节点只能有一个出线，条件节点可以有多个出线，每个出线上都定义相关的条件，流程运作过程中，流程引擎自动识别符合条件的出线。
	流程路径就是两个节点之间的连线，体现了节点之间执行的先后次序。
	节点串并行类型分为串行和并行两种类型，串行节点代表该节点只能一人审核，并行节点代表该节点可多人审核。
	节点签核类型分为审批、会签、传阅三种类型，三种类型的区别如下表：

审批	会签	传阅
输入签核意见	有	有	无
同意不同意按钮（即驳回权限）	有	无	无
			
注：并行类型的节点签核类型只能为会签和传阅。
	节点并行类型分为“其中1人审核完下节点处理”和“所有人审核完下节点处理”，当该节点是并行节点时，并行类型必须选择，若是串行节点，节点并行类型不起作用。
	子流程
	子流程使用类型
	节点处理时限和间隔时间参数：


参考：工作流doc




5. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day35 2010年9月26日

1.  周转材料 的理解，以及如何对其进行的管理


　　周转材料，是指企业能够多次使用、逐渐转移其价值但仍保持原有形态不确认为固定资产的材料，如包装物
和低值易耗品，应当采用一次转销法或者五五摊销法进行摊销；企业(建造承包商)的钢模板、木模板、脚手架和其
他周转材料等，可以采用一次转销法、五五摊销法或者分次摊销法进行摊销。 　　在建筑工程施工中可多次利用使
用的材料，如钢架杆、扣件、模板、支架等

2. 项目综合管理

工程业务管理

3. 【任务】一些地方，在执行删除操作时，由于数据被引用，比如 ：流程模板、系统账号在被引用的情况下，不能删除
应给用户提示，告知是那些地方用到了。

	具体提示：可以用弹出div层的方式，背景变灰，把引用到的地方列出来（引用多的情况很方便），供用户记录，再去
先删除这些数据，最后才能删除流程模板等的数据。

5个地方：

* 协同门户-流程流转 下表单定义和流程模板定义
* 系统管理-员工管理 下系统账号
* 系统管理-权限管理 下角色管理和范围管理

实现构思：
	点击删除，服务器处理，设置是否成功删除信息。如果正常删除则信息为空，如果不为空则修改jsp页面里的弹出
div的css样式（可见），并把信息显示在div里，用户点击div里的关闭按钮或鼠标在div外面点击则div隐藏。

//////////////////
相关系统业务知识：
* 表单定义和流程模板定义的关系：定义流程模板时要选择事先定义好的表单；
* 流程模板被使用后，则此模板不能正常删除，必须先删除用到这个模板的文件，最后没被引用才能删除。
   【系统 问题】问题：
     系统只能看到自己的流程草稿，这样即使是管理员也不方便删除流程草稿，也就不能自由的删除流程模板。

* 流程如果走完后，在流程监控里把它删除的话，流程会再次进入待签核状态（好比刚执行了发起流程操作），此时
只是改变了流程的状态。但，如果在流程监控里流程处于待签核状态，此时执行删除的话就把这个流程删除掉了。
* 要删除流程模板，就需要把使用到模板的所有流程记录都删除掉，以及此流程模板对应的表
* 在定义流程模板时 *weboffice表单 是必填的，否则在选择模板的地方不会出现事先定义的模板。

具体步骤：
-> 找到要修改的相关页面：
     - 表单定义	 weboffice / webofficelist.jsp  表 T_OA_Templatefile
     done
     - 流程模板定义 flowtempletlist.jsp 表 T_OA_FLOWTEMPLATE
     done
     - 系统账号 userlist.jsp  表 T_Sys_User
     关联的数据：用户的快捷方式

     原来是跳转到错误页面显示的，经过检查，发现是由于快捷方式表引用了系统账号表的字段，导致不能删除，
     因为快捷方式可以强行删除，故此处在dao层理强行删除系统账号，不做提示。
     done

     - 角色管理 rolelist.jsp 

     - 范围管理 rangerolelist.jsp 

-> 在相关jsp页面里加入弹出div（提示框）代码 , css样式代码 和必要的js代码。


-> 在相关jsp页面里加入根据服务器返回的删除状态信息控制div显示的逻辑

-> 修改相关页面删除操作对应的action
    - 表单定义 WebofficeAction

     //删除表单，要删除引用表单的流程模板

    struts-common.xml
    		<action class="com.erp.util.WebofficeAction" method="{1}" name="Weboffice_*">
			<result name="view"> /common/weboffice/webofficeview.jsp </result>
			<result name="flowview"> /common/weboffice/officeflowview.jsp </result>
			<result name="input"> /common/weboffice/webofficeinput.jsp </result>
			<result name="flowinput"> /common/weboffice/officeflowinput.jsp </result>
			<result name="flowlist"> /common/weboffice/officeflowlist.jsp </result>
			<result name="flowlistexcel"> /common/weboffice/officeflowlistexcel.jsp </result>
			<result name="archivelist"> /common/weboffice/webofficelist.jsp </result>
			<result name="flowsuccess" type="redirect-action">Weboffice_flowlist?back=1</result>
			<result name="index"> /common/weboffice/webofficeindex.jsp </result>
			<result name="tree"> /common/weboffice/webofficetree.jsp </result>
			<result type="redirect-action">Weboffice_archivelist</result>
		</action>
    - 流程模板定义 FlowtempletAction
      检索已被使用的模板 ：select distinct templetid from t_oa_flowprocess where templetid in("+ids+")

      //删除流程模板，要先删除引用流程模板的那个流程


    - 系统账号 UserAction
    //删除系统账号，要先删除那些数据？ 可以通过删除失败的sql异常信息来找到关联数据
    出错如下：
    ////////////////
	DELETE 语句与 REFERENCE 约束"FK_USER_RE_SHORTCUT"冲突。该冲突发生于数据库"wypm"，
	表"dbo.T_Portal_shortcut", column 'userid'。
    //////////////// 
         得出：系统账号数据表的某个字段被 T_Portal_shortcut （快捷表）的 userid 引用了。故，要删除系统账号，需要
	 先删除引用到账号表字段的快捷表记录。
	 
	 修改UserDao，delUserAndMailuser(final String [] ids)方法，sql语句为：
		

    ////////////////
	struts-sys.xml
		<action class="com.erp.sys.action.UserAction" method="{1}" name="User_*">
			<!-- <result name="index">/erp/sys/frame.jsp</result> -->
			<result name="index">/common/frame.jsp</result>
			<result name="tree">/erp/sys/usertree.jsp</result>
			<result name="view">/erp/sys/userview.jsp</result>
			<result name="input">/erp/sys/userinput.jsp</result>
			<result name="list">/erp/sys/userlist.jsp</result>
			<result name="listexcel">/erp/sys/userlistexcel.jsp</result>
			<result name="edit">/erp/sys/userpass.jsp</result>
			<result name="rangerole">/erp/sys/userrangerole.jsp</result>
			<result name="loginlist">/erp/sys/userloginlist.jsp</result>
			<result type="redirect-action">User_list?back=1</result>
		</action>


修改地方如下：
     * 在jsp页面里：加入 
        <eb:js file="showMsgInDiv.js"/> 导入弹出div框的js代码
	和
	<script type="text/javascript">
		var str = "${delMsg}";
		if(str != ""){
			showMsgWithDiv(str);
		}
        </script>
	—— 根据服务器返回的delMsg的值，来显示消息



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day36 2010年9月27日

1. 继续day35第3条

div全屏弹出代码：

----------------
...
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
		<script type="text/javascript" language="javascript">

		function sAlert(str){
		var msgw,msgh,bordercolor;
		msgw=400;//提示窗口的宽度
		msgh=100;//提示窗口的高度
		bordercolor="#336699";//提示窗口的边框颜色
		titlecolor="#99CCFF";//提示窗口的标题颜色

		var sWidth,sHeight;
		sWidth=document.body.offsetWidth;
		sHeight=document.body.offsetHeight;
		//iframe 盖住下拉框
		var iframeObj = document.createElement("iframe");
		iframeObj.setAttribute("id","iframeObj");
		iframeObj.style.filter = "Chroma(Color=white)";
		iframeObj.style.zIndex = "1";
		iframeObj.style.left = "0";
		iframeObj.style.width = sWidth + "px";
		iframeObj.style.position = "absolute";
		iframeObj.style.top = "0";
		iframeObj.style.height = sHeight + "px";
		iframeObj.style.frameBorder = "0";
		iframeObj.style.scrolling = "no";
		document.body.appendChild(iframeObj);
		//背景div
		var bgObj=document.createElement("div");
		bgObj.setAttribute('id','bgDiv');
		bgObj.style.position="absolute";
		bgObj.style.top="0";
		bgObj.style.background="#777";
		bgObj.style.filter="progid:DXImageTransform.Microsoft.Alpha(style=3,opacity=25,finishOpacity=75";
		bgObj.style.opacity="0.6";
		bgObj.style.left="0";
		bgObj.style.width=sWidth + "px";
		bgObj.style.height=sHeight + "px";
		bgObj.style.zIndex = "1000";
		document.body.appendChild(bgObj);
		//消息div
		var msgObj=document.createElement("div")
		msgObj.setAttribute("id","msgDiv");
		msgObj.setAttribute("align","center");
		msgObj.style.position="absolute";
		msgObj.style.background="white";
		msgObj.style.font="12px/1.6em Verdana, Geneva, Arial, Helvetica, sans-serif";
		msgObj.style.border="1px solid " + bordercolor;
		msgObj.style.width=msgw + "px";
		msgObj.style.height=msgh + "px";
		msgObj.style.top=(document.documentElement.scrollTop + (sHeight-msgh)/2) + "px";
		msgObj.style.left=(sWidth-msgw)/2 + "px";
		msgObj.style.zIndex = "1000";
		//消息标题
		var title=document.createElement("h4");
		title.setAttribute("id","msgTitle");
		title.setAttribute("align","right");
		title.style.margin="0";
		title.style.padding="3px";
		title.style.background=bordercolor;
		title.style.filter="progid:DXImageTransform.Microsoft.Alpha(startX=20, startY=20, finishX=100, finishY=100,style=1,opacity=75,finishOpacity=100);";
		title.style.opacity="0.75";
		title.style.border="1px solid " + bordercolor;
		title.style.height="18px";
		title.style.font="12px Verdana, Geneva, Arial, Helvetica, sans-serif";
		title.style.color="white";
		title.style.cursor="pointer";
		title.style.zIndex = "1000";
		title.innerHTML="关闭";
		title.onclick=function(){
		document.body.removeChild(iframeObj);
		document.body.removeChild(bgObj);
		document.getElementById("msgDiv").removeChild(title);
		document.body.removeChild(msgObj);
		}
		document.body.appendChild(msgObj);
		document.getElementById("msgDiv").appendChild(title);
		var txt=document.createElement("p");
		txt.style.margin="1em 0"
		txt.setAttribute("id","msgTxt");
		txt.innerHTML=str;
		document.getElementById("msgDiv").appendChild(txt);
		}
			</script>

		  </head>
			<body>
				sfsdf
				<br />
				sfsdf
					好
				<br />
				sfsdf
				<br />
								<select name="flowtemplet.type" id="pgform_flowtemplet_type">
		    <option value="">-----请选择----</option>
		    <option value="1">12</option>
		    <option value="2">21</option>
		</select>
				<script type="text/javascript">
					var str = "hello world";
					if(str != ""){
					sAlert(str);
				}
		</script>
	</body>
</html>
...
----------------
【js操作html元素】学习上面代码操作节点，元素的方式，体会控制页面的艺术。

2.. 流程的图示信息 ，以xml的格式描述
例如：
<?xml version="1.0"?>  
<flow name="自定义流程" isedit="true">
<node orders="1">
<item orders="1" man="" manid="" handlemode="1" name="项目经理"/>
</node>
</flow>  

3. 【系统 问题 数据库数据不完整】

例子：
在流程监控里检索主题为111的流程，在数据库中有5条记录，但只有2条的数据是
完整的，在页面上也是显示了完整的记录共2条。

select * FROM t_oa_flowprocess where subject = '111'

还有3条都是缺少templatorid和code等关键字段的数据。

即 t_oa_flowprocess 表里的数据完整性有问题。

select * from t_oa_flowprocess where code is null or templetid is null -- 都是错误数据 // 有一部分数据时却是没有templetid的

4. 一个表对应多个模板的情况。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day37 2010年9月28日

1. 系统数据

-- 流程表 包括草稿箱里的流程，发起的流程，等各种流程数据
-- 得出：code 为null的记录，在系统页面里是检索不出来的（不完整数据）
select * from t_oa_flowprocess a where a.subject like '%33%'

导致无法通过前台页面的操作删除流程模板。只能执行手工的数据库不完整数据清除，才能使业务逻辑正常
进行。【系统 数据库 数据完整性】

可以执行下面语句：【系统 sql】
	delete from t_oa_flowprocess where code is null


2. 对流程表 （包含各种状态，草稿，待签核，未通过等） t_oa_flowprocess 的字段搞清楚：

t_oa_flowtemplate --- 流程模板表
t_oa_flowprocess --- 流程信息基本表
t_oa_flowactivities --- 流程签核记录表 


3. 执行关联数据删除时，注意的问题

删除一条记录，要删除引用到它的数据，也许有多处的引用，必须保证这些相关数据都在一个事物完成，否则
可能导致数据冗余，删除不完全等问题。

【系统 关联数据 事务 删除】

4. 本系统在DAO层设计 HibernateCallback 接口的用意：【系统 接口】
	---------------
	package com.frame.db;

	import org.hibernate.Session;

	public interface HibernateCallback {    

		Object doInHibernate(Session session);  
		
	} 
	----------------

在dao层里 ，通过内部类的方式调用，并实现其方法来使用。

	比如：
	----------------
	...
		public void delUserAndMailuser(final String [] ids){
			new HibernateUtil().execute(new HibernateCallbackWithoutResult() {
				public void doInHibernate(Session session){
				for(int i=0;i<ids.length;i++){
					Object o = session.get(User.class, ids[i]);
					session.delete(o);
				}
				}
			});
		}
	...
	----------------

还有一个接口：HibernateCallbackWithoutResult

	----------------
	package com.frame.db;

	import java.sql.SQLException;

	import org.hibernate.HibernateException;
	import org.hibernate.Session;

	public interface HibernateCallbackWithoutResult {    
		   
	    void doInHibernate(Session session);  
	} 
	----------------

注意： 这样设计的目的？ 看UserDao的例子

* 所有内容保证在同一个一个事务里完成。
* 不用考虑是否能访问到session对象。
* 统一执行入口。

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day38 2010年9月29日

1. 继续 ：

     - 角色管理 rolelist.jsp 
     RoleAction

     系统角色关联的数据：
        1 被用户角色信息表（T_Sys_Userrole）引用 
	2 被角色权限表T_Sys_Policy（存储角色的权限点）引用


     ///////////相关内容/////////////////////////////【系统 角色】
     从 Role 和 UserRole 2个pojo类及其对应的表来分析系统角色的设计。
     Role 是系统的角色定义；UserRole是系统用户的角色信息表，它引用Role的id。
     每个角色都有相应的角色权限数据，存在角色表里；  用户角色信息表通过角色表的id来引用角色，从
     而获得角色信息。
 
     T_Sys_Userrole是角色表T_Sys_Role和用户岗位表T_HR_DUTYPOST的中间表，通过它可以获得用户的岗位对应的
     角色信息。

     select * from T_Sys_Policy -- 角色权限信息表 （权限点对应roleid），实现权限点和角色的多对多关系
     T_Sys_Policy引用角色表id，存放角色的权限（角色id和权限点-Policy对应）数据。
     【系统 权限】权限点 pojo 类 Policy ，作为最小的权限单元 ，类似这样：
		例子，表 T_Sys_Policy ：
		id								rightid	roleid							createdate				lastdate				lastemployeeid
		40288176282a24990128665fcab427c6	1.2.2.2	40288192239dba4b01239e0f71fc017a	2010-05-05 10:51:13.380	2010-05-05 10:51:13.380	402881922257fb89012295d4ccff0a47
		40288176282a24990128665fcab427c7	1.2.3.1	40288192239dba4b01239e0f71fc017a	2010-05-05 10:51:13.380	2010-05-05 10:51:13.380	402881922257fb89012295d4ccff0a47
		40288176282a24990128665fcab427c8	1.2.3.2	40288192239dba4b01239e0f71fc017a	2010-05-05 10:51:13.380	2010-05-05 10:51:13.380	402881922257fb89012295d4ccff0a47


     -- 系统 角色  角色定义表(T_Sys_Role) 和用户角色信息表(T_Sys_Userrole),通过roleid引用 T_Sys_Role表
	select * from T_Sys_Role
		id
		name
		remark
		companyid
		scopeid
		createdate
		lastdate
		lastemployeeid
		isdisable

	select * from T_Sys_Userrole
		id
		dutypostid -- 用户岗位id（通过这个id，可以关联到某个用户）
		roleid -- 引用角色表的id
		createdate
		lastdate
		lastemployeeid

        注：角色是和岗位是多对多的关系，通过用户角色表做为中间表来实现
	
	删除角色逻辑：
	    删除角色，需要先删除用户角色表里引用到这个角色id的记录。

	    从上面分析，如果强行删除角色的话，就是用户的岗位角色会少掉，但对其他地方不影响，建议
	    强行删除。否则需要把每个用户的每个岗位对应的这个角色单独删除，不符合角色管理逻辑。

	    还是作为删除的提示用？
	    或者只做事前提示？
	    类似这样：
		------------------
		...
		if(!confirm("此操作将会删除该范围下所有权限，包括已经分配的人\n确定删除吗？")){
			return false;
		}
		...
		------------------
	     选择提示的方式解决。
     pass

     - 范围管理 rangerolelist.jsp  / 表 t_sys_rangerole
	RangeroleAction

	范围权限关联的数据：
		1 用户范围权限数据表（t_sys_userrangerole）引用它的id
		2 范围权限的详细权限数据表（T_Sys_OrgRangerole）

		-- 范围权限
		select * from t_sys_rangeRole -- 范围权限定义表
		select * from T_Sys_UserRangerole -- 用户范围权限信息表（岗位id和范围权限id对应）
		select * from T_Sys_OrgRangerole -- 存储每个范围权限对应的机构权限 （机构id和范围权限id的多对多实现的中间表）

	根据上面角色的分析，这里也是一样。定义好范围权限表(t_sys_rangerole)后，对应有用户范围权限数据表(t_sys_userrangerole)

	系统逻辑实现片段：
		------------------
		...
			String sql1 = "delete from T_Sys_OrgRangerole where charindex(rangeroleid,'"+ss+"') > 0 ";
		String sql2 = "delete from T_Sys_UserRangerole where charindex(rangeroleid,'"+ss+"') > 0 ";
		session.createSQLQuery(sql1).executeUpdate();
		session.createSQLQuery(sql2).executeUpdate();
		ss = ss.replaceAll(",", "','");
		String sql3 = "delete from T_Sys_Rangerole where id in('"+ss+"')";
		...
		------------------
	选择提示的方式解决。
       pass

2. 看 项目管控考核下的报表

和2010年9月份左右的sql修改记录。

报表数据的计算方式：通过数据库实现（具体：存储过程）；通过应用程序语言（如java）编程实现。

	使用存储过程的特点：
		当企业规则发生变化时在服务器中改变存储过程即可，无须修改任何应用程序。企业规则的特点是要经常变化，如
	果把体现企业规则的运算程序放入应用程序中，则当企业规则发生变化时，就需要修改应用程序工作量非常之大（修
	改、发行和安装应用程序）。如果把体现企业规则的运算放入存储过程中，则当企业规则发生变化时，只要修改存储
	过程就可以了，应用程序无须任何变化。
		对于上面，如果要进行数据库移植，则可能需要重新开发存储过程。
3. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day39 2010年9月30日

1. 看 项目管控考核下的报表 的存储过程

2. 【任务】

对 系统设置-风险管理-风险预警参数设置 下的各个提醒模块的功能实现的效果写成文档，即
这些提醒功能的设置影响那些地方。

这些预警模块是针对工程项目的一些数据进行提醒，在用户上线时通知。故，判断的数据来自于综合项目管理。

类似，设计文档

功能：对什么数据进行提醒




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day40 2010年10月8日

1.写功能文档，具体实现逻辑的细节在继续补充

侧入系统业务。
连带报表计算逻辑。--进展 -- 

2. 系统框架说明对权限设计部分的说明 【系统 权限】

框架文档 P21 D:\resource\doc\ebframe.doc 

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day41 2010年10月9日

1. 修改好文档，

2. 看生成报表数据的sql server存储过程

3. 报表计算的相关资料之数据库
位置 e: 盘

     E:\周材管理（数据字典ER图）.xls
     E:\材料管理
     E:\周材管理

4. 系统业务

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day42 2010年10月11日

1. 系统业务分析

2. 【任务】根据文档，把合同变更风险预警的portal完善好（分为：预警设置页面的完善和预警信息显示的完善）。
其他预警，类推。

预警有2中提示方式，刚登陆时，系统弹出框提醒和portal提醒。

配置文件一 —— 设置预警的action配置：
	-------------
	...
	<action class="com.erp.pm.risk.action.RiskwarnAction" method="{1}" name="Riskwarn_*">
		<result name="index">/erp/pm/risk/riskwarnindex.jsp</result>
		<result name="tree">/erp/pm/risk/riskwarntree.jsp</result>
		<result name="view">/erp/pm/risk/riskwarnview.jsp</result>
		<result name="input">/erp/pm/risk/riskwarninput.jsp</result>
		<result name="list">/erp/pm/risk/riskwarnlist.jsp</result>
		<result name="portal_pm1">/erp/pm/risk/riskwarnportal_pm1.jsp</result>
		<result name="portal_pm3">/erp/pm/risk/riskwarnportal_pm3.jsp</result>
		<result name="portal_pm4">/erp/pm/risk/riskwarnportal_pm4.jsp</result>
		<result name="portal4">/erp/pm/risk/riskwarnportallist4.jsp</result>
		<result name="portal_pm5">/erp/pm/risk/riskwarnportal_pm5.jsp</result>
		<result name="portalmore4">/erp/pm/risk/riskwarnportalmore4.jsp</result>
		<result type="redirect-action">Riskwarn_view?decorator=layoutin</result>
	</action>
	...
	--------------
配置文件二 —— 在portal里显示预警的action配置
	-------------
	...
	<action class="com.erp.pm.risk.action.RiskwarnAction" method="{1}" name="Riskwarn_*">	
		<result name="index">/erp/pm/risk/riskwarnindex.jsp</result>
		<result name="tree">/erp/pm/risk/riskwarntree.jsp</result>
		<result name="view">/erp/pm/risk/riskwarnview.jsp</result>
		<result name="list">/erp/pm/risk/riskwarnlist.jsp</result>
		<result name="input">/erp/pm/risk/riskwarninput.jsp</result>	
		<result name="portal1">/erp/pm/risk/riskwarnportallist1.jsp</result>
		<result name="portal2">/erp/pm/risk/riskwarnportallist2.jsp</result>
		<result name="portal3">/erp/pm/risk/riskwarnportallist3.jsp</result>
		<result name="portal4">/erp/pm/risk/riskwarnportallist4.jsp</result>
		<result name="portal5">/erp/pm/risk/riskwarnportallist5.jsp</result>
		<result name="portalmore1">/erp/pm/risk/riskwarnportalmore1.jsp</result>
		<result name="portalmore2">/erp/pm/risk/riskwarnportalmore2.jsp</result>
		<result name="portalmore3">/erp/pm/risk/riskwarnportalmore3.jsp</result>
		<result name="portalmore4">/erp/pm/risk/riskwarnportalmore4.jsp</result>
		<result name="portalmore5">/erp/pm/risk/riskwarnportalmore5.jsp</result>
		<result name="portalcontractlist">/erp/pm/risk/portalcontractlist.jsp</result>
		<result type="redirect-action">Riskwarn_list?back=1</result>
	</action>
	...
	-------------

数据库表：

	T_PM_RiskWarn -- 预警表

（1）预警信息显示的完善

	预警信息显示的过程：
	1) 取得项目各项数据 和 预警设置页面设置的数据对比
	2）构造预警信息。
	3）到jsp页面显示

	--> 开始 ： 合同变更风险预警

	--> 从portal作为入口，找到此模块对应的：action , service , dao , jsp 等文件  【系统 技巧】根据二次开发的特点，从控制
	台输出来定位资源位置。

		-- 根据portl信息，找到每个portal对应的action
		    select
			* 
		    from
			t_portal_Portlet o 
		    where
			1=1
		部分结果：
		id	title					filename							state	rightid
		7	合同变更风险预警	/portal/Riskwarn_portallet.action?code=2	1		1

	--> action为：/portal/Riskwarn_portallet.action?code=2 （ RiskwarnAction ）
	code 用于区别不同预警类别

	--> acton的portlalet方法
		-----------------
		...
		public String portallet() {
			String code = request.getParameter("code");
			String qlevel = request.getParameter("qlevel");
			String prjid=request.getParameter("prjid");
			if (code.length() > 1) {
				code = code.substring(0, 1);
			}
			String filialeid = getLoginInfo().getFilialeId();// 登陆人所属分公司ID
			String orgid = getLoginInfo().getOrgId();
			RiskwarnService riskwarnService = new RiskwarnService();
			List list = null;
			if("5".equals(code)){
				orgBase("list");
				page = riskwarnService.getPaycashPage(orgid1, orgid2,getLoginInfo().getEmployeeId(),Constant.PAGE_SIZE,getPageIndex(),getLoginInfo().getLogintime());
				list = page.getList();
			}else{
				list = (List)riskwarnService.getPortalInfoList(getQuerywhere(qlevel),prjid,code, orgid, filialeid);
			}
			request.setAttribute("list", list);

			return "portal" + code;
		}
		...
		-----------------

		---> RiskwarnService （到service层	）
		service层的getPortalInfoList()方法是，得到portal数据的主要方法。

			---->　riskwarnDao
	--> code = 2 情况下 视图为 /erp/pm/risk/riskwarnportallist2.jsp

	--> 在portal窗口，点 “更多” 到 riskwarnportalmore2.jsp 页面

	--> 

（2）预警设置页面的完善
	
		这里完成的是，预警成熟的设置，并把设置的值 以 Riskwarn（pojo类）存入数据库；
	只是，设置一个参照对象和项目的数据时没有直接关系的。

	大体步骤：
	1）action是： RiskwarnAction  显示页面：riskwarnview.jsp 修改页面 riskwarninput.jsp （jsp页面都是通用的）

	2）根据doc文档，修改jsp页面的提示内容

	3）显示action传递来的正确数据

	--> URL: http://localhost:8080/wyjs/portal/Riskwarn_index.action

	--> RiskwarnAction的 index 方法 ，显示中间窗口

	--> 点击中间树 例子：http://localhost:8080/wyjs/portal/Riskwarn_view.action?code=2&decorator=layoutin

	--> RiskwarnAction 的 view 方法（显示某个风险预警） 参数：code=2 decorator=layoutin
		------------
		...
		public String view() {
		String code = request.getParameter("code");
		if (code == null) {
			code = (String) session.get("code");
		}
		if (code == null) {
			code = "1";
		}
		request.setAttribute("code", code);

		riskwarn = new RiskwarnService().loadUniqueRiskwarn();

		return VIEW;
		}
		...
		-------------

	--> 


>>>补充<<<：

* 这块的权限，根据是否有项目id的看权限来筛选提示信息的显示与否。【系统 权限】
   在开始的时候就筛选出可见的项目id，然后再看项目预警数据。


* T_PM_RiskWarn 
注意：综合项目管理 系统，是先选择一个项目，在这个项目上面，进行的各项查看和操作。

* 预警参数设置好 + 项目各项数据(从对应的表里统计出来)得到 就可以得到预警信息了，再到jsp页面
显示(portal或弹出提示div)。

* 找到这些数据并根据需要的数据来计算，再比较，构造预警字符串。
* 找到每个预警数据对应的表，计算数据
   方法：
	找到 action，,找到视图，找到范围变量名，找到方法，找到dao层及其方法，找到表

* 筛选条件在 sql语句里判断 达到阀值才返回记录。

* 参照 RiskwarnDao的 getPaycashRiskwarm()方法实现sql

* 通过sql得到预警相关信息，然后在程序逻辑里拼接字符串。
  对于合同变更：把主合同和分包合同都放在一个结果集里，再在java里拼接预警字符串。

   

3. shift + 单击多选框 可以同时选中多个多选框。

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day43 2010年10月12日

1.  day42 第二条

2. 【struts2  OGNL取值】 
看这个例子：
	-------
	...
	<s:iterator value="#attr.list" status="index">
	...
	-------

上面的 list 变量在action里是保存在 request中的，通过上面的 %attr.list方法能取，也可以通过 #request.list 来取。

补充点Struts2 OGNL的知识：

######### struts2  ognl ################

	Struts2 OGNL基础上的增强

	１、值栈(ValueStack)

	Struts2 OGNL上下文设置为Struts2中的ActionContext(内部使用的仍然是OgnlContext)，并将值栈设为Struts2 OGNL的根对象。

	我们知道，Struts2 OGNL上下文中的根对象可以直接访问，不需要使用任何特殊的“标记”，而引用上下文中的其他对象则需要使用“#”来标记。由于值栈是上下文中的根对象，因此可以直接访问。那么对于值栈中的对象该如何访问呢？Struts2提供了一个特殊的OGNLPropertyAccessor，它可以自动查找栈内的所有对象(从栈顶到栈底)，直接找到一个具有你所查找的属性的对象。也就是说，对于值栈中的任何对象都可以直接访问，而不需要使用“#”。

	假设值栈中有两个对象：student和employee，两个对象都有name属性，student有学号属性number，而employee有薪水属性salary。employee先入栈，student后入栈，位于栈顶，那么对于表达式name,访问的就是student的name属性，因为student对象位于栈顶；表达式salary，访问的就是employee的salary属性。正如你所见，访问值栈中的对象属性或方法，无须指明对象，也不用“#”，就好像值栈中的对象都是OGNL上下文中的根对象一样。这就是Struts2在OGNL基础上做出的改进。

	2、[N]语法

	如上所述，如果想要访问employee的name属性，应该如何写表达式呢？我们可以使用[N].xxx(N是从0开始的整数)这样的语法来指定从哪一个位置开始向下查找对象的属性，表达式[1].name访问的就是employee对象的name属性。

	在使用[N].xxx语法时，要注意位置序号的含义，它并不是表示“获取栈中索引为N的对象”，而是截取从位置N开始的部分栈。

	3、top关键字

	top用于获取栈顶的对象，结合[N].xxx语法，我们就可以获取栈中任意位置的对象。

	如：[0].top,[1].top等

	4、访问静态成员

	除了使用标准的OGNL表达式访问静态字段和静态方法外，Struts2还允许你不指定完整的类名，而是通过“vs”前缀来调用保存在栈中的静态字段和静态方法。

	 

	@vs@FOO_PROPERTY@vs@someMethod()@vs1@someMethod()
	 

	 

	vs表示ValueStack，如果只有vs，那么将使用栈顶对象的类；如果在vs后面跟上一个数字，那么将使用栈中指定位置处的对象类。

	标准方法:@类全限定名@静态属性或方法名

	 

	< ?xml:namespace prefix = s />< s:property value="@action.SystemInfo@WEB_CONTEXT">< /s:property>
	 

	 

	5、值栈中的Action实例

	Struts2框架总是把Action实例放在栈顶。因为Action在值栈中，而值栈又是OGNL中的根，所以引用Action的属性可以省略“#”标记，这也是为什么我们在结果页面中可以直接访问Action的属性的原因。

	6、Struts2中的命名对象

	Struts2还提供了一些命名对象，这些对象没有保存在值栈中，而是保存在ActionContext中，因此访问这些对象需要使用“#”标记。这些命名对象都是Map类型。

	parameters

	用于访问请求参数。如：#parameters['id']或#parameters.id，相当于调用了HttpServletRequest对象的getParameter()方法。

	注意，parameters本质上是一个使用HttpServletRequest对象中的请求参数构造的Map对象，一量对象被创建(在调用Action实例之前就已经创建好了)，它和HttpServletRequest对象就没有了任何关系。

	request

	用于访问请求属性。如：#request['user']或#request.user，相当于调用了HttpServletRequest对象的getAttribute()方法。

	session

	用于访问session属性。如：#session['user']或#session.user，相当于调用了HttpSession对象的getAttribute()方法。

	application

	用于访问application属性。如：#application['user']或#application.user，相当于调用了ServletContext的getAttribute()方法。

	attr

	如果PageContext可用，则访问PageContext，否则依次搜索request、session和application对象。

	以上就是对Struts2 OGNL的分析与简介

来自：http://blog.sina.com.cn/s/blog_5bba80460100ejy3.html

###################################


3. 【系统 业务 合同 工程 项目 间的关系】

4. 进一步理解 sql的union的用于 和 List<Map>搭配使用的技巧及好处。
必须自己动手去做才能更快的理解掌握。只是为了学了学效率很低。
—— 从写union查询

5. 合同变更预警done

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day44 2010年10月13日

1. 处理 “进度管理风险预警”

action不变，根据code的不同在service层里有分支，每个分支里写个相应的dao层取数据分发，和处理预
警字符串代码。

步骤：
	-> 在sql命令窗口和控制台窗口测试此模块关联的数据表，作为数据的来源分析记录
	-> 补齐service里这个模块的代码
	-> dao层方法实现
	-> 处理数据显示

相关点：
*  	processdelay	processnode
	11			12

* 进度是以计划进度为依据的。
* 计划总进度 actin ： ProcessallplanAction
* jsp页面：
  portal页面：riskwarnportallist1.jsp
  “更多”页面：riskwarnportalmore1.jsp
  详细页面：processallplanview.jsp
 注：命名一致

【系统 综合项目管理 拦截器】  在进入综合项目管理页面前，都需要先选择工程，然后才能进行后续
操作，这是通过拦截器实现的；如果只是想查看里面的某个页面，可以在请求路径后加上：riskwarn=1，
跳过拦截，注意此时不能让让用户修改，否则报错（修改是依据选择的工程的，这里没有选择工程）。

2. sql日期比较例子，用datediff(xx,xx,xx)函数：

	-------
	...
	-- 总进度工期预警查询
		select b.name as prjname,a.enddate
		from T_PM_Contract a
		left join T_PM_Project b on b.id = a.projectid
		where 1=1
		and a.projectid in ( select p.id 
							  from t_pm_project p 
							  where 1=1  
							  and   p.deptid  in  (select distinct id 
									       from F_OrgRange_new('402881e6220b291201220b9a671c0002','402881922215b1480122160a80ba0a74','402881e6220b291201220b9a671c0002')  
									       )       
						  ) 
		and DATEDIFF(dd,GETDATE(),cast(a.enddate as datetime))<=(
									 select processdelay from T_PM_RiskWarn
									)
		and DATEDIFF(dd,GETDATE(),cast(a.enddate as datetime))>=0
	...
	-------
	
	datediff(MM,getdate(),a.enddate)>3

扩展：sql server的其他日期函数

3. 低级错误 request.getAttribute(); request.getParameter()


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day45 2010年10月14日

1. 处理 “设备维护维修风险预警”   （参照day44的第一条流程）

* 阀值设置
 caredays	repairdays
	31		32

* 设备维护维修的数据管理在：
   
   综合项目管理 > 机械设备管理 > 维修保养 > 维修保养计划 (表信息到sql server命令记录里看)

* 表间关系：每个项目有多个维护计划(T_PM_MachineMaintainPlan —— 根据prjid找这里的记录)，每个维护计划下又
有多条维护记录(T_PM_MachineMaintainPlanDetail —— 根据planid找这里的记录)

【系统 bug 】在综合项目管理下的机械设备管理下的维修保养，增加设备保养记录的弹出窗，显示，操作有问题。待查 ？
input页面需要修改，对一些数据不允许输入，只能通过选择操作，填入数据。

* 设备预警信息的来源：
   根据用户能见的 prjid找到其下的维护计划表，找到维护计划详细表，根据详细表里的registid找到设备登记记录（在
   T_PM_EquipOutLendDetail里）

* jsp页面
	riskwarnportallist3.jsp 
	riskwarnportalmore3.jsp 
	更多：riskwarnportalmore3.jsp
	详细显示： machinemaintainplanview.jsp


2.  get方式传递参数，要注意 
...&color=#666666 是不能传递的 ，不能传递# ，改为 ...&color=666666

3.  【系统 测试 】 本系统的综合项目管理下，测试其下的模块时要注意，session里是否以有工程id，即分已经选择了
工程和绕过工程选择的情况。要注意session里已有的工程id。

4. 【系统 变量】 lengthid ——　一般表示计划期间的id，比如：2010年四季度 这个计划期间的id
   例子：要看某个计划期间下的数据，可以把相应的计划期间id传递过去。
   http://localhost:8080/wyjs/pm/Machinemaintainplan_view.action?lengthid=4028817627d5d21c0127db6cefff00d3&decorator=layoutin

5. 【系统 表】 设备表的设计也是单表通过parentid实现父子级别关系。并设计一个code字段用数字形式体现这样关系（
 在用js插件表示设备树时就很方便） 【系统 code 字段设计】 系统数据库表的 code 字段的设计，方便 js 来呈现记录间的
 父子，上下级的关系。
select * from T_PM_EquipSort where id like '%dcf%'-- 设备表，通过parentid来实现记录的类别父子关系
-----------
...
id								parentid							code		name	remark							companyid						createdate				lastdate	lastemployeeid
402880911ffed6f601200d41bda00dcf		NULL							5		生产设备							402881e6220b291201220b9a66fd0001	2009-03-16 11:09:53.440	NULL	19930802
40288176282a249901287724dcf24311	402880911ffed6f601200d41bda00dcf		5856		交流电焊机 32kV·A					402881e6220b291201220b9a66fd0001	2010-05-08 17:00:24.177	NULL	sunz
40288176282a24990128772e5dcf434f	402880911ffed6f601200d41bda00dcf		5873		履带式液压单斗挖掘机 斗容量 1m3		402881e6220b291201220b9a66fd0001	2010-05-08 17:10:46.990	NULL	zq
...
------------

注：体会parentid ,code字段的设计用意

6.  registid —— 设备登记id  ，这里涉及到系统的业务问题

一个项目的设备来源有下面几个部分：
	* 自购进场 - 
	* 内租进场 - 
	* 外租进场 - 

【系统 历史 数据库 表名 问题 】 每个项目的设备进场前，都要进行 设备预登记 ，再执行后续的购买，签合同之类步骤，后续的数据
就是引用这里预登记的数据，预登记设备表位： T_PM_EquipOutLendDetail  （不要根据表名去理解，由于开发历史导致的
表名与数据不一致）。

这里要注意，设备的业务流程！ 


7.  系统 设备 进场和维护业务流程如下：【系统 设备 业务】
在 机械设备管理 里面：】
-> 先进行 设备预登记
-> 处理设备合同（从预登记里得到设备）
-> 进场
-> 维护

8.  css 样式 可以直接用 onmouseover来改变行背景色，对于多行记录情况
容易区分，人性化。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day46 2010年10月15日

1. 处理 “成本执行风险预警”  参考 day45第一条 结合说明文档

 jsp页面：
   	riskwarnportallist4.jsp 
	riskwarnportalmore4.jsp 
	更多：riskwarnportalmore4.jsp
	详细显示： n/a

	由于这里的成本数据来自多个管理模块，需要对业务一定的熟悉度，故直接调用 成本报表的逻辑，作为
预警的数据来源。对于成本报表数据逻辑待分析。？
	
	分析报表逻辑出来的数据，找到这个地方要的字段 ，数据入口 
	-----------
	...
		GReportService gReportService = new GReportService();
		List<Map> datalist = gReportService.getProjectCostReportList(orgid1, orgid2, "2", employeeid, null, null);
	...
	------------
	------------ debug数据分析 datalist
			[{
		indirectrate=100.0000%, 
		workerdown=2784241.7400, 
			分包费	预算成本(元)	 	sub=0.0000, 
			管理费	预算成本(元)	 	manager=0.0000, 
		directdown=1652301.0000, 
		directrate=100.0000, 
		subdown=0.0000, 
		profitrate=0.0000, 
		taxrate=100.0000, 
		其它直接费	预算成本(元)	 	indirect=1723295.8000, 
		id=4028817626ad26a40126f8aa9fe50245, 
		orgid=40288176282a24990128435699121f8f, 
		workerrate=100.0000, 
		managerrate=0.0000, 
		name=嘉兴市综合交通枢纽项目（一期）施工-土建-01,
		materialdown=23833646.0000, 
			人工费	预算成本(元)	 	worker=2784241.7400, 
		materialrate=100.0000, 
			间接费	预算成本(元)	 	direct=1652301.0000, 
			利润费	预算成本(元)	 	profit=0.0000, 
			利润费	实际成本(元)	 	profitreal=0.0000, 
			分包费	实际成本(元)	 	subreal=0.0000, 
		managerdown=0.0000, 
			机械费	实际成本(元)	 	machinereal=0.0000, 
		status=2, 
		其它直接费	实际成本(元)	 	indirectreal=0.0000, 
			材料费	实际成本(元)	 	materialreal=0.0000, 
		subrate=0.0000, 
		code=010720100223001-1-01, 
			机械费	预算成本(元)	 	machine=120767403.9172, 
			材料费	预算成本(元)	 	material=23833646.0000, 
		profitdown=0.0000, 
			税金费	实际成本(元)	 	taxreal=0.0000, 
		taxdown=587598.4000, 
		machinedown=120767403.9172, 
			管理费	预算成本(元)	 	managerreal=0.0000, 
		indirectdown=1723295.8000, 
			税金费	预算成本(元)	 	tax=587598.4000, 
		machinerate=100.0000, 
			间接费	实际成本(元)	 	directreal=0.0000, 
			人工费	实际成本(元)	 	workerreal=0.0000

		}, 
	------------
	
	对上面各项预算和实际成本求和，算出节/超额和节/超额率

	整理下：
			间接费	实际成本(元)	 	directreal=0.0000, 
			间接费	预算成本(元)	 	direct=1652301.0000, 

			人工费	预算成本(元)	 	worker=2784241.7400, 
			人工费	实际成本(元)	 	workerreal=0.0000

			税金费	预算成本(元)	 	tax=587598.4000, 
			税金费	实际成本(元)	 	taxreal=0.0000, 

			机械费	预算成本(元)	 	machine=120767403.9172, 
			机械费	实际成本(元)	 	machinereal=0.0000, 

			材料费	预算成本(元)	 	material=23833646.0000, 
			材料费	实际成本(元)	 	materialreal=0.0000, 

			利润费	预算成本(元)	 	profit=0.0000, 
			利润费	实际成本(元)	 	profitreal=0.0000, 

			分包费	实际成本(元)	 	subreal=0.0000, 
			分包费	预算成本(元)	 	sub=0.0000, 

			管理费	预算成本(元)	 	managerreal=0.0000, 
			管理费	预算成本(元)	 	manager=0.0000, 

		其它直接费	实际成本(元)	 	indirectreal=0.0000, 
		其它直接费	预算成本(元)	 	indirect=1723295.8000, 
	
	项目的总预算成本 = direct +worker +tax +machine +material +profit +sub +manager +indirect
	项目的总实际成本 = directreal +workerreal +taxreal +machinereal +materialreal +profitreal +subreal +managerreal +indirectreal

2. java的数据计算 问题 ，对于精确计算java处理时要注意的地方

float ，bigdecimal


3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day47 2010年10月18日

1. 测试预警并提交
修改按钮去掉，弹出提示框的url问题

2.  bug 

找不到存储过程 'getcostreport'

-------------
    {call getcostreport(?,?,?)}
14:59:31,062  WARN JDBCExceptionReporter:77 - SQL Error: 2812, SQLState: 37000
14:59:31,062 ERROR JDBCExceptionReporter:78 - 找不到存储过程 'getcostreport'。
org.hibernate.exception.SQLGrammarException: could not execute query
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:67)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:43)
	at org.hibernate.loader.Loader.doList(Loader.java:2223)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2104)
	at org.hibernate.loader.Loader.list(Loader.java:2099)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:289)
	at org.hibernate.impl.SessionImpl.listCustomQuery(SessionImpl.java:1695)
	at org.hibernate.impl.AbstractSessionImpl.list(AbstractSessionImpl.java:142)
	at org.hibernate.impl.SQLQueryImpl.list(SQLQueryImpl.java:152)
	at com.erp.epm.report.dao.GReportDao.getProjectCostReportRealList(GReportDao.java:104)
	at com.erp.epm.report.service.GReportService.getProjectCostReportRealMap(GReportService.java:539)
	at com.erp.epm.report.service.GReportService.getProjectCostReportList(GReportService.java:301)
	at com.erp.pm.risk.service.RiskwarnService.getPortalInfoList(RiskwarnService.java:108)
	at com.erp.common.msg.service.MsgRisk$RiskDoTask.saveCost(MsgRisk.java:77)
	at com.erp.common.msg.service.MsgRisk$RiskDoTask.save(MsgRisk.java:73)
	at com.erp.common.msg.service.MsgRisk$RiskDoTask.run(MsgRisk.java:60)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: java.sql.SQLException: 找不到存储过程 'getcostreport'。
	at net.sourceforge.jtds.jdbc.SQLDiagnostic.addDiagnostic(SQLDiagnostic.java:365)
	at net.sourceforge.jtds.jdbc.TdsCore.tdsErrorToken(TdsCore.java:2781)
	at net.sourceforge.jtds.jdbc.TdsCore.nextToken(TdsCore.java:2224)
	at net.sourceforge.jtds.jdbc.TdsCore.getMoreResults(TdsCore.java:628)
	at net.sourceforge.jtds.jdbc.JtdsStatement.processResults(JtdsStatement.java:525)
	at net.sourceforge.jtds.jdbc.JtdsStatement.executeSQL(JtdsStatement.java:487)
	at net.sourceforge.jtds.jdbc.JtdsPreparedStatement.execute(JtdsPreparedStatement.java:478)
	at org.hibernate.dialect.SybaseDialect.getResultSet(SybaseDialect.java:186)
	at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:193)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:1784)
	at org.hibernate.loader.Loader.doQuery(Loader.java:674)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:236)
	at org.hibernate.loader.Loader.doList(Loader.java:2220)
	... 15 more
	----------

出现点：成本执行风险
原因：存储过程没有更新到数据库
解决：把更新下来的sql执行到数据库里

这里的存储过程是导致部分数据为 0 的原因。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day48 2010年10月19日

1. 测试一些功能，看综合项目管理

预警模块的权限筛选：
	现在是根据用户来筛选的，但是，有些 数据是和范围权限关联的。即，即使能看到预警信息，但没有权限
进入到信息详细页面。

2. 看报表的sql server存储过程。
报表工具的了解

3. 框架+业务 并行 

4. 写个js控制的标签切换效果页 代码如下 可扩展

	--------
	...
		<html>
		<head>
		<title>test alt div</title>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<style>
		.bodyDiv{
			width:50em;
			height:25em;
			background-color:#FFDECE;
		}
		.bodyDivHead{
			background-color:#FF9900;
			/*display:block;*/
		}
		</style>
		<script language="javascript">
			//初始化标签显示 ，注意要在页面加载好后，否则找不到对象
			function initTagShow(){
				var bodyDiv = document.getElementById("bodyDiv");
				var divArr = bodyDiv.getElementsByTagName("div");
				for(i = 1;i<divArr.length;i++){
					var div = divArr[i];
					div.style.display = "none";
				}
			}
			//单击切换标签
			function alttag(obj){
				var divID = obj.name;
				var showDiv = document.getElementById(divID);
				var bodyDiv = document.getElementById("bodyDiv");
				var divArr = bodyDiv.getElementsByTagName("div");
				for(i=0;i<divArr.length;i++){
					var div = divArr[i];
					//alert(div.id);
					if(div.id != divID){
						div.style.display = "none";
					}else{
						div.style.display = "";
					}
				}
			}
		</script>
		</head>
		<body onload="initTagShow()">

		<h3>标签页切换测试</h3>
		<div id="bodyDiv" class="bodyDiv">
			<span class="bodyDivHead"><a href="#" name="tag1" onmouseover="alttag(this)">标签1</a></span>
			<span class="bodyDivHead"><a href="#" name="tag2" onmouseover="alttag(this)">标签2</a></span>
			<span class="bodyDivHead"><a href="#" name="tag3" onmouseover="alttag(this)">标签3</a></span>
			<span class="bodyDivHead"><a href="#" name="tag4" onmouseover="alttag(this)">标签4</a></span>
			<div id="tag1" >页面1</div>
			<div id="tag2" >页面2</div>
			<div id="tag3" >页面3</div>
			<div id="tag4" >页面4</div>
		</div>

		</body>
		</html>
	...
	---------

	体会js找元素对象的方式有哪些，思考jQuery框架的实现基础。

  5209343


5. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day49 2010年10月20日 

1. 看业务

2. 看prototype，jquery等框架的底层实现

就是对js的一个封装，方便js的编写和开发

下面，简单封装了 document.getElementById 方法，可以加入条件对其进行扩展
	-----------
	...
		<html>
		<head>
		<title>do sth like jquery do</title>
		<meta http-equiv="Content-Tpey" content="text/html;charset=utf-8"/>
		<script language="javascript">
		/*通用js代码部分*/
			function $(key){
				return document.getElementById(key);
			}
		</script>
		<script language="javascript">

			function test(){
				var name = $("name");
				alert(name.value);
			}
		</script>
		</head>
		<body>
		<h3>test prototype/jquery like js code </h3>
		输入值：<input type="text" id="name"/>
		<span onclick="test()"><b>Click Me </b></span>
		<body>
		</html>
	...
	-----------

* js的属性：prototype  ，通过这个属性，可以给对象添加新的方法等。

	prototype 属性
	返回对象类型原型的引用。

	objectName.prototype

	objectName 参数是对象的名称。 

	说明
	用 prototype 属性提供对象的类的一组基本功能。 对象的新实例“继承”赋予该对象原型的操作。 

	例如，要为 Array 对象添加返回数组中最大元素值的方法。 要完成这一点，声明该函数，将它加入 Array.prototype， 并使用它。 

	function array_max( ){
	   var i, max = this[0];
	   for (i = 1; i < this.length; i++)
	   {
	   if (max < this[i])
	   max = this[i];
	   }
	   return max;
	}
	Array.prototype.max = array_max;
	var x = new Array(1, 2, 3, 4, 5, 6);
	var y = x.max( );
	该代码执行后，y 保存数组 x 中的最大值，或说 6。

	所有 JScript 固有对象都有只读的 prototype 属性。可以象该例中那样为原型添加功能，但该对象不能被赋予不同的原型。然而，
	用户定义的对象可以被赋给新的原型。

	本语言参考中每个内部对象的方法和属性列表指出哪些是对象原型的部分，哪些不是。

	摘自：javascript文档



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day50 2010年10月21日

1. 报表存储过程代码

2. 项目的各种基本功能的实现思路及方法 ，数据管理，权限控制，事务管理 etc

3. sql 字段出现次数例子 

	-----------
	...
		select * from 
		(
		select b.contractid,count(*) as number from
		t_pm_costareaplan b
		where b.contractid in (
						select distinct a.contractid as id from t_pm_costareaplan a 
					   ) 
		group by b.contractid				   
		) data
		where data.number = 2
	...
	-----------

实际应用：比如要统计各个用户各发布了多少篇文章，就可以按照用户名来分组，计算文章记录数。

4. sql的优化 点


5. 【任务】
* 对技术质量下 和 信息发布了有机构树的页面的dao层sql修改下，默认列表显示所有用户能见的记录。

	公告维护		wait ?对增加按钮的权限控制
	规章制度		done (发布部门为空的记录不显示，是非法数据，故在输入页面需要验证 历史数据问题)
	新技术应用示范	pass
	工法管理		pass
	专利管理		done
	QC成果			done
	科研成果		done
	论文集			done
	质量目标		done (应完成部门越级选择问题) ？done
	标准规范		done
	优质工程		done

* 把相关页面的发布部门部分，注释*号提示和部门选择按钮，只能从中间树确定发布部门。


// 公告维护 dao
		-------------------
		...
			sql.append(" select distinct o.*,b.name as newstypename,org.name as orgname from ( ");
			sql.append(" 	select o.* from T_OA_NEWSAFFICHE o ");
			sql.append(" 		where charindex('"+loginInfo.getEmployeeId()+"',o.readerids,0)>0 ");
			sql.append(" 	union all ");
			sql.append(" 	select o.* from T_OA_NEWSAFFICHE o ,t_sys_group g  ");
			sql.append(" 		where charindex('"+loginInfo.getEmployeeId()+"',g.empids,0)>0   and charindex(g.id,o.readgroupids,0)>0 ");
			sql.append(" 	union all ");
			sql.append("  	select o.* from T_OA_NEWSAFFICHE o ,F_allparentORG('"+loginInfo.getOrgId()+"') p ");		
			sql.append("  		where charindex(p.id,o.readorgid,0)>0 ");
			sql.append(" 	union all ");
			sql.append("  	select o.* from T_OA_NEWSAFFICHE o  ");
			sql.append("  		where  orgid in (  ");
			sql.append(super.getRangeSql(loginInfo.getPostid()));
			sql.append("		) ") ;
			sql.append(" union all ") ;
			sql.append(" 	select o.* from T_OA_NEWSAFFICHE o ") ;
			sql.append("		where orgid in( select id from treelistforsystemorgstartfromid('"+loginInfo.getOrgId()+"')  )  ") ;
			sql.append(" ) o ");
			sql.append(" left join t_hr_org org on o.orgid = org.id");
			sql.append(" left join T_Sys_Dictvalue b on o.newstype =b.id");
			sql.append(" where 1=1 ");
			if(orgid != null && !"".equals(orgid) && !"null".equals(orgid)){
				sql.append(" and org.id in(select id from treelistforsystemorgstartfromid('"+orgid+"') ) ");
			}
			sql.append(where);
			sql.append(" order by o.createdate desc  ");
		...
		-------------------

6. 【系统 bug】 系统某些表单页面的关键字段没有检查，导致空值存入数据库，在java代码里也没判断就
调用，可能出空指针异常 .比如：质量目标里的应完成部门为空的话action抱空指针异常。

7. 系统action的 setShare("t_pm_qualitygoal"); 设置共享权限树 ，在treeadao里，是用表的字段来写的，如果字段不
符合，就会出问题。

这也反映一个问题，如果把关系都写在sql里，而不是定义在hibernate的mapping文件里，在后期维护时，就比较繁杂。
改数据库字段名，则用到的地方都要改。

8. 技术质量 测试用例 ，相同的逻辑 选一个模块测试

设置好测试条件测试下面用例：【测试用例 技术质量，信息发布等处的权限逻辑】

	* 用户自己发的数据自己能看				ok
	* 用户所在的部门发布的数据能看				ok
	* 用户所在可阅读人，可阅读组的数据能看	ok
	* 用户拥有范围权限的数据能看				ok
	* 用户所在机构的下属机构的数据能看		ok
	* 可阅读组和人能看不能改					ok
	* 有范围权限的能看能改					ok
	* 上级机构对下级机构的数据能看能改		ok
	* 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day51 2010年10月22日

1. 应完成部门的选择
sso 了解下

	单点登录：
		当用户第一次访问应用系统1的时候，因为还没有登录，会被引导到认证系统中进行登录；
	根据用户提供的登录信息，认证系统进行身份效验，如果通过效验，应该返回给用户一个认证
	的凭据－－ticket；用户再访问别的应用的时候，就会将这个ticket带上，作为自己认证的凭据，
	应用系统接受到请求之后会把 ticket送到认证系统进行效验，检查ticket的合法性。如果通过效验，
	用户就可以在不用再次登录的情况下访问应用系统2和应用系统3了。

	例子：
		淘宝，支付宝只要登录一次即可互相访问。

2. 【task 处理本系统概要设计说明书】

先内容 ，再排版

3.  ms world 的目录生成 在 插入>引用>索引和目录 里面




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day52 2010年10月25日

1. 【任务】 对 公告维护 进行修改，把其原来的字段改为 shareempids ,shareorgids,sharegroupids

* 将 3个字段改名：
        readerids>shareempids 
	readorgid>shareorgids 
	readgroupids>sharegroupids
	
	sql 语句为：
	------------------
	...
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readerids]', 'shareempids', 'COLUMN'
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readorgid]', 'shareorgids', 'COLUMN'
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readgroupids]', 'sharegroupids', 'COLUMN'
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readernames]', 'shareempnames', 'COLUMN'
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readorgname]', 'shareorgnames', 'COLUMN'
		EXEC sp_rename 'T_OA_NEWSAFFICHE.[readgroupnames]', 'sharegroupnames', 'COLUMN'
	...
	------------------
* 修改用到原字段的地方，dao和jsp（input ,view）页面，pojo类，mapping文件 ；还有portal的相关页面

* 加入 “增加” “修改”等权限 afficheworklist.jsp

增加权限——在js方法里控制（add()），通过action的一个权限设置方法，设置adddata参数
修改—— 在jsp页面控制是否显示，根据的是action的一个权限设置方法,设置read参数，并通过url传递给view页面，以此
判断是否显示修改按钮。

2. sql server 的存储过程 sp_rename 的各式用法

比如：改字段名 EXEC sp_rename 'T_OA_NEWSAFFICHE.[shareempids]', 'readerids', 'COLUMN'

3. 测试 还是按照设计的测试案例一个个测试，这样做比较规范，也能提高效率，不用临时来设计测试用例，
用例还可以在实践中丰富，使得程序更健壮。
【系统 测试】

4. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day53 2010年10月26日

1. 继续概要设计文档

2. office visio 

Microsoft Office Visio 2007 是微软公司出品的一款的软件，它有助于 IT 和商务专业人员轻松地可视化、
分析和交流复杂信息。它能够将难以理解的复杂文本和表格转换为一目了然的 Visio 图表。该软件通
过创建与数据相关的 Visio 图表（而不使用静态图片）来显示数据，这些图表易于刷新，并能够显著
提高生产率。使用 Office Visio 2007 中的各种图表可了解、操作和共享企业内组织系统、资源和流程
的有关信息。

3. sp

4. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day54 2010年10月27日

1. 风险预警 
* 弹出块点击更多链接，进入的页面在取项目名时有问题。因为其他预警都是以prjname作为项目名，
而，合同的数据是以eprjname作为项目名，

解决方式：把合同变更修改为何其他预警同样的字段名 ，即把合同的eprjname改为prjname （涉及：jsp页面 ，即portal和更多
2个页面的修改）

* 弹出块 主合同变更 传递的action(主合同，分包合同是不同的action)有误，导致不能显示合同数据，要修改。
原因是 在 msgrisk 里拼接url时的问题,部分代码如下：

	---------
	...
		Msg msg = getMsg(map.get("info") == null ? "" : map.get("info").toString());
		msg.setEventsource(CON_RISK);
		msg.setOid((String)map.get("id"));
		msg.setTitle("合同变更风险预警");
		msg.setMoreUrl("/portal/Riskwarn_portalletmore.action?code="+Constant.RISKWARN_CONTRACT);
		msg.setUrl("/pm/Subconchange_view.action");
		
		Msgparam riskwarn = new Msgparam("1","riskwarn");
		riskwarn.setMsg(msg);

		msg.getParams().add(riskwarn);
		
		msgList.add(msg);
	...
	---------

修改为 ，根据分包合同和主合同的区别标识，设置对应的url。flag = 1 分包合同 ；flag = 2 主合同


2 . 预警弹出框的相关类 msgrisk

3.  概要设计里 技术框架有的已经改变了，要根据现在的框架来写


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day55 2010年10月29日

1. 【任务 】 找到本系统 选择人员的弹出框 ，有些是重复的，还有些不允许重复
说明 小括号 是要修改的地方；0 -和是否有系统账号无关；1-和是否有系统账号有关

有些人员的选择，必须是有账号的人员，否则可能导致错误，比如发出流程不能成功。

注意：所有用到流程的地方，选择的人员是需要都要账号的人员的弹出框

只看流程里人员是否不重复，其他不涉及流程的跳过。

一、协同门户

     流程流转>发起新流程 流程
     流程流转>我的草稿箱 流程（发送）

     1 流程流转
     * 发起新流程 （流程模板）
     * 我的草稿箱 （流程模板）						？弹出的同步流程里
     * 流程模板定义 （编制人，可引用人）

     2 手机短信
     * 发送短信（接收人(内部):）

     3 即时通信
     * 即时通信 （弹出窗口的 查找/新增联系人 按钮）

     4 工作管理
     * 日程安排>我的日程 （安排人）
     * 日程安排>部门日程 （安排人）
     * 计划总结>总结模板 （引用人员）

     5 信息发布
     * 新闻公告>公告模板 （引用人员）
     * 新闻公告>公告维护 （可阅读人，发布人）
     * 规章制度 （可阅读人,编制人，发布人）

     6 资料中心
     * 学习园地 （共享人员）
     * 软件下载 （共享人员） —— bug 输入页面的发布人字段没有传递过去
     * 资料共享 （发布人，共享人员）

二、人力资源管理

     招聘管理>招聘需求 流程
     招聘管理>招聘计划 流程
     用工管理>入职管理 流程
     用工管理>转正管理 流程
     培训管理>培训需求 流程
     培训管理>培训计划 流程
     退休管理>退休申请 流程

     1 用工管理
     * 转正管理 （员工姓名）
     * 异动管理 （员工姓名）
     * 离职管理 （员工姓名）

     2 社会保障
     * 社保基数 （员工姓名）

     3 培训管理
     * 培训计划 （责任人:）
     * 培训实施 （实到人员）
     * 内部培训讲师 （编号）

     4 绩效考核
     * 考核组设置 —— 修改按钮的 500 bug
     ///////////
     java.lang.OutOfMemoryError: PermGen space

     导致服务器down掉，需要重启
     ///////////

     5 退休管理
     * 退休申请 （员工姓名）

三、档案管理 （跳过，已不用）

     1 档案登记
     * 档案登记>档案登记 —— bug ：列名 orgid 无效
     * 档案登记>证书管理 —— bug ：列名 orgid 无效

     2 借阅管理
     * 借阅申请 （借阅人）
     * 借阅记录 （借阅人） —— bug ：查看 和添加报 列名 liability 无效

     3 卷宗设置 —— bug:列名 orgid 无效

     4 档案基本信息配置
     * 档案基本信息 —— bug：对象名 t_oa_docbasepz 无效

四、市场经营管理

     市场经营管理>项目承接 流程
     市场经营管理>招标信息 流程
     市场经营管理>投标信息 流程
     市场经营管理>签约管理 流程

     1. 市场经营管理
     * 材料信息价>材料信息价上载 （填报人 ）
     * 投标信息 （登记人）

     2 工程登记
     * 项目信息（项目经理）

五、综合项目管理

     综合规划>项目组织>项目组织 流程
     技术质量管理>技术标管理 流程
     技术质量管理>质量检查  流程(发起检查通知)
     技术质量管理>技术申报 流程
     安全生产管理>安全检查>检查整改 流程 （发起整改通知书）
     安全生产管理>安全事故 流程 （发起审批流）
     资金管理>借款信息 流程
     分包管理>合同信息 流程
     分包管理>变更签证 变更签证明细  流程
     分包管理>分包预结算 流程
     材料管理>材料需求总计划>甲供需求总计划 流程
     材料管理>材料需求总计划>集团统供需求总计划 流程
     材料管理>材料需求总计划>公司统供需求总计划 流程
     材料管理>材料需求总计划>项目自统供需求总计划 流程
     材料管理>材料需求月计划>甲供需求月计划 流程
     材料管理>材料需求月计划>集团统供需求月计划 流程
     材料管理>材料需求月计划>公司统供需求月计划 流程
     材料管理>材料需求月计划>项目自供需求月计划 流程
     材料管理>材料采购月计划>甲供采购月计划 流程
     材料管理>材料采购月计划>项目自供采购月计划 流程
     材料管理>材料合同管理>材料供应合同 流程
     材料管理>材料入库>其他入库 流程
     材料管理>库存管理>材料报损 流程
     材料管理>库存管理>废旧材料处理 流程   
     周转材管理>租赁计划  流程
     周转材管理>租赁合同  流程
     周转材管理>自购合同  流程
     周转材管理>租赁计划  流程
     周转材管理>租赁计划  流程
     周转材管理>自购摊销  流程
     机械设备管理>租赁计划 流程
     机械设备管理>租赁合同 流程
     机械设备管理>自购合同 流程
     机械设备管理>自购摊销 流程

     1 综合规划
     * 项目组织>项目组织 （人员清单）

     2 合同管理
     *履约管理>履约检查 （检查人）
     *履约管理>争议与诉讼 （处理人）

     3 进度管理
     * 进度总计划 （审批人）
     * 期间计划进度（审批人）
     * 期间实际进度（审批人）
     * 施工日志  （工程负责人，填表人）

     4 技术质量管理
     * 技术质量文件 —— bug：上传人 没传递
     * 质量月报表 （负责人，填报人）

     5 安全生产管理
     * 安全网络 （分公司经理，分公司分管经理，分公司安全部门负责人）
     * 安全教育 （教育人）

     6 资金管理
     * 资金计划>收入计划 （填报人:）
     * 资金计划>支出计划 （填报人:）
     * 付款申请 （申请人）

     7 分包管理
     * 变更签证 进入变更签证明细 （填报人） —— bug：不能输入表单

     8 劳动力管理
     * 劳动力总需求（审批人）
     * 劳动力进退场>进场记录 （填报人:）
     * 劳动力进退场>退场记录 （填报人:）

     9 材料管理
     * 材料采购月计划>甲供采购月计划（填报人）
     * 材料采购月计划>项目自供采购月计划（填报人）
     * 材料验收 （点收保管员，材料主管）
     * 材料入库>验收采购入库 （材料主管，采购员，入库人）
     * 材料入库>直接采购入库 （材料主管，采购员，入库人）
     * 材料出库>工程领用出库 （发料人，签发人）
     * 材料出库>其他出库 （发料人）     
     * 调拨通知单（材料员，项目经理）
     * 库存管理>材料报损 （材料主管，申报人员）
     * 库存管理>废旧材料处理（材料主管）
     * 库存管理>材料盘点（盘点人）

     10 周转材管理
     * 租赁进场>内租进场 （进场负责人）
     * 租赁进场>外租进场 （进场负责人）
     * 租赁退场>内租退场 （退场负责人）     
     * 租赁退场>外租退场 （退场负责人）     

     11 机械设备管理
     * 自购进场 （设备主管，财务人员，统计员，采购员，进场人）
     * 设备进场>内租进场 （填报人，验收人）
     * 设备进场>外租进场 （填报人，验收人）
     * 设备退场>内租退场 （填报人，验收人）
     * 设备退场>外租退场 （填报人，验收人）
     * 维修保养>维修保养计划 （填报人）
     * 维修保养>维修保养记录 （负责人）

     12 竣工管理
     * 竣工资料（上传人）
     * 工程结算>结算计划 （项目经理，结算负责人）
     * 工程结算>结算资料 （上传人）
     * 工程结算>已结算信息 （结算人）
     * 保修期管理>回访报告 （回访人员）
     * 保修期管理>回访记录 （维修负责人，验收人员姓名）    

六、项目管控考核

     周转材管理>采购计划 流程
     周转材管理>采购合同 流程
     周转材管理>周转材流转>周材调拨 流程
     周转材管理>周转材流转>退场通知单 流程     
     机械管理>采购计划 流程
     机械管理>采购合同 流程     
     机械管理>设备流转>设备调拨 流程
     机械管理>设备流转>项目部退场通知 流程



     1 周转材管理
     * 周材入库（仓库管理员，财务，统计员）
     * 周转材流转>周转材调拨（调拨人）
     * 周转材流转>退场通知单（发起人）

     2 机械管理
     * 采购计划 （填报人）
     * 设备登记（登记人）
     * 设备流转>设备调拨（调拨人）
     * 设备流转>项目部退场通知（发起人）
     * 备品备件>仓库设置 （仓库管理员，财务，统计员）
     * 备品备件>备件出库（领料人）
     * 备品备件>备件盘点（经办人）

     3 技术质量

     *  新技术应用示范（可阅读人）
     *  工法管理（可阅读人）
     *  专利管理（可阅读人）
     *  QC成果（可阅读人）
     *  科研成果（可阅读人）
     *  论文集（可阅读人）
     *  质量目标（可阅读人）
     *  标准规范（可阅读人）
     *  优质工程 （可阅读人）

     4 资金管理
     * 付款信息（经办人）

七、系统管理

     1 员工管理
     * 系统账号 （姓名）

八、系统设置



2. 【系统 问题】 由于操作的内容多了，可能会导致各种内存各部分的溢出，需要仔细配置好，否
则需要经常重启服务器。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day56 2010年11月1日

1. 概要文档的 数据库、接口说明部分



2. 系统的工作流分析  

几张表：
    t_oa_flowtemplate —— 流程模板定义表
    t_oa_flowprocess —— 流程表
    t_oa_flowactivities —— 流程签核表
	

-- 流程模板表表
	-- id	name	tablename-和模板关联的表名称	officeid-weboffice模板ID（即T_OA_Templatefile的id，只有使用weboffice的模板
	才有这个值） 	flowxl-模板XML编码	type-模板类型(数据字典)	
	-- readuserlist-模板可用人员	readusernamelist	floworgroup-机构组	floworgroupname	usergroup-可引用的自定义组列表	
	-- usergroupname	drafsman-起草人	drafsmanrecall-起草人是否可撤回流程 0、否；1、是。	companyid	lastdate	isweboffice-
	是否使用weboffice 0:否1：是（貌似后面修改了 还有 2,3）	
	-- remark	lastemployeeid	processtemplet	isdisable
	select *  from T_OA_FLOWTEMPLATE  a  where a.officeid is not null
	select *  from T_OA_FLOWTEMPLATE  a  where a.isdisable is  null


	select b.filename,*  from T_OA_FLOWTEMPLATE  a -- where a.officeid is not null
	join T_OA_Templatefile b on b.id = a.officeid

-- 流程表
	-- id	templetid-流程模板ID	bycalendar-是否通过短信通知 0、否；1、是。	operationid-需要发送流程的数据ID	subject-主题	
	-- states-状态 0、未提交(草稿) 1、已提交（流程开始）； 2、正常结束 3、发起人撤回 4、未通过打回	
	-- flowxml	historyopinion	tablename	companyid	lastdatetime	createdate	lastemployeeid	code	gfile	synch
	select * from T_OA_FLOWPROCESS

-- office 表单类型 表 （被流程模板表引用，定义流程模板是否使用office表单）
	select * from T_OA_Templatefile



-> 建立流程模板要用到的表单


3. 数据字典的设计考虑 （系统数据的抽象，表的设计）
把一些原始的，不与其他数据关联的数据（或者称其为元数据），字段定义在数据字典里 比如文件类型等等。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day57 2010年11月2日


1. 工作流


2. 【任务】
规章制度新增时 编制人为非必录项（红心去除）修改时 发布部门要能修改
新闻公告-公告维护修改时 发布部门也要能够修改

【修改】
erp/oa/issue/regulationsinput.jsp
erp/oa/affiche/newsafficheinput.jsp

升级步骤：
	- 写好升级说明 （不要忘了）
	- 升级


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day58 2010年11月3日

1. 工作流

2. sp熟练

3. 复习回调 【回调】
本系统的dao里看不到session对象的，在dao层理把要执行的sql和参数传递给一个通用工具类（HibernateUtil）的
相应静态方法（根据需要的返回值确定那个方法），这样dao层再接受工具类返回的结果，并继续返回。

这样设计，就把共用的代码抽取为工具类，作为基础框架的一部分。也把异常处理的代码重复使用，不用到处都是
异常处理逻辑。

这也是本系统框架设计的一个点。

部分代码如下：

	 FlowprocessService （从上面的 dodels 方法）
		------------
		...
			public void dodels(final String[] ids, final HttpServletRequest request,
					final Flowprocess flowprocess) {
				new HibernateUtil().execute(new HibernateCallbackWithoutResult() {
					public void doInHibernate(Session session) {
						Flowactivities flowactivities = null;
						for (int i = 0; i < ids.length; i++) {w
							if(ids[i] == null || ids[i].length() < 3){
								continue;
							}
							String[] idandtable  = flowprocessDao.getIdAndTable(session, ids[i]);
							if(idandtable == null || idandtable.length < 2){
								continue;
							}
							String[] tableid = new String[1];
							Flowprocess flowprocess = (Flowprocess) flowprocessDao.loadEntry(session, ids[i]);
							if ("".equals(idandtable[0])&& ConvertUtil.isNotEmpty(flowprocess.getTablename())) {
								idandtable = flowprocessDao.getTabledtoId(session, flowprocess.getId(),flowprocess.getTablename());
							}
							tableid[0] = idandtable[0];
							if (ConvertUtil.isNotEmpty(tableid[0])) {
								new Archivesutil().doFlowDelete(tableid, idandtable[1],session);
								// uploadfiledelDao.deldoc(session, tableid);
							}
							List flows = flowprocessDao.getFlowactivitiesByprocessid(session, ids[i]);

							for (int j = 0; j < flows.size(); j++) {
								flowactivities = (Flowactivities) flows.get(j);
								session.delete(flowactivities);
								// flowactivitiesDao.delEntry(session,
								// flowactivities.getId(), Flowactivities.class);
							}

							// 删除存放历史记录的表中数据
							deleFlowHistory(session, ids[i]);
						}
						
						new MsgService().doDelsByOid(session,ids,Constant.FLOW_EVENT);
						
						for (int i = 0; i < ids.length; i++) {
							if(ids[i] == null || ids[i].length() < 3){
								continue;
							}
							flowprocessDao.delEntry(session, ids[i], Flowprocess.class);
						}
					}
				});
			}
		...
		------------

		补充；上面的回调函数执行代码如下
		HibernateUtil.java
		-------
		...
			public  void execute(HibernateCallbackWithoutResult action)  {    
				Session session = null;
				try {
					session = HibernateUtil.openSession();
					session.beginTransaction();
				    action.doInHibernate(session);  // 这里传入session对象
					session.getTransaction().commit();
				} catch (JDBCException ex) {
					if (session != null) {
						session.getTransaction().rollback();
					}
					throw new MyException(ex.getSQLException());
				} finally {
					if (session != null && session.isOpen()) {
						session.close();
					}
				}
			} 
		...
		-------

	再比如下面例子，用了回调，service层可以不出现 数据库操作的 try catch 语句，不用提供session对象，，把公用代码（异常，
开启/关闭事务等）都抽取到一个地方了（就是上面的方法）。execute方法接收HibernateCallbackWithoutResult 和HibernateCallback ，涵盖
了带结果和不带结果的操作，满足各模块调用。
	------
	...
		public String addProviderinfo(final Providerinfo providerinfo) {
			Object id = new HibernateUtil().execute(new HibernateCallback(){
				@Override
				public String doInHibernate(Session session) {
					String code = getMaxcode(session);
					providerinfo.setCode(code);
					SimpleData o=(SimpleData)providerinfo;
					return providerinfoDao.addEntry(session, o);
				}
			});
			return id.toString();
		}
	...
	------

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day59 2010年11月4日

1. dao层调用存储过程例子 hibernate定义和调用存储过程 【hibernate与存储过程】

可以用存储过程执行查询，更新等操作。

下面是例子：

存储过程（getcashepm）代码：
	---------------
	...
		USE [wypm]
		GO
		/****** Object:  StoredProcedure [dbo].[getcashepm]    Script Date: 11/04/2010 09:48:10 ******/
		SET ANSI_NULLS ON
		GO
		SET QUOTED_IDENTIFIER ON
		GO
		ALTER proc [dbo].[getcashepm](@treeorgid varchar(50),@loginorgid varchar(50),@employeeid varchar(32),@status varchar(10),@type 
		varchar(10),@startdate datetime,@enddate datetime)
		as
		begin

		declare @_tree_orgid varchar(50);
		declare @_login_orgid varchar(50);
		declare @_employeeid varchar(50);
		declare @_status varchar(50);
		declare @_startdate datetime;
		declare @_enddate datetime;
		declare @_range_where varchar(8000);
		declare @_len int;
		declare @_in_sql varchar(8000);
		declare @_type varchar(50);

		set @_tree_orgid = @treeorgid;
		set @_login_orgid = @loginorgid;
		set @_employeeid = @employeeid;
		set @_startdate = @startdate;
		set @_enddate = @enddate;
		
		...
		...
		...

		end
	...
	---------------

mapping文件里定义存储过程：
	---------------
	...
		<?xml version="1.0"?>
		<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
		<hibernate-mapping>
		<class name="com.erp.epm.report.dto.FundReport" table="t_epm_FundReport">
		...
		...
		...
		</class>
		<sql-query name="getcashepm" callable="true">
			<return class="com.erp.epm.report.dto.FundReport" alias="report">
				<return-property name="id"   		column="id" ></return-property>
				<return-property name="name" 		column="name"></return-property>
				<return-property name="code" 		column="code"></return-property>
				<return-property name="gathering"  column="gathering"/>
				<return-property name="firstIncome"  column="first_Income"/>
				<return-property name="otherIncome"  column="other_Income"/>
				<return-property name="incomeSubtotal"  column="income_Subtotal"/>
				<return-property name="taxPay"  column="tax_Pay"/>
				<return-property name="managerPay"  column="manager_Pay"/>
				<return-property name="loan"  column="loan"/>
				<return-property name="loanRepayment"  column="loan_Repayment"/>
				<return-property name="arrearsPay"  column="arrears_Pay"/>
				<return-property name="inOutBalance"  column="in_Out_Balance"/>
				<return-property name="arrearsBalance"  column="arrears_Balance"/>
				<return-property name="payment"  column="payment"/>
				<return-property name="loanBalance"  column="loan_Balance"/>
			</return>
			{call getcashepm(?,?,?,?,?,?,?)}
		</sql-query>


		</hibernate-mapping>
	...
	---------------
注：上面的sql-query配置，让hibernate把存储过程的返回值自动映射为对象（FundReport）

dao(调用sp)代码
	-----------------
	...
		public List<FundReport> getFundList(String type, String orgid1,
				String orgid2, String employeeId, String status, Date startdate,
				Date enddate) {
			Session session = HibernateUtil.openSession();
			Transaction tran = session.beginTransaction();
			List<FundReport> list = null;
			try{	
				//------------getNamedQuery()方法调用mapping文件定义好的query ，即 {call getcashepm(?,?,?,?,?,?,?)}---------
				Query query = session.getNamedQuery("getcashepm");
				query.setString(0, orgid1); 
				query.setString(1, orgid2); 
				query.setString(2, employeeId);
				query.setString(3, status);
				query.setString(4, type);			
				query.setDate(5, startdate);
				query.setDate(6, enddate);
				list = query.list();
				tran.commit();
			}catch(Exception e){
				e.printStackTrace();
				tran.rollback();
			}finally{
				if(session != null && session.isOpen()){
					session.close();
				}
			}
			return list;
		}
	...
	-----------------

	【存储过程】测试
	
	dbo.getcostreport @startdate='2011-10-1 00:00:00.000',@enddate='2011-10-31 00:00:00.000',@projectname='杭州奥体博览城配套整治工程安置用房I标段-土建-01'



2. share to，分享到，转发到 等的实现原理 ，接口？

实际上就是数据的识别解析再存储过程。根据接收方的数据导入接口，导入数据。

现在已经有人专门开发了分享的工具 ，看这里：http://www.jiathis.com	—— 加网 - 国内最大的社会化分享按钮及分享工具提供商

	不过上面的只能分享地址，并不能实现类似转帖的功能：转帖应该就是知道对方的入口，然后把各个字段值设置好，提交到入口，
这个input页面可以照搬各个空间的input页面；不过，现在多数站点都提供接口，以方便分享。



3. iweboffice控件的使用


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day60 2010年11月5日

1. 本系统 hibernate 映射文件里没有定义关系，在数据库里定义了部分的外键关系，关系的维护时在逻辑程序里完成的。
hibernate关系的映射问题，如何选择？
* 表的关系如实建立，映射文件根据表的关系如实映射
* 表间不建立关系（即使有），而在映射文件里定义
* 表间不建立关系（即使有，除了父子表用强外键关联），其他在程序里去维护，否则关联太深不好维护。



2. 从删除系统用户的用例，看数据操作 ；也看部分表没有建立本应有的外键关系，然后再数据维护时，如何保持数据的
完整，不冗余

比如：删除 "XXX"系统账号 ，本系统 报 ：

[ 数据已经被引用，若要删除须先删除引用数据 显示详细信息 隐藏详细信息 ]

错误，说明这个是有外键关系的，不过，在系统账号管理页面，弹出这样的提示不够友好  ，可以参照其他模块的删除提
示，“删除XXX账号，其相关的数据也将被删除，确定吗？” ，或者再列出哪些数据会被删除。

【系统 建议】


3. 系统 bug 文本编辑器
系统的webedit组件，在焦点不在输入窗口时，如果执行插入表格或图片，则可能内容跑到输入框外面，例如
跑到按钮上面去了。

对于可编辑iframe里面内容的保存问题 ？


4.  JS + CSS + 一张图片 实现工具栏按钮的图片显示




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day61 2010年11月8日

1. sp

2. 【任务】
<task 1>
	新闻公告-公告维护中 添加一条设置了可阅读组为浙北公司的信息 但是具有浙北公司范围权限的用户却看不到

	对于可阅读人检测：
	使用 角色权限：SYS_系统管理员（网络管理员-局部权限），范围权限：系统管理员（全局-最高权限）账号在公告维
	护下新建一条信息，可阅读人只选择了测试培训，但是另一具有角色权限：SYS_系统管理员（网络管理员-局部权限），范围权限：系统管理员（全局-最高权限）的账号也能看到此条信息。

	对于可阅读组检测：
	新建一条信息，可阅读组选择“浙北范围权限”，用测试培训账号进行测试：
	1.测试培训账号无范围权限，登录后能看到通知公告里的所有信息
	2. 测试培训账号浙北范围权限，登录后在能看到通知公告里的所有信息
	3. 测试培训账号非浙北范围权限，登录后能看到通知公告里的所有信息

	可阅读人与可阅读组功能还需完成。
<task 2>
	1.新技术应用示范 所属部门要能修改 左边组织树显示到部门级
	2.工法管理 编制人 改成手输 所属部门改成能修改 左边组织树显示到部门级
	3.专利管理 所属部门要能修改 左边组织树显示到部门级
	4.QC成果 所属部门要能修改 左边组织树显示到部门级
	5.科研成果 所属部门要能修改 左边组织树显示到部门级
	6.质量目标 发布部门要能修改 列表中的老数据点击文件编号查看时报错
	7.标准规范 所属部门要能修改 左边组织树显示到部门级
	8.优质工程 所属部门要能修改 左边组织树显示到部门级

	* request.setAttribute("treebz","hr") 设置为hr返回职能部分的机构树

	问题：这样会显示项目部 ？

	有三公司的范围权限意味着： 【系统 范围权限】 对于系统范围权限的理解
	    * 三公司能看的数据你也能看 （比如个文档设置了五洋建设的权限，三公司属于五洋建设故它能看，同样拥有三公司范围权
	    限的也应该能看）
	    * 属于三公司的数据能看能改，通过可阅读权限只能看
	    * 


3. 利用MyEclipse的TCP/IP monitor工具 ，测试多个地方引用同一张图片，是否会重复下载？

请求数据如下：

	GET /wyjs/common/webedit/ie/rte.html HTTP/1.1
	Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-silverlight, */*
	Accept-Language: zh-cn
	Accept-Encoding: gzip, deflate
	User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; CIBA)
	Host: localhost:8888
	Connection: Keep-Alive
	Cookie: cod=402881e6220b291201220b9a671c0002.4028819222bed3240122ce838c572eab.4028819222bed3240122ce88f24c2ec3.4028819222bed3240122ceadb9562ec9.4028819223bb58280123c21fe8f80437.4028819222bed3240122cf8b424a2f83; csd=4028819223bb58280123c585576d049a; disp=; JSESSIONID=BCCADACDB61B6F1038B644E7E41DA094

	GET /wyjs/common/webedit/ie/rte.gif HTTP/1.1
	Accept: */*
	Referer: http://localhost:8888/wyjs/common/webedit/ie/rte.html
	Accept-Language: zh-cn
	Accept-Encoding: gzip, deflate
	User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; CIBA)
	Host: localhost:8888
	Connection: Keep-Alive
	Cookie: cod=402881e6220b291201220b9a671c0002.4028819222bed3240122ce838c572eab.4028819222bed3240122ce88f24c2ec3.4028819222bed3240122ceadb9562ec9.4028819223bb58280123c21fe8f80437.4028819222bed3240122cf8b424a2f83; csd=4028819223bb58280123c585576d049a; disp=; JSESSIONID=BCCADACDB61B6F1038B644E7E41DA094

	GET /wyjs/common/common/blank.jsp HTTP/1.1
	Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-silverlight, */*
	Referer: http://localhost:8888/wyjs/common/webedit/ie/rte.html
	Accept-Language: zh-cn
	Accept-Encoding: gzip, deflate
	User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; CIBA)
	Host: localhost:8888
	Connection: Keep-Alive
	Cookie: cod=402881e6220b291201220b9a671c0002.4028819222bed3240122ce838c572eab.4028819222bed3240122ce88f24c2ec3.4028819222bed3240122ceadb9562ec9.4028819223bb58280123c21fe8f80437.4028819222bed3240122cf8b424a2f83; csd=4028819223bb58280123c585576d049a; disp=; JSESSIONID=BCCADACDB61B6F1038B644E7E41DA094

	GET /wyjs/common/common/blank.jsp HTTP/1.1
	Accept: */*
	Referer: http://localhost:8888/wyjs/common/webedit/ie/rte.html
	Accept-Language: zh-cn
	Accept-Encoding: gzip, deflate
	User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; CIBA)
	Host: localhost:8888
	Connection: Keep-Alive
	Cookie: cod=402881e6220b291201220b9a671c0002.4028819222bed3240122ce838c572eab.4028819222bed3240122ce88f24c2ec3.4028819222bed3240122ceadb9562ec9.4028819223bb58280123c21fe8f80437.4028819222bed3240122cf8b424a2f83; csd=4028819223bb58280123c585576d049a; disp=; JSESSIONID=BCCADACDB61B6F1038B644E7E41DA094

* 分析上面，对于/wyjs/common/webedit/ie/rte.gif的请求只执行了一次。所以页面设计鼓励图片的重用，客户端少下载文件，提高响应速度。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day62 2010年11月9日

1. 测试系统功能


2. 系统皮肤切换的实现，通过调用不同的css样式库

具体实现：

* 事先按照系统定义多个不同风格的样式库，以不同的文件夹存放 
* 有个表存放用户的样式设置信息
* 通过修改表的数据显示不同风格

本系统:  T_Sys_User表的theme字段，存储样式文件夹名
；用eb自定义的标签输出样式引用代码。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day63 2010年11月10日


1. 问题

* 对于系统的数据按权限显示，整理一个详细的用例需求，按照这个需求测试
* 系统设置-资料库-材料明细 里，在右边列表页面，进入下一页后，执行查看操作，再执行返回，会【系统 返回功能 过期 问题】
提示网页过期bug ，提示信息为“警告：网页已经过期” ：
      原因是：返回的js有问题 ，
      	<input type="button" id="backsubmit" value="  返回" class="button_back" onmouseout="this.className='button_back'"
	onmouseover="this.className='button_back2'" onclick="javascript:history.go(-2)"/>

	第一页 ，可以go(-2)，但是，后续页面就不能这样写了，应该用如下方式返回：

	function back()
	{
		document.location = "/wyjs/pm/Workersort_list.action?back=1";
	}
	
	这里的action是 ResourceAction ，即 document.location = "/wyjs/pm/Resource_list.action?back=1"

	还有 ，这个action的list方法也要修改下，参照WorkersortAction使用系统自带返回功能的逻辑代码。

		-------------
		...
			public String list() {
			 if (new BackPage().exec(request,response,1))//从其它页面返回时使用
				{
			String qlevel = request.getParameter("qlevel");
			page = new WorkersortService().getWorkersortList(getQuerywhere(qlevel), getPageIndex()
					.intValue(), Constant.PAGE_SIZE);
			page.setUrl(request.getRequestURI());

			return LIST;
				}
			 return null;
		}
		...
		-------------

	------------------ 补充 -------------------
         	系统返回功能实现方式
	---------------------------------------------
		分析上面action的list方法，在执行list方法前，执行了一个开关逻辑（就是返回功能的逻辑），即：
	如果不是返回，则把请求参数保存在session里，如果是返回则从session里得到路径并跳转，这些都是在
	BackPage类里实现的。使用这个返回逻辑，只需在执行的方法里引用这个开关。

	BackPage类代码如下：
		------------
		...
			Log log = LogFactory.getLog(BaseAction.class);
			/**
			 * level是列表的级别，是第一层列表还是第二层
			 * @param request
			 * @param level
			 */
			@SuppressWarnings("deprecation")
			public boolean exec(HttpServletRequest request, HttpServletResponse response,int level) {
				log.info("返回功能设置值----");
				HttpSession session=request.getSession();
				String back = request.getParameter("back");//从查看页面等按返回按钮的标志
				//String redirect = request.getParameter("redirect");//返回后页面强制跳转的标志
				if (back != null && "1".equals(back)){ //单击返回按钮后，从session取值，并跳转页面
					try {
						String url=(level==1?(String)session.getAttribute("back1"):(String)session.getAttribute("back2"));
						log.debug("返回功能进行页面跳转url:"+url);
						response.sendRedirect(url);
						return false;
					} catch (Exception e) {}
				}else {//不是返回的时候，把参数连接成字符串，放到session里
					Enumeration qnames = request.getParameterNames();
					String qstring = "";
					while (qnames.hasMoreElements()) {
						String qname = (String) qnames.nextElement();
						String[] qvalues = request.getParameterValues(qname);
						for (int j = 0; j < qvalues.length; j++) {
							qstring = qstring + java.net.URLEncoder.encode(qname) + "="
									+ java.net.URLEncoder.encode(qvalues[j]) + "&";
						}
					}
					String backurl = request.getRequestURI() + "?" + qstring;
					if (level==1){
						session.setAttribute("back1",backurl);
					}else{
						session.setAttribute("back2",backurl);
					}
				}
				return true;
			 }
			
			}
		...
		-------------


2. 分析html页面的IE插件 ：IE Developer Toolbar


3.  系统 bug
* 协同门户-流程流转-流程监控 下某些查看页面里的表单域可编辑，应修改为不能编辑
* 

	系统的账号权限要设置正确，否则会导致数据无法显示【系统 权限】

4. 安全控件 

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day64 2010年11月11日

1. 手机版访问系统的实现技术和原理


2. 本系统对的webservice应用
ws:xml soap 容器

竣工归档模块与第三方财务之间用的webservice

webservice分为发布服务和使用服务，其中使用服务比较简单，发布webservice服务较复杂，需要配置服务描述符等

3. 技术讨论会

4. 总结



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day65 2010年11月12日

1. 测试系统的自动生成代码功能
* DaoUtil.java —— 配置数据库连接配置
* inc.jsp —— 配置 src ，app文件夹位置
入口： /tool/index.jsp

另外，从这里可以看系统的表说明（表注释）

2. sql server 的函数 （2008）
在sql server的管理器中，每个数据库下都有很多内置的函数，按不同类别划分的

比如字段注释查看：
	SELECT   *
	FROM   ::fn_listextendedproperty (NULL, 'user', 'dbo', 'table', 'T_Sys_User', 'column', default)

	fn_listextendedproperty 就是个表值函数


3. dwr 
通过看java web项目web-inf文件夹下的配置文件，也可大概预览系统用到的技术。

使用dwr的基本步骤：
* 拷贝jar包
* 在web.xml里配置插件
* 配置dwr配置文件
* 进调试页面

进入调试页面 http://localhost:8080/<context>/dwr/就可以进入调式页面



【学习 插件】先了解插件大概，再到技术站点看相关的入门文章，结合最简单例子再看，基本会使用，
再根据需要，查阅文档数据深入掌握。- 依托于互联网的便利和无所不包

【系统 安全 问题】系统正式发布后，dwr调试功能要关闭 ；也反映到，用了某些插件后，系统的安全问题
要多多注意。
	web.xml 
	如果放到正式的系統環境,記得把debug改成false 
	----------
	...
		  <servlet>
		    <servlet-name>dwr-invoker</servlet-name>
		    <servlet-class>uk.ltd.getahead.dwr.DWRServlet</servlet-class>
		    <init-param>
		      <param-name>debug</param-name>
		      <param-value>false</param-value>
		    </init-param>
		    <load-on-startup>10</load-on-startup>
		  </servlet>
	...
	-----------

4. 技术质量 现在sql版本

	------------
	...
		sql.append(" select distinct o.* ,dict.name as huoj,org.name as deptname from ( ");
		//可阅读人
		sql.append(" 	select o.* from t_pm_quademotechnicnew o ");
		sql.append(" 		where charindex('"+loginInfo.getEmployeeId()+"',o.shareempids,0)>0 ");
		//可阅读人员组
		sql.append(" 	union all ");
		sql.append(" 	select o.* from t_pm_quademotechnicnew o ,t_sys_group g  ");
		sql.append(" 		where charindex('"+loginInfo.getEmployeeId()+"',g.empids,0)>0   and charindex(g.id,o.sharegroupids,0)>0 ");
		//上级机构在可阅读机构组里
		sql.append(" 	union all ");
		sql.append("  	select o.* from t_pm_quademotechnicnew o ,F_allparentORG('"+loginInfo.getOrgId()+"') p ");		
		sql.append("  		where charindex(p.id,o.shareorgids,0)>0 ");
		//范围权限（范围权限所在机构可见的数据）
		sql.append(" 	union all ");
		sql.append("  	select o.* from t_pm_quademotechnicnew o  ");
		sql.append("  		where  orgid in (  ");
		sql.append(super.getRangeSql(loginInfo.getPostid()));
		sql.append("		) ") ;
		//
		sql.append(" union all ") ;
		sql.append(super.getRangeShareSql(null, "t_pm_quademotechnicnew", loginInfo.getPostid(), null)) ;
		sql.append(" union all ") ;
		//所在机构可读的数据（所在机构及其子机构）
		sql.append(" 	select o.* from t_pm_quademotechnicnew o ") ;
		sql.append("		where orgid in( select id from treelistforsystemorgstartfromid('"+loginInfo.getOrgId()+"')  )  ") ;
		sql.append(" ) o left  join t_sys_dictvalue dict");
		sql.append(" on o.reward = dict.id ");
		sql.append(" left join t_hr_org org on org.id=o.orgid ");
		sql.append(" where 1=1 ");
		if(orgid != null && !"".equals(orgid) && !"null".equals(orgid)){
			sql.append(" and org.id in(select id from treelistforsystemorgstartfromid('"+orgid+"') ) ");
		}
		sql.append(where);
		sql.append(" order by o.createdate desc  ");
	...
	------------



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day66 2010年11月15日

1. 记录修改，并提交

2. 系统运用 lucene 的地方
	OfficeMppUtils.java
	FileimportAction.java

	---------------------------- 补 充 ------------------------------------
	 lucene框架（全文搜索框架）的了解 

		Lucene是apache软件基金会[4] jakarta项目组的一个子项目，是一个开放源代码[5]的全文检索引擎工  Lucene
	具包，即它不是一个完整的全文检索引擎，而是一个全文检索引擎的架构，提供了完整的查询引擎和索
	引引擎，部分文本分析引擎（英文与德文两种西方语言）。Lucene的目的是为软件开发人员提供一个简单
	易用的工具包，以方便的在目标系统中实现全文检索的功能，或者是以此为基础建立起完整的全文检索引擎。

	lucene的使用步骤：
	
	
	-------------------------------------------------------------------------

3. 【任务】
    对照技术质量里“所属部门”的弹出框，再开发一个带权限筛选的机构树弹出框 ，权限筛选条件如下：

    1) 得到用户所属的机构树及其下面的全部机构树
    2) 得到用户拥有权限范围的机构树

-> 分析选择“所属部门”的弹出框的执行流程 
    见 navigator.txt的 —— 技术质量里“所属部门”的弹出框流程分析

-> 拷贝一份弹出框重新取名

-> 在得到弹出框数据的treeaction里再写个带权限得到机构的方法，并实现、好相应的service和dao层

     注：
     * 在service里要给每个机构记录添加上是否有权限的标识，做为判断用户是否有权限选择的依据。
     * 写出筛选的sql
        实现OrgDao的getOrgList2byauthorize方法 

	问题：如何补全机构树的显示 ?　

-> 在ajax的请求方法里指向action的新方法，得到经过权限筛选的机构树数据

-> 显示

具体过程：
-> 重新拷贝一份弹出框代码 （参照原来的）
   1）在使用到这个弹出框的页面的按钮上，把调用的js函数设置为 getOrgByAuthorize()
   2）在上面jsp页面访问的CommonldialogAction 的view方法里，加一个分支
   3）action调用service里新的方法，service掉dao里新的方法 
   4）把getOrgByAuthorize.jsp页面建立出来
   5）实现dao逻辑并对数据处理以给前端js判断是否有权限选择这个机构 ？

-> 【系统 弹出框 说明】 要调用这个弹出框，只需把调用的js函数设置为 getOrgByAuthorize() ，即可 （改方法
定义在 commonldialog_zn.js 中 ）

4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day67 2010年11月16日

1. 得到day66第3条的机构sql
	*范围权限是根据岗位id来配置的，根据岗位id即可获得对应的机构树数据、
注：技术质量哪里的中间机构树就是带权限的，参考那里的sql

2. 分析技术质量里中间树的权限显示
    和这里有一定不同之处。

3. sql server的 COALESCE返回其参数中第一个非空表达式，例子 COALESCE(o.status,'')<> '1'  如果o.status不
为空则返回o.status否则返回后面的。



4. 体会本系统的表 ：t_hr_org 中 companyid字段设计的用意
分布式部署，以这个字段区别不同公司的数据。

5. 初步sql 
	---------------
	...
		-- 分步骤写sql ，再汇总
		--//根据岗位id得到对应的范围权限id
			select * from t_sys_userrangerole a where a.dutypostid = '4028e3e6291513eb012915194a530006'

		--//根据上面的范围权限id得到对应的可见机构id
			select a.orgid from t_sys_orgrangerole a where a.rangeroleid in (
				select a.rangeroleid from t_sys_userrangerole a where a.dutypostid = '4028e3e6291513eb012915194a530006'
			)

		--//链接机构表得到机构名称
			select b.orgid,a.*
			from T_HR_Org a,(
						select a.orgid from t_sys_orgrangerole a where a.rangeroleid in (
							select a.rangeroleid from t_sys_userrangerole a where a.dutypostid = '4028e3e6291513eb012915194a530006'
							)
				) b
			where a.id = b.orgid
			and a.type <> 2
		    and a.id in (
				select
					id 
				from
					t_hr_org 
				where
					companyid='402881e6220b291201220b9a66fd0001'
			) 
	...
	----------------
	
	上面需要：
		* 加上所属机构的数据
		* 加上权限标识

	【sql 经验】对于多重多表的sql查询，可以采取一步步得到逻辑数据的方式，最后组成整个查询。l
6. 涉及到_getorg.jsp ,必须再建立一个_getOrgByAuthorize.jsp

在上述页面里用了 dwr来实现ajax请求

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day68 2010年11月17日

1. 发布部门 弹出框
的ajax请求 是在 ：
_getorg.jsp 里用dwr设置参数，请求到 servlet来实现的 
	OrgSelectTree
	dynatreeservlet

	用treelistnew.js的loadDataNew(..........) 方法请求数据

	直接在action的后面加上 &useAuthorize=1 来传递标识

	这样在servlet里根据这个标识调用不同的数据。


	注意：在IDTree接口里提供一个返回带权限筛选的方法，实现这个接口的类也要做相应修改。

2. 网通，电信 等 不同的线路对网速影响非常大，尽量取适当的线路。

3. 弹出框的逻辑太复杂，一个功能分散在各个角落，一个操作分布在不同文件中。细心啊
	_getorg.jsp 的js负责取第一次数据，getorg.jsp里的js负责后续的点击取数据。etc

4. 关于sql语句里的group by的用法注意

比较下面2段sql的不同，在第一行里

	------------
	...
		   select
			a.code,a.flag,a.id,a.longname,a.parentid,a.shortname,a.status,
			case 
			    when count(b.id)>0 then 0 
			    else 1 
			end isleaf 
		    from
			(    select
			    b.orgid as id,
			    a.status,
			    a.code,
			    a.name as longname,
			    a.shortname as shortname,
			    a.parentid,
			    '1' as flag    
			from
			    T_HR_Org a,
			    (       select
				a.orgid 
			    from
				t_sys_orgrangerole a 
			    where
				a.rangeroleid in (
				    select
					a.rangeroleid 
				    from
					t_sys_userrangerole a 
				    where
					a.dutypostid = '4028e3e6291513eb012915194a530006'              
				) 
			    ) b   
			where
			    a.id = b.orgid    
			union
			select
			    a.id,
			    a.status,
			    a.code,
			    a.name as longname,
			    a.shortname as shortname,
			    a.parentid,
			    '0' as flag    
			from
			    getupOrgid_new('402881922533bb7401255327ba711b87') a    
			union
			select
			    a.id,
			    a.status,
			    a.code,
			    a.name as longname,
			    a.name as shortname,
			    a.parentid,
			    '1' as flag    
			from
			    F_ORG('402881922533bb7401255327ba711b87') a    
			union
			select
			    a.id,
			    a.status,
			    a.code,
			    a.name as longname,
			    a.shortname as shortname,
			    a.parentid,
			    '0' as flag    
			from
			    F_ORGrange_hr('402881922533bb7401255327ba711b87',
			    '402881922215b1480122160a80ba0a74',
			    'xx') a   
		    ) a     
		left join
		    T_HR_Org b 
			on a.id = b.parentid   
		where
		    COALESCE(a.status,'')<> '1'  
		    and a.parentid is null  
		    and a.id in (
			select
			    id 
			from
			    t_hr_org 
			where
			    companyid='402881e6220b291201220b9a66fd0001'
		    )
		group by a.id,a.status,a.code,a.longname,a.shortname,a.parentid,a.flag  
		order by
		    a.code
	...
	------------

	------------
	...
		select
		*,
		case 
		    when count(b.id)>0 then 0 
		    else 1 
		end isleaf 
	    from
		(    select
		    b.orgid as id,
		    a.status,
		    a.code,
		    a.name as longname,
		    a.shortname as shortname,
		    a.parentid,
		    '1' as flag    
		from
		    T_HR_Org a,
		    (       select
			a.orgid 
		    from
			t_sys_orgrangerole a 
		    where
			a.rangeroleid in (
			    select
				a.rangeroleid 
			    from
				t_sys_userrangerole a 
			    where
				a.dutypostid = '4028e3e6291513eb012915194a530006'              
			) 
		    ) b   
		where
		    a.id = b.orgid    
		union
		select
		    a.id,
		    a.status,
		    a.code,
		    a.name as longname,
		    a.shortname as shortname,
		    a.parentid,
		    '0' as flag    
		from
		    getupOrgid_new('402881922533bb7401255327ba711b87') a    
		union
		select
		    a.id,
		    a.status,
		    a.code,
		    a.name as longname,
		    a.name as shortname,
		    a.parentid,
		    '1' as flag    
		from
		    F_ORG('402881922533bb7401255327ba711b87') a    
		union
		select
		    a.id,
		    a.status,
		    a.code,
		    a.name as longname,
		    a.shortname as shortname,
		    a.parentid,
		    '0' as flag    
		from
		    F_ORGrange_hr('402881922533bb7401255327ba711b87',
		    '402881922215b1480122160a80ba0a74',
		    'xx') a   
	    ) a     
	left join
	    T_HR_Org b 
		on a.id = b.parentid   
	where
	    COALESCE(a.status,'')<> '1'  
	    and a.parentid is null  
	    and a.id in (
		select
		    id 
		from
		    t_hr_org 
		where
		    companyid='402881e6220b291201220b9a66fd0001'
	    )
	group by a.id,a.status,a.code,a.longname,a.shortname,a.parentid,a.flag  
	order by
	    a.code	
	...
	------------

	比较：group by ，用到聚合函数，且链接多个表时，少用 * 号 ，否则group by 就很麻烦 


5. 上面弹出框数据获取和显示已完成，后面就是把标识输出，给js判断是否有权限选择。 ？  还要修改服务器返回的xml格式，要把
hasAuthorize字段加上去。

	注：看看根据sql的List<Map>数据如何生成响应客户端的xml数据的 
		OrgSelectTree 的addDtoIntoTree方法


	   服务端返回的是一个xml文档，然后在 treelistnew.js里的loadDataNew(.....)方法里完成数据的再处理，用于页面显
    示 ，这个方法集成了请求和处理的过程。

    注：有空看看这个  treelistnew.js里的loadDataNew(.....)


6. 在修改 loadDataNew(.....) 方法，适应现在的需求时 ，发现 flag 这个宠儿早被用了，回想一下，也是，这个家伙谁想
不到啊？！
	所以，以后取变量不仅要见名知义还要不能太大众化。

把 flag  改为 hasAuthorize 



7.  上面已经把标识设置到行里面了 ，下面就是传递给js的单击方法，以判断是否有权限  。?

修改 _getOrgByAuthorize.jsp里的function clickrowNew(id) 方法

【html 自定义属性】 html的属性可以自己定义 ，并通过 标签.属性 的方式可以取得自定义的属性值。
比如：
 <tr id="abc" hasAuthorize="1" name="test">
	<td></td>
	<td><span>hello world</span></td>
</tr>
要获得这个行的 hasAuthorize 属性可以这样写：

	var tr = document.getElementById("abc");
	var hasAuthorize = tr.hasAuthorize;
	alert(hasAuthorize); //测试取到的hasAuthorize值 ,结果是 1
	//补充(取到行元素，取单元格的值)
	var tr_cells = tr.cells;
	var name = tr_cells[1].innerText;
	alert(name); // 结果是 hello world

// window对象的这个方法 ，现在返回的是id 和公司名称，现在要让它返回hasAuthorize的值
var val = window.showModalDialog(url,parm,style);

查找了 showModalDialog 的资料 ，知道 子窗口向父窗口返回参数采用window.returnValue属性 ，于是在_getOrgByAuthorize.jsp页面里找到：

	------------
	...
		var val = new Array( document.forms["pgform"].elements["id"].value , document.forms["pgform"].elements["name"].value);	


		if( top.window.returnValue == null )
		{
			var arr = new Array();
			arr[index] = val;
			top.window.returnValue = arr;
		}
		else
		{
			var arr = top.window.returnValue;
			arr[index] = val;
			top.window.returnValue = arr;
		}
	...
	-------------
		这段js代码，只要在val里面加上要返回给父窗口的hasAuthorize值即可。但是，我们要在子窗口里就给用户提示，是否有权限，即在
	不关闭子窗口时就提示是否有权限选择，没有就重新选，或者点击关闭。
		所以，判断是否有权限选择的逻辑，应该放在执行返回值操作之前。
	也就是在_getOrgByAuthorize.jsp页面的 
		function setReturnValue(index) 方法里做个判断逻辑。

	注意一点：_getOrgByAuthorize.jsp 和 getOrgByAuthorize.jsp是在同一个窗口里的，他们同在一个页面中


* 用showmodeldialog ，如果窗口要返回多个值，可以用 js的array对象返回，不过，接受时，也要用 arry对象接受，否则可能是
undefined。这点要注意！！！
* 窗口里重定向，需要用技巧，否则就是新窗口。




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day69 2010年11月18日

1. 【任务】 流程里面定义的流程顺序和查看流程中显示的流程顺序不一致，查找并修改。
	
     * 建立多个账号，模拟一个多分支多人操作的流程 
	新建一个测试组织，把员工加进来，并把主职设置为这个组织 
     * 测试下面的例子1：
		串行：贝大勇
		并行：测试培训, 王丽
		串行：俞烨丹
		并行：曾凡军, 张杭生, 朱百涛   
	经过测试，得到 ，串行是按串行顺序排列，并行是按照上到下的顺序，即并行不是按照时间顺序，而是会签名单
	里的上下左右顺序排列。

	例子2：
		串行：贝大勇
		并行：测试培训, 王丽, 俞烨丹, 曾凡军
		并行：张杭生, 朱百涛
		串行：章鹏华    
	结果：

		审 核 人：贝大勇  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:37:25 
		附件:  
		 
		审 核 人：测试培训  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:41:06 
		附件:  
		 
		审 核 人：王丽  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:38:08 
		附件:  
		 
		审 核 人：俞烨丹  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:39:48 
		附件:  
		 
		审 核 人：曾凡军  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:39:01 
		附件:  
		 
		审 核 人：张杭生  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:45:21 
		附件:  
		 
		审 核 人：朱百涛  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:45:51 
		附件:  
		 
		审 核 人：章鹏华  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 11:46:16 
		附件:  
	
	例3：
		并行：贝大勇, 测试培训, 王丽
		串行：俞烨丹
		并行：曾凡军, 张杭生, 朱百涛, 章鹏华, 贝大勇, 测试培训
		串行：王丽
		串行：俞烨丹   
	结果：
		审 核 人：贝大勇  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:43:28 
		附件:  
		 
		审 核 人：测试培训  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:44:19 
		附件:  
		 
		审 核 人：王丽  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:43:13 
		附件:  
		 
		审 核 人：俞烨丹  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:45:14 
		附件:  
		 
		审 核 人：曾凡军  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:53:58 
		附件:  
		 
		审 核 人：张杭生  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:47:53 
		附件:  
		 
		审 核 人：朱百涛  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:49:11 
		附件:  
		 
		审 核 人：章鹏华  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:46:11 
		附件:  
		 
		审 核 人：贝大勇  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:46:01 
		附件:  
		 
		审 核 人：测试培训  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:45:43 
		附件:  
		 
		审 核 人：王丽  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:54:27 
		附件:  
		 
		审 核 人：俞烨丹  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 12:54:38 
		附件: 
		 
	测试要求：
	* 用流程模板的流程和自定义流程都要测试。
	* 测试流程撤回是否会导致签核名单混乱 ？

	流程模板自带流程：
		串行：贝大勇
		并行：测试培训, 王丽
		串行：俞烨丹 
	结果：
		审 核 人：贝大勇  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 13:08:52 
		附件:  
		 
		审 核 人：测试培训  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 13:09:21 
		附件:  
		 
		审 核 人：王丽  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 13:09:46 
		附件:  
		 
		审 核 人：俞烨丹  
		审核结果：通过  
		处理意见：已传阅 
		处理时间：2010-11-19 13:10:10 
		附件:  
		 


	结论：和例1的结果一样，并行是按照上下顺序显示而不是时间。如果要按时间可以改，但现在的显示结果是对的。

	如果按照时间先后来显示，分析下改哪里？



 

2. 【js 弹出窗 传值】window.showModalDialog(url,parm,style)  ，把这个方法多熟悉下，在父子窗口间传递值有用。

3. javascript的字符串比较
		" == " 与 " === "的区别

	
	////////////////////////// 补 充 ////////////////////////////////
	相等运算符 （==、!=） 

	如果两表达式的类型不同，则试图将它们转换为字符串、数字或 Boolean 量。 
	NaN 与包括其本身在内的任何值都不相等。 
	负零等于正零。 
	null 与 null 和 undefined 相等。 
	相同的字符串、数值上相等的数字、相同的对象、相同的 Boolean 值或者（当类型不同时）能被强制转化为上述情况之一，均被认为是相等的。 
	其他比较均被认为是不相等的。 

	恒等运算符 （===、!==） 

	除了不进行类型转换，并且类型必须相同以外，这些运算符与相等运算符的作用是一样的。 

	////////////////////////////////////////////////////////////////////////


	注：在对象和字符串比较时，要用 === 否则就是不等

4. 【系统 说明】“发布部门”带权限弹出框完成，调用时，只要调用 getOrgByAuthorize(.......) ，参数和系统原来的getorg(...) 方法一样
	把原来修改的接口，改回来。重新建一个类实现同样dtree 接口，实现其方法，此时是带权限逻辑的的方法体。然后在_getOrgByAuthorize.jsp
里修改 dataAction：
	var dataAction = "com.erp.hr.orgpost.action.OrgSelectTreeByAuthorize";

	【系统 经验】在涉及到修改frame包（框架包）内容时，以及接口时，尽量不要去改，另想办法。比如，某个实现某接口的类的方法不够用，可以
再写一个类，实现同样的接口，方法体写现有的逻辑。
	框架的东西尽量不要动！ 要理解这点，也多想想和快速稳定的产品开发，减少底层的变数。
	思考解决问题的方法。
	

	去改变接口，就是因为你想用的一个类，实现了该接口却发现不能满足你特殊的需求？接口设计的本就抽象再抽象，这种情况你大
可以去重新写个继承这个接口的类，实现你要的逻辑的方法体，解决的方式不少的。如果每个实现了该接口的类，都希望往接口里加入
方法，那样接口就失去了接口的意义了。

	补充修改：
	* 把机构里的项目部去掉，不显示，至于有些机构显示+号，点击时，下面没有数据是正常现象，因为是ajax请求，不知道
点击的节点下是否有数据，只有点进去才知道，因为它不是叶子节点，所以是可以点的；根本原因是系统的项目和机构是一张表的数据parentid通
用的。2010年11月22日
	* 重复提示从服务器上更新下 2010年11月22日

5. bug 系统管理-员工管理 下的系统账号页面的 姓名选择窗口的字段重复。 ？



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day70 2010年11月19日

1. 【任务】项目管控考核-综合项目核心管控 下的数据校验 ，里面可能会由于某些数据为空，导致其他数据也出不来
思路：自己新建一个项目，并录入设计好的数据，把真实结果和预期结果比较，发现问题   【系统 报表数据 测试】

建立测试用数据的步骤（顺带熟悉工程业务）：
	* 在 市场经营管理-市场经营管理下面：
		1）在工程信息下新建一个工程 ，取名 “测试用项目-byCS” ，过承接评审流程
		2）在项目承接里对刚才建立的项目进行承接操作 ，走流程
		3）在招标信息里对这个工程进行招标登记 ，走流程
		4）在投标信息里对这个工程进行投标 ，走流程
		5）在开标信息里，查看开标情况，点击进入修改开标信息 
		6）在签约管理里录入此工程的签约数据 ，并登记号签约情况和交底情况，走流程
	上面都走过流程后，进入工程登记
	* 在 市场经营管理-工程登记下面：
		1）在工程登记里登记上面已经签约并走过流程的工程
		2）在项目信息里，建立这个工程对应的一个个项目
	* 在上面工程和项目都初始化好后，进入综合项目管理，管理一个个具体的项目
		1）刚进入这里，先选择这个工程的某一个项目
		2）在综合规划里，登记号工程概况
		3）在合同管理里，登记好基本信息；合同签证；合同计量（一个工程上用于请求业主批复资金的手续表）；合同支付
		4）付款的话，是先在综合管理下填付款申请再到管控的资金管理-借款信息（先要拨款）/付款信息下操作（依据报表管理单元的说明文档，见resources文件夹里）
		5）在管控的资金管理下面，进行项目借款的处理和付款的处理
		6）
	* 进入管控批复资金
		1）资金管理-付款信息中支付申请查询不能访问，没有角色权限 ；付款信息里不能显示申请单


	整个业务步骤走下来，体会了本系统里和现实中工程和项目的联系（在市场经营管理中工程下有多个项目，进入综合项目管理
后就把每个项目看做一个工程来处理，实际上是项目）。系统设计菜单也大体是按照业务步骤来设计的，方便快速掌握业务流程。
【系统 工程业务】




2. 测试了下，在客户端通过修改表单来跨权限操作。
	比如某个页面，数据，原来只有看的权限没有修改权限；通过修改表单的属性来使修改能用，在提交时，被系统的拦截器拦住了。
系统在struts2默认拦截器里加了一个LoginInterceptor 并和默认的拦截器合并为一个拦截器栈，所有action都有经过这个“栈”。

	报错误为：


	在interceptor里的拦截逻辑部分代码：

	-----------
	...
		} else if (logininfo.getEstopUrl() !=null && logininfo.getEstopUrl().indexOf(resourcePath)>=0) {
			throw new MyException("你无权操作此功能："+resourcePath);
		}
	...
	------------
	
	结果debug查看，LoginInfo对象里的 estopUrl属性石一个list（ArrayLIst）里面存放了所有这个账号能请求的action的url，比如：
		...
		/pm/Costtarget_listExcel.action
		/pm/Costtarget_viewExcel.action
		/pm/Costplanpm_list.action
		/pm/Costplanpm_input.action
		/pm/Costplanpm_input.action
		/pm/Costplanpm_dodels.action
		...

	由于这个账号没有访问修改文件action的权限，故在estopUrl里没有这个url，所以被拦截，报错。

	那么，List里这些url是哪里初始化的呢？

		应该是对应角色权限，本系统的角色权限控制到了每个页面的每个按钮，而每个按钮一般都是对应一个action的 ，这只是猜测，待
	下面的继续分析。
		因为logininfo是在登录时，在LoginAction里初始化的，从哪里开始找，看些actin访问路径是哪里来的？在LoginAction里找到如下
	代码：
		---------
		...
			List estopUrl=new PolicyService().getEstopUrl(request,user.getId(),aclstring);
			logininfo.setEstopUrl(estopUrl);
		...
		---------

	-> 进入 getEstopUrl 方法
		---------
		...
			public List getEstopUrl(HttpServletRequest request,String postid,String aclstring) {
				 List list=new ArrayList();
				 List passlist=new ArrayList();
				 PolicyConfig policyConfig = (PolicyConfig) request.getSession()
					.getServletContext().getAttribute(
							Constant.AAS_APPLICATION_PERMISSION);
				 
				 HashMap rightMap=new HashMap();//这个不能去掉，在操作日至的时候使用
				ArrayList rights=policyConfig.getRights();
				
				for (Iterator i = rights.iterator(); i.hasNext(); ) {
					RightConfig right = (RightConfig) i.next();
					rightMap.put(right.getPath(),right);
				    String rightid=","+right.getId()+",";
				    if (aclstring.indexOf(rightid)<0 && !passlist.contains(right.getPath()))
				    {
					  list.add(right.getPath());
				    }else
				    {
					passlist.add(right.getPath());
				    }
				    
				}
				list.removeAll(passlist);     
				request.getSession().setAttribute("rightMap",rightMap);//放到sesion中，以便操作日至使用
				return list;
			}
		...
		---------

	-> 从 PolicyConfig policyConfig = (PolicyConfig) request.getSession().getServletContext().getAttribute(Constant.AAS_APPLICATION_PERMISSION);里
	得到权限配置信息
		这个对象是在ConfigServlet里初始化的：
		---------
		...
			protected void initXMLConfig() throws IOException, ServletException {
				try {
					/*
					 * 将权限配置文件放在servletContext作用域内。
					 */
					getServletContext().setAttribute(
							Constant.AAS_APPLICATION_PERMISSION, loadPolicyConfig());
					/*
					 * 将高级查选配置文件放在servletContext作用域内。
					 */
					getServletContext().setAttribute(
							Constant.QUERY_APPLICATION_PERMISSION, loadQueryConfig());
					/*
					 * 将菜单配置文件放到servletContext作用域内。
					 */
					getServletContext().setAttribute(
							Constant.MENU_APPLICATION_PERMISSION, loadMenuConfigMap(Constant.SUBSYSTEM_CODE));
					//new ContractService().eprjIdToCode();
				} catch (IOException ex) {
					ex.printStackTrace(System.err);
				} catch (MappingException ex) {
					ex.printStackTrace(System.err);
				} catch (MarshalException ex) {
					ex.printStackTrace(System.err);
				} catch (ValidationException ex) {
					ex.printStackTrace(System.err);
				}

			}
	
		...
		---------

	-> 进入加载权限配置的方法 loadPolicyConfig()
		---------
		...
			/**
			 * 加载权限管理的相关配置
			 * 
			 * @return
			 */
			private PolicyConfig loadPolicyConfig() throws IOException,
					MappingException, MarshalException, ValidationException {
				String realpath = getServletContext().getRealPath("WEB-INF");
				//拿系统中的文件分隔符（在 UNIX 系统中是“/”）。
				String separator = System.getProperty("file.separator");
				//权限配置文件映射的对象。
				String policyMappingFile = Constant.SERVLET_FILENAME_POLICYMAPPING_APPLICATION;
				//权限配置文件的路径。
				String policyFile = Constant.SERVLET_FILENAME_POLICY_APPLICATION;
				Mapping map = new Mapping();
				map.loadMapping(realpath + separator + policyMappingFile);
				Reader reader = new FileReader(realpath + separator + policyFile);
				Unmarshaller unmarshaller = new Unmarshaller(map);
				Object o = unmarshaller.unmarshal(reader);
				PolicyConfig policyConfig = (PolicyConfig) o;
				//new PolicyConfigService().addPolicyList(policyConfig);
				return policyConfig;
			}
		...
		---------
		
		注：上面用 Constant.SERVLET_FILENAME_POLICYMAPPING_APPLICATION 获得配置文件路径。系统大部分的
			静态参数都是在这个常数对象里定义的。类似下面：

			public static String SERVLET_FILENAME_POLICY_APPLICATION = "\\classes\\policy-config.xml";
		
	-。分析结束 ，可以看看权限配置文件policy-config.xml的结构，以及解析的方式。

	补充：权限配置文件policy-config.xml部分
	--------
	...
	<module name="流程流转" id="1.2" parentid="1" system="N"/>
	 	<module name="发起新流程" id="1.2.1" parentid="1.2" system="N"/>
				<right name="保存草稿" moduleid="1.2.1" id="1.2.1.2"  path="/oa/Sendarchives_doadd.action" description="协同门户→流程流转→发起新流程→保存草稿"/>
	    		<right name="发送" moduleid="1.2.1" id="1.2.1.3"  path="/oa/Sendarchives_dosend.action" description="协同门户→流程流转→发起新流程→发送"/>	
	    	<module name="待处理流程" id="1.2.2" parentid="1.2" system="N"/>
	  			<right name="查询" moduleid="1.2.2" id="1.2.2.1"  path="/oa/Sendarchives_checklist.action" description="协同门户→流程流转→待处理流程→查询"/>
				
	    	<module name="已处理流程" id="1.2.4" parentid="1.2" system="N"/><right name="签核" moduleid="1.2.2" id="1.2.2.2"  path="/oa/Sendarchives_docheck.action" description="协同门户→流程流转→待处理流程→签核"/>
				<right name="导出excel" moduleid="1.2.2" id="1.2.2.3"  path="/oa/Sendarchives_checkListExcel.action" description="协同门户→流程流转→待处理流程→导出excel"/>
	    	<module name="发起的流程" id="1.2.3" parentid="1.2" system="N"/>
	  			<right name="查询" moduleid="1.2.3" id="1.2.3.1"  path="/oa/Sendarchives_outlist.action" description="协同门户→流程流转→发起的流程→查询"/>
				<right name="修改" moduleid="1.2.3" id="1.2.3.2"  path="/oa/Sendarchives_dooutupdate.action" description="协同门户→流程流转→发起的流程→修改"/>
				<right name="重发" moduleid="1.2.3" id="1.2.3.3"  path="/oa/Sendarchives_doReto.action" description="协同门户→流程流转→发起的流程→重发"/>
				<right name="撤回" moduleid="1.2.3" id="1.2.3.4"  path="/oa/Sendarchives_outListExcel.action" description="协同门户→流程流转→发起的流程→撤回"/>
				<right name="导出excel" moduleid="1.2.3" id="1.2.3.5"  path="/oa/Sendarchives_watchListExcel.action" description="协同门户→流程流转→发起的流程→导出excel"/>
	  	
	...
	--------
	
	在这个配置文件里，配置了每个功能有哪些权限点，这些点对应的哪些action等等信息。
	【系统 角色权限】 这个配置文件是实现本系统角色权限控制的核心。；也是一种实现系统权限的方案。好好体会，理解，掌握。

3. 【任务】 
     1）风险预警里面  变更签证预警 的预警条件加上，如果签证已批复则不再提醒。
     2）测试流程撤回是否会导致签核名单混乱 ？

     * 在发起流程的用户的“已发起流程”里，可以撤回在处理中的流程。
     *自己发起的流程应该是可以撤回的   ？ 例子：贝大勇发起的流程自己不能撤回


4. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day71 2010年11月22日

1. 建立项目基础数据，测试管控考核里的报表 （参考 ：嘉兴市综合交通枢纽项目（一期）施工-土建-01）
    * 在市场经营里录入的工程信息是为了投标和签约而准备的，实际的数据应该按照综合项目管理里的工程信息为准
    * 
 先检查分析：  资金分析、成本分析 （相对容易分析些）

  参考文档 ：管控资金报表.xls —— 里面说明了资金分析里各个管理单元项的数据来源。【系统 报表 管理单元 说明】

注： 参考 day70第一条的记录


/////////// 资金分析 ////////
以测试项目工程为分析数据源：

资金分析数据来源于：
	综合项目管理-合同管理-合同支付里面的结算款、预付款、进度款的现款之和，所以要测这个数据是否正确，对
合同支付里要配置数据（合同计量数据在合同支付的进度款和结算款里都要被引用）。其他类推

上面合同管理里面计量和支付数据配置好后，可以测试资金分析的统计数据了

分析步骤：按照管理单元说明文档，一个个的分析数据来源，和测试数据是否正确，也更快速的掌握关键业务流程。



数据问题：
	* “代扣税金”列错误 代扣税金比例值应该是小于1的，计算时没有除以100，导致数据错误。
	* “代扣管理费”同上
	* 累计付款数据错误
	* 累计还款数据错误

数据测试结果记录在 D:\resource\测试\管控资金分析报表.xls

/////////////////////////////////////

2. 


3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day72 2010年11月23日

1. 管控-资金管理-付款信息 里的支付申请查询没有权限 【系统 菜单实现 角色权限分配】 ?
	对照 policy-config.xml 文件 和 菜单树信息，以及菜单配置文件 menupm-config.xml，menuepm-config.xml发现不一致(有些菜单没显示出来
)。搞清楚这个逻辑关系。

	应该是权限没配置到，即使是全局权限有的地方权限还是没分配到，因为分配权限的树没有列出那部分菜单。比如：支付申请查询 就没有
列出来。问题归结到分配角色权限的那棵树上。
	
	配置文件里有菜单配置，数据库里也有，两者怎么联系的。（wy系统是从配置文件读取（一般注释掉，避免每次都读取），存入数据库，方便后续访问的效率）


2. 管控-资金管理-付款信息 里面经办人选择按钮报js，错误，经firefox的调试，是因为getman方法没有找到，也就是定义getman方法的js
文件没有导入，解决：
	在input页面上面加上下面的代码，引入公用js等文件
	<%@include	file="/common/inc.jsp"%>

	这个js错误，ie 报：“缺少对象”


3. 管控-资金管理-付款信息 申请单号的选择窗口没数据 ，主要原因是数据不符合sql条件

	根本原因是在取 auditmoney（批准金额）值时，取错了表，并且支付表和支付详细表里都有这个字段，导致混乱，测试后，知道
支付详细表里的auditmoney一直都是null ，在操作付款申请时参照了宁波红巨大厦的数据，才正确填入数据（走过流程后，审批的资金不为空）

【系统 问题 ？】 分析，为什么有的流程批复资金没有进入数据库 ，就是确实批复了资金，查询时却是空的。

-- t_pm_paymentapp 支付申请表  
select * from t_pm_paymentapp a where a.orgid = '4028e3e42c61beb3012c63130bce02ea'

-- t_pm_paymentappdetail 支付申请详细表 ,通过appid关联支付申请表


4. day71第一条

/////////// 合同履约 分析 ////////
以测试项目工程为分析数据源：

	* 合同签订金额：市场经营--签约管理里面的合同金额（这个值还是以综合管理-合同管理下基本信息里的合同金额为准，因为
这个值是可以改变的）		原始数据：121212.00    统计数据：

	* 变更金额：综合项目管理-合同管理-变更签证-业主批复金额 
	
	问题：1）变更签证的按清单填写表单第一行的js自动计算功能有问题，不能及时计算值，也不给用户自己填写 【系统 bug ？】
		    2） 业主批复金额 应该是已批复后的值才能计算入内，现有的是无论是否已批复都计算
		    3）在修改综合管理-合同管理-基本信息的input页面时，“合同总日历天数”字段必须要焦点在这个input里面，js才自动根据时间的修改而
		          修改这个值，应该设计为，时间一旦修改，这个天数要理解修改。
		    4）


	* 已完成工作量：综合项目管理-合同管理-合同计量里面的甲供材和本期上报金额之和		
	* 业主确认量：综合项目管理-合同管理-合同计量里面的业主批复金额		
	* 应收工程款：业主批复的金额		
	* 已收工程款：综合项目管理-合同管理-合同支付-结算款、预付款、进度款的现款之和		
	* 已收甲供材：综合项目管理-合同管理-合同支付-结算款、预付款、进度款的甲供材之和		
	* 合同工期：综合项目管理-合同管理-合同基本信息-合同总日历天数		
	* 已开工工期：当前时间减去（综合项目管理-合同管理-合同基本信息的实际开工时间）		
	* 累计延迟工期：合项目管理-进度管理-期间实际进度管理--累计延迟		
	




//////////////////////////////////////////////





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day73 2010年11月24日


1. 合同履约分析

	报表的数据和日期有关联的，如果数据出不来或不对，看看测试用的数据的日期是否正确。这样，报表的数据就和，
当前的系统时间有关系了，如果系统时间设置不对，则数据也会不对。【系统 数据 系统时间 关联】



2. 解决day72第一条的问题，即 “配置文件里有菜单配置，数据库里也有，两者怎么联系的”

	出现问题的原因是，权限配置文件修改了，但没有同步到数据库；在configservlet里有个语句，它负责每次服务器启动时，把
配置文件的数据同步到数据库，这样，后续的数据都从数据库读取。此前，注释掉了，这个同步语句故出现此问题。
	----------
	...
		private PolicyConfig loadPolicyConfig() throws IOException,
				MappingException, MarshalException, ValidationException {
			String realpath = getServletContext().getRealPath("WEB-INF");
			//拿系统中的文件分隔符（在 UNIX 系统中是“/”）。
			String separator = System.getProperty("file.separator");
			//权限配置文件映射的对象。
			String policyMappingFile = Constant.SERVLET_FILENAME_POLICYMAPPING_APPLICATION;
			//权限配置文件的路径。
			String policyFile = Constant.SERVLET_FILENAME_POLICY_APPLICATION;
			Mapping map = new Mapping();
			map.loadMapping(realpath + separator + policyMappingFile);
			Reader reader = new FileReader(realpath + separator + policyFile);
			Unmarshaller unmarshaller = new Unmarshaller(map);
			Object o = unmarshaller.unmarshal(reader);
			PolicyConfig policyConfig = (PolicyConfig) o;
			new PolicyConfigService().addPolicyList(policyConfig); // 同步配置文件数据到数据库
			return policyConfig;
		}
	...
	----------
	
	注：这里把配置文件在第一次启动时同步到数据库，避免保存在内存里。

3. day71第一条

/////////// 设备分布 分析 ////////
以测试项目工程为分析数据源：

* 在 综合管理-成本管理下  【系统 业务】  下面的3个步骤是多个地方，需求总计划数据的来源，后续的操作都建立在这个之上。
   1）在成本单元里，建立设备成本单元
   2）在合同预算里，设置设备预算
   3）目标成本，计划成本 
   经过上面步骤，来到机械设备管理中，此时需求总计划就有数据了。
   在机械设备管理中：
   1）自购合同；自购进场
   问题：租赁计划哪里建数据？来自成本管理的期间计划成本，一直向下输入数据，才能在下面的租赁计划里显示出来。
   2) 租赁合同 的建立 里设备编码出不来设备？ 因为 ：所有的设备都要在设备预登记里登记，比如成本管理里计划的各种设备类别，
都要在这里相应的类别下，具体登记设备。
   
   期间计划成本>设备预登记>租赁计划>租赁合同>内/外租进场

   设备分析，也是和时间紧密关联的。比如：外租进场的设备，如果验收日期早于或等于当前日期，则数据不显示。时间区间
是前闭后开的，比如 某设备进场时间是4月30号，则查询4月1号到4月30号是出不来数据的 【系统 报表 时间区间】

//////////////////////////////////////////////




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day74 2010年11月25日


1. 设备管理里面的数据进入流程 ，应该有个文档说明，否则要做不少的无用功。
     
     成本管理 里面的设备是根据设备类别的，并不是具体的设备；在设备管理里面的设备预登记里，再根据成本里的类别，登记
具体的设备，这样，设备选择框里才会有设备。【系统  设备 业务】

* 成本管理里，都是计划的成本，设备也只能按照类别来计划，在具体实施时才对应相应的真实设备。


2. 


3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day75 2010年11月26日

1. 更新技术质量下的发布部门调用的js方法 
测试：设置，修改，查看


2. 成本分析,
分析成本的点

笔记



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day76 2010年11月29日



1. 成本点 (劳工机费用以外的费用都是在成本核算里进数据的)
—— 项目级

材料费														                          
	预算成本(元)      项目自供需求月计划
	实际成本(元)     
	(+)节/(-)超额(元)     
	(+)节/(-)超率(%)      
机械费	
	预算成本(元)      
	实际成本(元)      自购摊销
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)      
人工费	
	预算成本(元)      
	实际成本(元)      
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)      
分包费	
	预算成本(元)      
	实际成本(元)      
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)      
税金费	
	预算成本(元)      
	实际成本(元)      
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)      
利润费	
	预算成本(元)      
	实际成本(元)     
	(+)节/(-)超额(元)     
	(+)节/(-)超率(%)      
其它直接费	
	预算成本(元)      
	实际成本(元)      
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)      
间接费	
	预算成本(元)      
	实际成本(元)     
	(+)节/(-)超额(元)     
	(+)节/(-)超率(%)      
管理费	
	预算成本(元)      
	实际成本(元)      
	(+)节/(-)超额(元)      
	(+)节/(-)超率(%)  


2. 对工程项目的业务逻辑，需要再深入的熟悉。

综合管理下

成本管理里面的期间计划成本的期间是根据合同签订开始和结束日期定的。


bug：

* 外租进场里外租进场详细的管理单元表单不能正常查看。

* 租赁合同处，在租赁计划和租赁公司2个表单间只能选择一个的问题。【系统 工程管理 周转材 业务】
   原因：是为了保证租赁公司有在租赁计划里列出的周转材，否则无从租赁。

   —— 租赁合同的增加里，要选择租赁公司，事先要在管控里把此公司的周材入库。
   即管控里的周转材管理-周材入库，然后选择对应的公司，入库周材。
 
   管控的周材管理是集团级别的管理，在这个把周材分配到各个项目，而综合管理里的周材是对应单独项目的。


甲供入库 —— 甲供材就是甲供材料.所谓“甲供材料”建筑工程，是指由基本建设单位提供原材料，施工单位仅提供建筑劳务的工程。对甲供材料建筑工程的计税营业额，应按料、工、费全部价款计征营业税。财税字[1995]45号文件规定，纳税人从事建筑、修缮、装饰工程作业，无论与对方如何结算，其营业额均应包括工程所有原材料及其他物资和动力的价款在内。例如，某项建筑工程总造价是1000万元，其中原材料部分700万元，由基本建设单位提供，施工单位提供的应税劳务为300万元。这里，施工单位的计税营业额是1000万元，而非300万元。税法之所以这样规定，主要是防止纳税人将“包工包料”的建筑工程，改为以基本建设单位的名义购买原材料，从而逃避营业税收。
  但是，在实际工作中，确实存在由基本建设单位提供原材料的情况，纳税人在签订“甲供材料”建筑合同时应当注意将基本建设单位提供的原材料部分的营业税及附加，作为工程总预算的一部分，由基本建设单位负担。这是因为：如果是包工包料工程，其建筑利润中本身就包括材料差价和材料部分的营业税收。由于这部分材料改由基本建设单位提供，其相应的税收也应当由基本建设单位承担。建筑公司应当向基本建设单位讲明上述税收政策，征得基本建设单位的理解，从而避免本公司的“额外”税收负担。
  对“甲供材料”合同，还可以采用改变原材料购买方的办法，达到节税的目的。




  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  day77 2010年11月30日


  1. 
成本里的周转材数据

周转材：

	租赁合同的增加里，对于内租，要选择租赁公司，事先要在管控里把此公司的周材入库。
即管控里的周转材管理-周材入库，然后选择对应的公司，入库周材；
	对于外租，刚进去就要先选择合同类别为外租，然后继续填写表单，否则可能导致数据丢失，然后
周材租赁合同明细出不来数据。  bug： ？参数丢失 【任务】待修改


bug :租赁合同刚保存好后，点查看，再点返回。出现“警告：网页已经过期” 。 待解决 ？

自购周材流程模板，需要建立 ；周材调拨模板 要建立

周材也分租赁进场和自购进场，它也是材料，只是这种材料可以重复多次使用，所以一般不采取自购的方式，而是租赁。


材料来源有5种：甲供；集团统供；公司统供；项目自供；周转材

管控里的周转材是集团自己的周材，是对自己周材的管理入口。所以，要外租周材的话。。。

bug:选择机构的弹出框不能全选 ，选择上面的下面的就都有权限了。done

	综合管理里的周材管理，向内租进场进周材时，需要挑拨单，这个单是在管控-周材管理下的周材调拨里配置的（
在这里面根据综合管理中各自项目的租赁合同来进行相应的调拨）。周材调拨属于集团层的操作，故在管控里面。这里，
也是集团和项目部互动的一个点。【系统 业务】

周材的实际成本：周材摊销费 和 周材外租租赁费


  2. 【系统 流程模板 绑定 关联】
	系统中各类流程模板建立好后，再到系统设置-基础数据-流程绑定里把各个流程模板和各个模块用到模板的点进行绑定，
比如：把模板A和项目管控考核-周材管理-周转材流转下的周材调拨绑定，则在填写周材调拨流程时，就可以选择模板A。

具体步骤：
（以 综合管理-周转材管理-自购合同 的发起流程为例）
 * 流程绑定操作
	在用的流程模板的页面，看页面属性，得到url ：http://localhost:8080/wyjs/lqpm/MaterialTurnBuyContract_sendinput.action? ；找到
action为  MaterialTurnBuyContractAction，并进到sendinput方法（默认都是这个方法名），得到表名（在TableList里面也能看到各个
模板对应  的表名）把表名和模板关联一起，完成流程绑定操作。

 * 流程模板定义操作
	定义模板时，在“使用表单”处选择上面定义好的绑定名；流程绑定的列表页显示不全，可以在这个弹出框里看绑定数据。

 * 重要一步 ：模板建立好后，还要把模板分配给用户，这样才能使用。


3. 据上，综合管理和管控是交互式来对材料，周材，机械，资金等工程的块进行管理的。



4. 项目里各种费用的点，预算，计划要清晰的整合成一个整体，把它们之间的关系搞清楚。

5. 机械 ，周材等的租赁结算是如何计算的 ，按进场和退场日期及租赁价格 ？


6. bug：周材的租赁结算 期间数据有问题，对照机械的租赁结算找到原因并修改

    租赁结算的期间数据显示是按照最早进场日期的期间开始直到现在所在的期间，并显示每个期间相应的租金，现在周材这块
期间里没有租赁发生也出现租金数据 ？ 【任务】

原因：计算逻辑出错，数据重复计算 

修改：



7. bug 综合管理-周转材管理-租赁合同 下 
	在填写外租的租赁合同时，在选择租赁合同前要选择好外租，再选择租赁合同，否则可能导致租赁合同的数据不能正确显示在
 "周材租赁合同明细"里 ?


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day78 2010年12月1日

1.周材租赁预结算——数据错误问题

-- //////////////周材外租进退场 ，进退场时间都用indate来表示，要注意了
 
 -- 材料外租退场单表
 select * from T_PM_MaterialLendTurnOutNote2 a
 
 
 -- 材料外租进场单表
  select * from T_PM_MaterialLendTurnInNote2 a


* 这段租赁结算代码，在匹配时间时，用了 > 而不是 >= ，可能导致每个区间的1号的记录丢失。
* 设备的租赁结算是根据本期间所发生的租赁费进行计算的 ，有个问题 比如：某个设备6月29日进场，7月15日退场，算租金的点是以
签订日期的闭区间还是开区间 ？ 【业务 问题 ？】 机械的租赁费是前闭后开区间，即租金从进场日算起，算到退场日前一天。



HqMaterialPrepayService类的 1032行处，就是外租金额的计算点处。

【系统 业务 期间租赁费的计算】
	分析出期间租赁费计算逻辑是：本期间内进场的材料的租金 + 本期间之前进场的材料 
	关键是把材料的各种状态分清楚。

	期间租赁费 = 本期间进场的 + 本期间之前进场的

	出场单与进场单的关系是1对1，或者多对1，所以每个退场单在表里都有一个字段表示是那个进场单的退场单，但实际保存退场单
	时，并没有把对应的进场单id保存到数据库里。在HqMaterialPrepayService类的 getAmountBeforeA方法里用到的key变量用到这个
	indetailid 字段。这个字段从页面到action时丢失了，没有保存到数据库里。

	到出场单添加页面，能找到indetailid表单项，可能是处理时没有把它带到页面上来。
	-------------
	...
		function getOuterResourceList(){
		
		var outdate = document.all("materiallendturnoutnote2.indate").value;
		if(outdate == null || outdate == "" || outdate == undefined){
			alert('请先选择出库时间！');
			return false;
		}
		
		var columns = new Array();
		columns.push("id=resid");
		columns.push("code=code");
		columns.push("name=name");
		columns.push("spec=spec");
		columns.push("unit=unit");
		columns.push("type=type");
		columns.push("intotalnum=intotalnum");
		columns.push("countsnow=lastnum");
		columns.push("countsnow=oldlastnum");
		columns.push("indetailid=indetailid");
		
		var prefix = "matelendturnoutdetails2";
		
		var treeurl = "/common/Checkmore_resourceLendTree.action?flag=2";
		var listurl = "/common/Checkmore_resourceLendList.action?flag=2&outdate="+outdate;
		var menuname = "进场明细";
		checkMore(treeurl,listurl,prefix,columns,menuname);
		
	}

	...
	--------------
	先手动把这个字段存到数据库中以继续测试，这个值待后面修改。 ？


	ps:把正确的进场单id填到出场单的表里后，再运行租赁预结算，数据就对了。

	原因：
		故，影起错误的原因是：出场单在表里的记录少了 indetailid 字段。这个字段还影响到周材报表中退场数据量单元的
	数据显示。

	【任务】done
	后面，就是把 indetailid 字段在保存出场单时一并保存到出场记录表里。

	思路：
		在填写外租出场单的页面，有个“外租退场记录明细”，在那里面选择要退场的周材，注意，被选择的周材必须是
	已经进场且还没有出场或没有全部出场的周材，这样，在填写这个表单时，一并把周材的进场单id取到，并设置到表
	单里，并提交到服务端，这样服务端取到 indetailid 设置到pojo类（ Matelendturnoutdetail2 ）里面，就能保存到数据库里。
		通过查看，就是因为input的jsp页面里少了这个字段的隐藏域，所以这个值没有传递到服务器，加上即可，参照其
	他属性来加。



	【问题 ？】期间的时间边缘是如何定的？ 比如 10月1日00:00:00 是属于9月还是10月？ 系统采用的是属于9月的逻辑。
	这个问题就是涉及到，填写了10月1日出场，那么10月1日这天是否算租赁费？目前本系统是不算租赁费的。待
2. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day79 2010年12月2日

1. day78第一条的后续 ，对出场单pojo类的 indetailid 属性的持久化进行处理  

步骤：
	* action Materiallendturnoutnote2
	* input页面里 indetailid 值的设置
	只要在 jsp页面里把 indetailid 属性放置到一个隐藏域里就OK。

相关页面：
	 materiallendturnoutnote2input.jsp（来自struts配置文件 lqpm）





	【技巧 访问当前页面的url】要获得转到当前页面的url，可以在当前页面右击看属性，上面就有url，这样，不用去
	看某个按钮的js方法，再判断最终的页面是那个。
2.  【IDE MyEclipse bug】MyEclipse在debug状态启动tomcat时，有时候不能自动热部署，这样对jsp或java类的修改不能反映到
服务器返回结果中，不要误以为自己找错了文件，很可能是MyEclipse罢工了，只要把服务器关闭，再重新启动就好了（
不推荐快捷按钮debug启动）。


3. 测试材料成本分析
    用例：
    * 内租进退场
    * 外租进退场
    * 内外租报损
    * 自购摊销

    （1）周材内租
    对于周材内租的测试：【系统 周材内租 业务】
    首先进数据，
	先要在综合管理-周转材管理下建立内租合同，审批后，来到管控-周转材管理-周转材流转-周材调拨 ，在这里建立
     周材调拨，需要选择之前审批过的租赁合同，建好后，再走流程，内租设备就调拨到指定的项目部了。
     （这里需要建立调拨流程模板，直接定义模板，并选择好调拨表单，实现已定义好的，即可）
	再回到综合管理下周材的内租进场里，选择好上面建好的调拨单，依次填写数据即可。
	这样，数据录入完毕。
     pass
     （2）周材外租
     pass
     （3）周材自购摊销

     （4）材料出库：分为工程领用出库；其他出库（又分为：调拨出库和盘亏出库）——其他出库不计入项目材料实际成本
     pass
     （5）材料报损
     pass

9906(周材) + （100 + 100）（材料） = 10106

	注：对于材料的出库，要保证选对出库且材料已经入库且没被领用情况下，才能出库。

4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day80 2010年12月3日


1. 测试成本分析的数据
	材料
	劳动力
	
	还有除了劳工机之外的成本。比如分包

2. 综合管理-分包管理下的业务逻辑与功能测试 【系统 分包 业务】


分包分：
	* 单包 —— 只包劳动力 ，计入人工费成本
	* 双包 ——  工,料，机全包，计入分包成本

/////////////////////// 测试成本分析下的 分包费/////////////////////////////////////////////

    分包合同按照分包属性分为：
	* 按清单分包
	* 按管理单元分包
	* 按工，料。机分包
	   注：这种分包合同的建立，有个细节。就是建立好合同信息后，还需要在列别页面的分包明细字段里进去，把
		   工，料。机数据填写上去。然后再发流程。

	变更签证必须在分包合同审批通过后才能进行。不能进行变更明细操作，把鼠标放上去会有提示，挺人性化，其他
    地方也采用这种方式的话，就能让客户更快的学会使用本系统。【系统 用户体验】
	合同走过流程，进行变更签证操作，增加变更签证，进行变更，产生变更记录，发流程，ok。
	bug：变更签证列表的申请金额列数据显示错误，进去查看数据是对的，但这里只显示0.00   ? 待

	来到分包预结算，在列表页面的“操作”列进入，增加预结算记录并录入数据(依次走分包结算基本信息，预结算明细，
     扣款明细)且走好流程。

	上面预结算走后流程后，就进入摊销操作。

	再继续，走到分包结算处，需要之前走过流程的预结算单。



     bug：走过流程的合同的删除问题：
	     分包合同如果审批通过后，并在后续地方根据这个合同建立了相关数据，此时，如果到流程监控里把这个合同的
     流程删除，这样，再去删除这个合同是不允许的，因为有数据引用到了。在删除时会报错，提示的错误信息不好理解，并且，
     根据正常逻辑，可以是这样，在删除这个合同时，提示用户“删除此合同将同时删除根据此合同建立的相关数据”

3. 补充个系统流程（工作流）小点：在流程监控里，可以删除等待审批或者已通过，未通过等不同状态的流程。删除后，
被删流程又进入，未发送状态，可以编辑及重新发送。 【系统 流程 修改】


4. 【系统 业务 测试】 对于数据复杂的业务测试，在建立测试数据时，最好每天数据见名之意，否则条目一多，再要往回
查时，就累了。


5. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day81 2010年12月6日

1. 成本分析-分包费-双包 数据测试


2.  对客户要求修改点的测试 【任务】

///////////// 1 ////////////////
	管控中，资金管理模块的几个问题
	1）、借款信息中，借款信息和资金调拨，在来回不停的切换过程中，组织树就不显示到部门级了。(ok) done
	2）、借款信息中，从列表界面点击“拨款”进入拨款界面时，缺少一个返回按钮 (ok) done
	3）、付款信息中，输入界面的明细统计值总和与表头的资金合计不一致 (ok)
	4）、付款信息中，输入界面的明细中“支付累计次数”数据为0时，弹出款的明细界面现实当前此条明细的数据，表头信息不显示 (ok)
	5）、付款信息中，输入界面的明细中，在明细表的最后一条显示明细的统计数目 (ok)
	6）、付款信息中，输入界面的明细中，加宽“财务科目”显示栏目宽度 (ok)
	7）、付款信息中，输入界面的明细中，明细的显示顺序和导入的excel顺序一致 (ok)
	8）、付款信息中，输入界面的明细中，明细的显示和表头之间会出现一条空白 (ok)
	9）、收款信息：列表界面的“财务科目”的显示宽度加宽， (ok)
	综合项目管理-成本管理
	目标成本生成计划成本的时候，界面报错。  (ok)
	

///////////// 2 ////////////////
在根据生成系数来自动生成对应的数据时，生成是否正确？切换项目看有无错位？

	1) 综合管理下目标成本和计划成本的生成系数所产生的数据是否正确 ？done

	2) 综合管理下的资金管理（A）里的数据和管控里的数据（B）是否正确对应上了 ？
		A	<----------------------->	B
	借款信息（借款/还款）	借款信息（拨款/收到还款） ——项目部向集团借款，并及时还款 2边都有记录和操作
	付款申请				付款信息（对每个项目的付款申请进行处理） —— 项目部向总部申请付款，由总部付款不需要还款

	结果：以项目02的数据位测试数据，对应正确。 【系统 业务 工程管理】

	3) 借款数据的导入数据测试 （管控里）？ 【系统 excel导入】
		按照格式在excel里编辑好借款数据，然后导入，然后看导入的数据是否正确对相关的地方是否正确挂钩。注意，凭证号和申请单号
	是关键字段。

	数据出不来。
		
		


3. 分析从excel格式数据导入数据库。 excel导入


4. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day82 2010年12月7日


1. 管控-付款信息里的excel导入  【系统 excel导入 导入excel 读取excel 操作excel】

结果：数据进不去 ？ 因为一个逻辑判断写反了 （PaymentService的uploadExcel方法里）
	if(detailList.size() <= 0)改为if(detailList.size() > 0)

	excel内容是从 综合管理-资金管理-借款信息 下来的。把每个项目的借款信息按照要求的格式录入到excel里，然后在管控的付款
信息里，直接导入方便批量数据的录入操作。
	这里，关键是 申请单号 是借款与付款的纽带。管控付款时依据申请单号来执行的。
	

技术分析：
	用java把excel里的数据导入到数据库——>就是java如何读取excel的问题——>java有哪些和excel相关的api，或者第三方java处理excel
的jar包 的问题。
	语言+类库（jar库）[提供调用api方便调用]+插件（第三方库/jar）的开发


	本系统用 jxl-2.4.2.jar 工具包来处理excel文件。【系统 处理 excel 插件】【系统 数据批量录入】录入数据量大的需求就需要批量导入功能。


	【乱码 拷贝】比如把网页拷贝到记事本等地方，有些字符可能出现乱码，基本上是因为编码不同导致的。

excel格式类似：


	237	2010-02-09		工程施工\合同毛利\税金及附加	2/22 嘉兴综合交通枢纽预付款预提税金1000万*3.76%=376000	376000
	250	2010-02-09		工程施工\其他	2/23 嘉兴嘉电电力设备成套-设备_网银	179553
	250	2010-02-09		工程施工\其他	2/23 嘉兴恒欣电力建设-变压器_网银	200000
	259	2010-02-28		工程施工\合同成本\安全生产投入	2/24 金汉凡-工作服4950安全帽4160	4160
	259	2010-02-28		工程施工\合同成本\费用	2/24 金汉凡-工作服4950安全帽4160	4950
	260	2010-02-28		工程施工\其他	2/25 中国太平洋人寿保险嘉兴-保险费_网银	81690
	260	2010-02-28		工程施工\其他	2/25上海纯兴金属材料_螺纹杆_网银	168474.38
	260	2010-02-28		工程施工\其他	2/25 嘉兴综合交通枢纽_人工费_现金	1000000
	266	2010-02-28		工程施工\其他	2/26 嘉兴新正泰电器_配电箱配件_网银	27370
	266	2010-02-28		工程施工\其他	2/26嘉兴南湖城东伟达电器_配电箱_网银	13280
	266	2010-02-28		工程施工\其他	2/26 嘉兴综合交通枢纽_人工费_现金	100000
	10	2010-03-09		工程施工\其他	3/5 嘉兴曹庄自来水厂_开户费_网银	4200
	14	2010-03-09		工程施工\其他	3/3 嘉兴欣创混凝土制品_混凝土_网银	800000
	14	2010-03-09		工程施工\其他	3/3 中国地质工程上海公司_地墙_网银	500000
	14	2010-03-09		工程施工\其他	3/1 嘉兴电力局_接电押金_网银	277200
	14	2010-03-09		工程施工\其他	3/1 嘉兴南湖七星中山美迪办公家具_办公用品_网银	22680
	14	2010-03-09		工程施工\其他	3/1 嘉兴新正泰电器-配件_网银	4130
	18	2010-03-09		工程施工\其他	3/4 嘉兴南湖城东上德成套_电箱_网银	12480
	18	2010-03-09		工程施工\其他	3/4江苏华亚_电缆-网银	66058
	29	2010-03-09		工程施工\其他	3/8 嘉兴交通枢纽-备用金_网银	10000
	30	2010-03-09		工程施工\其他	3/8 江苏华亚_电缆_网银	60750
	//下面这条数据日期不合法，不能正确导入的 
	237	2010-2-9			工程施工\合同毛利\税金及附加	2/22 嘉兴综合交通枢纽预付款预提税金1000万*3.76%=376000	376000

		从上面在excel中把2010-2-9改为2010-02-09，过程中excel会自动格式化输入的数据，要想某列按照自定义的格式来显示，可以选择列-右击
	选择“单元格格式”-在数字标签里设置此列的格式，或单独列的格式。【技巧 excel 】
		设置格式为文本。



报个错误：
	at com.frame.db.HibernateUtil.execute(HibernateUtil.java:770)
	at com.erp.fund.service.ReceivinginformationService.saveToDb(ReceivinginformationService.java:179)
	at com.erp.fund.service.ReceivinginformationService.uploadExcel(ReceivinginformationService.java:166)
	at com.erp.fund.action.ReceivinginformationAction.uploadExcel(ReceivinginformationAction.java:171)

分析jxl处理excel的逻辑：
	 见ReceivinginformationService的uploadExcel方法。部分代码如下：
	 -------------
	 ...
		public String uploadExcel(LoginInfo loginInfo, String orgid, File[] files,	String[] fileNames) {
			if(orgid == null || "".equals(orgid)){
				return "上传组织不存在";
			}
			if(files == null || files.length == 0 || fileNames == null || fileNames.length == 0){
				return "上传文件丢失";
			}
			StringBuffer msg = new StringBuffer();
			File file = files[0];
			String fileName = fileNames[0];
			if(file == null || !file.exists()){
				return "上传文件丢失";
			}
			Workbook workbook = null;
			try{
				workbook = Workbook.getWorkbook(file);
				Sheet sheet = workbook.getSheet(0);
				int cols = sheet.getColumns();
				int rows = sheet.getRows();
				List<Receivinginformation>  list = new ArrayList<Receivinginformation>();

				StringBuffer codes = new StringBuffer();
				
				for(int x = 1 ; x < rows ; x++){//——————从第二行开始读取数据
					Receivinginformation info = new Receivinginformation();
					boolean flag = false;
					for(int y = 0 ; y < cols ; y++){
						Cell cell = sheet.getCell(y, x);
						String content = cell.getContents();
						switch(y){
							case 0 : 
								if(isEmpty(content)){
									flag = true;
									break;
								}
								info.setVouchercode(content);
								if(!codes.toString().contains(content)){
									codes.append(content);
									codes.append(",");
								}
								break;
							case 1 :
								if(isEmpty(content)){
									flag = true;
									msg.append("<br/>凭证号："+info.getVouchercode()+" 的凭证时间为空");
									break;
								}
								if(!isDate(content)){
									msg.append("<br/>凭证号："+info.getVouchercode()+" 的凭证时间不合法："+content);
									flag = true;
									break;
								}
								info.setVoucherdate(this.formatToDate(content));
								break;
							case 3 : 
								if(isEmpty(content)){
									flag = true;
									msg.append("<br/>凭证号："+info.getVouchercode()+" 的财务科目为空");
									break;
								}
								info.setFinacetype(content);
								break;
							case 2 :
								info.setDigest(content);
								break;
							default :
								if(isEmpty(content)){
									flag = true;
									msg.append("<br/>凭证号："+info.getVouchercode()+" 的金额为空");
									break;
								}
								if(this.isNumber(content)){
									if(content.contains(",")){
										content = content.replaceAll(",", "");
									}
									info.setRealinput(new BigDecimal(content));
								}
								
						}
						if(flag ){
							break;
						}
					}
					if(flag ){
						continue;
					}
					list.add(info);
				}
				
				//准备导入
				if(list.size() > 0){
					String codesIn = codes.substring(0,codes.lastIndexOf(","));
					codesIn = codesIn.replaceAll(",", "','");
					List<Receivinginformation> oldList = receivinginformationDao.getOldList("'"+codesIn+"'");
					Map<String,Receivinginformation> oldMap = listToMap(oldList);
					saveToDb(list,oldMap,loginInfo,orgid);
				}
			}catch(Exception e){
				e.printStackTrace();
			}finally{
				workbook.close();
				file.delete();
			}
			
			return msg.toString();
		}
	 ...
	 -------------

	根据上面解析excel的逻辑，excel的第一行是不被读取到数据库的，只是作为列名标识



	分析这个导入的数据：
		* 没有申请单号 ，导致不能累计支付次数，也就不方便记录多次付款
		* 没有申请单号，付款无依据，付多还是付少，够还是不够；原来是根据欠款多少，再去支付多少的，有申请单为依据
		* 没有申请单号，管钱的管不了钱 ，给钱是要审批的


2. 测试 管控-资金管理-收款信息 数据导入
格式如下：

	凭证号	凭证日期	财务科目	财务摘要	实际收款额	
	0001		2010-09-07	财务科目	财务摘要	12323.3	
	
	
	导入正确。
	
3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day83 2010年12月8日


1. 解决 综合管理-分包管理-变更签证 input页面的问题 

SubconchangeAction 的 newchangeinput 方法

struts-pm.xml
	----------
	...
			<action class="com.erp.pm.subcontract.action.SubconchangeAction" method="{1}" name="Subconchange_*">
				<result name="view">/erp/pm/subcontract/subconchangeview.jsp</result>
				<result name="input">/erp/pm/subcontract/subconchangeinput.jsp</result>
				<result name="sendinput">/erp/pm/subcontract/subconchangesendinput.jsp</result>
				<result name="list">/erp/pm/subcontract/subconchangelist.jsp</result>
				<result name="listexcel">/erp/pm/subcontract/subconchangelistexcel.jsp</result>		
				<result name="newinput">/erp/pm/subcontract/newinput.jsp</result>				
				<result name="indexList">/erp/pm/subcontract/subconchangeindexlist.jsp</result>
				<result name="indexlistexcel">/erp/pm/subcontract/subconchangeindexlistexcel.jsp</result>
				<result name="stuffchangeview">/erp/pm/subcontract/stuffchangeview.jsp</result>
				<result name="machinechangeview">/erp/pm/subcontract/stuffmachineview.jsp</result>
				<result name="otherchangeview">/erp/pm/subcontract/otherchangeview.jsp</result>
				<result name="manpowerchangeview">/erp/pm/subcontract/manpowerchangeview.jsp</result>
				<result name="manpowerchangeinput">/erp/pm/subcontract/manpowerchangeinput.jsp</result> //人工类
				<result name="stuffchangeinput">/erp/pm/subcontract/stuffchangeinput.jsp</result>//材料类
				<result name="stuffmachineinput">/erp/pm/subcontract/stuffmachineinput.jsp</result>//机械类
				<result name="otherchangeinput">/erp/pm/subcontract/otherchangeinput.jsp</result>//其他类
				<result name="changelist">/erp/pm/subcontract/changelist.jsp</result>
				<result name="changelistexcel">/erp/pm/subcontract/changelistexcel.jsp</result>
				<result name="sendmanpowerinput">/erp/pm/subcontract/sendmanpowerinput.jsp</result>
				
				<result name="sendstuffinput">/erp/pm/subcontract/sendstuffinput.jsp</result>
				<result name="sendmachineinput">/erp/pm/subcontract/sendmachineinput.jsp</result>
				<result name="sendotherinput">/erp/pm/subcontract/sendotherinput.jsp</result>
				
				<result name="centerList">/erp/pm/subcontract/subconchangecenterlist.jsp</result>
				<result type="redirect-action">Subconchange_centerList?back=1</result>
				
				<result type="redirect-action">Subconchange_list</result>
			</action>
	...
	-----------

人工类 保存的action 为： SubconchangeAction  的 manpowerchangeadd 方法



2. 看看 进度管理 和人力资源 

进度管理：


人力资源管理：

	* 组织合并
	* 

3. 综合管理-综合规划-项目目标 查看页面去掉日期选择按钮    ？ done

4. 走 进度管理 模块 

    以测试项目为例：

    （1）进度总计划
	* 页面修改和进入子页面时，可能出现js错误
	* 
	
    （2）期间计划进度
	
    （3）期间时间进度
	
    （4）进度分析
	
    （5）施工日志
	

5. 横道图（甘特图）  —— 本系统的进程管理 【系统 甘特图】

	定义：横道图又叫甘特图 (Gantt chart) ，它是以图示的方式通过活动列表和
	时间刻度形象地表示出任何特定项目的活动顺序与持续时间。

	本系统的甘特图插件是：
		通过applet来显示甘特图。


6. 【系统 工程管理 日期逻辑】
	系统里，各种工程项目的数据与日期的关系，各项数据间的相互依赖关系。



7. 【系统 手机短信】功能的实现方式 ？移动oa 

	     oa系统发送短信的实现猜想：由系统把联系人及短信内容处理成指定格式，通过调用发送短信的设备
     的接口把数据传递过去，然后此设备完成短信的发送并返回处理结果；或者把数据发送到特定的短信发送
     服务提供商的服务器上，由其代为发送（比如通过webservice来调用第三方的服务来发送短信）。不过最终，
     还是要运营商合作。

     补充：
	     来自百度知道：网站程序调用短信接口，来发短信。 短信平台不同接口方法也不同,具体调用短信接口
     操作，可以参照接口文档，每个短信平台接口都详细的说明文档。

     例：百度的地图查询，可以把一些文本内容发送到手机，只要输入手机号即可。
	
	【 webservice 】 对webservice的遐想，有了它，世界就是平的，各个服务商提供各自擅长的领域服务，提
	供各自的服务，各得其所。
	

      关键词：短信平台
		短信群发平台是基于中国移动、联通、电信直接提供的短信端口与互联网连接实现与客户指定号码进行
	短信批量发送和自定义发送的，它分为软件单机版（带客户端）CS 结构和网络共享版BS 结构。


8. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day84 2010年12月9日

1. day83第4条



2. 系统结构与业务需求


3. 【任务】协同-资料中心-学习园地 ，
分页显示有bug，
且资料没按类别显示， typeid传递到action时，action取了id，所以没取到值导致的
且不能添加资料？ 系统分页用到id，故把url里的typeid改为id就OK。


4. 【系统 分页bug】
	系统某些地方的分页按钮，对于没有翻页的按钮由于没有进行连接屏蔽，可能导致错误，要
加上判断来屏蔽点击，避免错误发生。
	分页区，最右边的按指定页面跳转功能也需要做判断逻辑，没有的话就报指定页面不存在。
现在是直接跳到指定页面，可能会报错。
	例：综合管理-合同管理-变更签证里的细目编码弹出框的分页功能。还有资料中心里学习园地的跳转是
超过页面数的，就显示组后一页面的数据，应该提示“指定页面不存在”。并统一风格。
	例：对于列表数据为空的页面，则
	----------
	...
		function go() { 
			var f=document.getElementById("pgform");
			var pageIndex=f.tovalue.value;
			/* */
			if (CheckIsInteger(pageIndex)) {
				if (pageIndex > <s:property value="page.getPageCount()"/>)
				pageIndex=<s:property value="page.getPageCount()"/>;
				if(pageIndex == 0) pageIndex = 1 ; // ——————这句要加上，否则，一但page.getPageCount() = 0 ,则pageIndex = 0 ，就传递到服务
														器了，而服务器端又没有验证，导致错误 【系统 bug】
				else if (pageIndex <1)
				pageIndex = 1;
				goto(pageIndex); 
			 } else 
			 alert("必须输入数值类型.");
			 f.tovalue.focus();
		}
	...
	----------

以 学习园地 页面为例子来修改：
	系统的分页功能在 pagebar.jsp 里的，用到分页的地方用jsp标签包含进来即可以。【系统 分页 逻辑 修改】 
默认是，如果小于1的话就跳转到第一页，但是，如果此列表页面是没有数据的，可能出现错误（ ResultSet may only be accessed in a forward direction），
故在 pagebar.jsp 里增加判断是否有数据的逻辑。


		公用分页的jsp里是根据request对象里的id来区分不同类别的，所以要用这个分页，必须把标识不同类别的数据用id字段表示。
	而不是typeid或其他等等。否则可能导致 自定义查询查询所有类别的数据，而不是指定类别。？ done

用分页：1）包含进分页jsp  2）page对象 3）id参数（action和jsp）

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day85 2010年12月10日

1. 分页跳转错误修改 done  day84第4条
bug：   传值“null”到服务器 ，需要判断 
	系统有些地方已经对这个问题做了处理。


2. bug：资料共享和学习园地一样，修改  ？ 

	协同-资料中心-软件下载 里用typeid能行是因为，在session里保存了where标识，sql根据这个标识来确定自定义一跳转页的资料类别。
这里面取typeid作为标识只能是null。因为公用页面传递是用id来表示资料类别的。


3. 【任务 测试系统各处机构树】 注销过的机构不应该显示

例如：通讯录里的机构树，出来了注销过的机构。

步骤：
	- 找到生成中间机构树的sql点 
	- 加入状态筛选

检查模块：

	* 协同 pass
		通讯录 pass
	* 人力资源管理 pass
	* 市场经营管理 pass
	* 综合管理 pass
	* 管控
		技术质量-工法管理 修改 
	* 系统管理 pass
	* 系统设置 pass

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day86 2010年12月13日

1. 看系统发送短信功能的实现
二次开发
串口RS232/并口


2. 【系统 区别 重名文件 技巧】重复
系统里不少地方的文件是重名的，要区分你要查找的页面是那个模块的，可以看看所在页面的上级目录名。
	比如：http://localhost:8080/wyjs/oa/Org_list.action
可能会查找到多个OrgAction（不同模块可能取同样的类名），这时就看目录名，是 oa 下的OrgAction，大体上就
可以准确定位了。

3. 协同门户-通讯录-单位通讯录 【修改】里不显示注销过的组织

这个是请求页面后，页面通过ajax请求获得组织树数据的 ，通过tcp/IP来测试ajax请求的路径，比较方便。【调试 ajax请求 路径 确定】
	这种请求道页面，页面再发送ajax请求道服务器的方式里，确定ajax请求路径的方法，可以采用TCP/IP查看http请求报头的方式来快速找到
请求的URL。

GET /wyjs/dynatreeservlet?action=com.erp.oa.issue.action.OrgTree&parentid=&orgid=undefined HTTP/1.1
Accept: */*
Referer: http://localhost:8888/wyjs/oa/Org_list.action
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; CIBA; AskTbPTV2/5.9.1.14019)
Host: localhost:8888
Connection: Keep-Alive
Cookie: disp=; JSESSIONID=08E86DCD29385CA5278AA9865D87163C

4. 格式化文本 【格式化文本 技巧】
给你一段文本 ，比如下面这段xml文本：
<?xml version="1.0"?>  <flow name="自定义流程" isedit="true"><node orders="1"><item orders="1" man="测试培训" manid="402881922216115101221627ca870556" handlemode="1" name=""/></node><node orders="2"><item orders="2" man="曹宝林" manid="402881922533bb74012548c3b51c02e1" handlemode="1" name=""/><item orders="2" man="曹宝林" manid="402881922533bb74012548c3b51c02e1" handlemode="1" name=""/><item orders="2" man="曹宝林" manid="402881922533bb74012548c3b51c02e1" handlemode="1" name=""/></node><node orders="3"><item orders="3" man="贝大勇" manid="4028819224b2e50b0124b7cfc7840739" handlemode="1" name=""/></node><node orders="4"><item orders="4" man="曹宝林" manid="402881922533bb74012548c3b51c02e1" handlemode="1" name=""/><item orders="4" man="曹宝林" manid="402881922533bb74012548c3b51c02e1" handlemode="1" name=""/></node><node orders="5"><item orders="5" man="贝大勇" manid="4028819224b2e50b0124b7cfc7840739" handlemode="1" name=""/></node></flow>  
	手动去换行，格式化成结构清晰的文档要费时间的，可以利用文本工具的替换功能实现快速格式化，比如上
面这段，仔细看看是有规律的，在每个“>”位置应该就换行，所以用“>+换行符”替换掉“>” ，即可快速实现简单格式化，其他类推~~~


5. xml 文件查看问题  【查看xml文档】
	有时用IE查看xml文档，IE会报错，其中之一的原因是，汉字问题。也就是编码不能识别(报“文本内容中发现无效字符”错误)，这时，只要把
xml文件保存为兼容汉字的编码（比如：gbk，gb2312，utf-8等）即可。


6. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day87 2010年12月14日

1.  测试

要求：
	参照系统帐号的启用、注销功能，在
	[1]流程模板显示列表上提供禁用、启用按钮。 
　　当用户要删除流程模板数据时，先检测流程模板有没有被流程数据引用，若有过引用，
就把这条流程模板数据设置为禁用，同时界面上不再显示这条被禁用的模板数据（
	[2]在流程模板增加界面增加一个选项：启用和禁用；
	[3]显示界面上增加一列来显示这个模板状态，默认显示启用状态的数据，禁用的数据通过高级查询显示。） 
　　如果流程模板被引用的流程数据已经全部被删除，则由管理人员来决定是否真正删除这
些已经没用的流程模板，当管理人员选中需删除的数据，点击“删除”按钮，系统就把没用的
可以删除的模板数据删除掉。如果还想让被禁用的流程模板再一次被使用，则通过高级查询
，把禁用的模板给显示出来，然后选中需启用的数据，点击“启用”按钮即可，或通过流程模
板修改页面，修改启用和禁用选项； 
　　发流程选择流程模板时，仅显示启用状态的流程模板；禁用状态的流程模板不能显示出
来，若重新启用后，则显示出来。

http://192.168.99.100:8088/f_wyjs ghli 111

业务需求及测试：
（按业务需求测试通过）
	1）当用户要删除流程模板数据时，若被引用则禁用此模板，同时界面上不再显示这条被禁用的模板数据；若无引用，
管理人员选中需删除的数据，点击“删除”按钮，删除模板数据。			pass
	2）显示界面上增加一列来显示这个模板状态，默认显示启用状态的数据，禁用的数据通过高级查询显示。	pass
	3）启用被禁用的流程模板——则通过高级查询，把禁用的模板给显示出来，然后选中需启用的数据，点击“启用”按
钮启用。	pass
	4）启用被禁用的流程模板——通过流程模板修改页面，修改启用和禁用选项。	pass
	5）发流程选择流程模板时，仅显示启用状态的流程模板；禁用状态的流程模板不能显示出来。		pass

测试过程：
	* 建立表单
	* 建立模板，删除模板看结果
	* 建立流程，并发送
	* 删除模板，看结果

问题：
	* 流程模板被禁用了后，草稿箱，待处理，和已处理流程各要要求如何？因为是在禁用前使用的，应该流程继续走下去，
只是新流程就不在允许用被禁用的模板了。
	* 不能删除就禁用，可以给用户提示下，否则不知道是被删除了，还是被禁用了。用户体验
	* 上面删除模板的逻辑，如果用户不知道模板被那些流程引用了，可能导致删除某个模板会很费心。可以提示下
	* 


2. 流程模板 的表单范围业务表单和普通的weboffice等表单，业务表单只有在业务模块页面才能被调用，普通模板在协同门户
的流程发起里就能调用。【系统 业务】


3. bug : 数据库数据错误 ？
协同门户-流程流转-表单定义里 有部分数据的表单类型为空，需要处理 

4. 测试/程序网站性能工具 jprofiler 【系统 内存泄露 内存溢出】java heap spance ; out of memory 
	用这个工具来测试本系统的内存溢出问题。
	* 代码质量
	* 资源废弃没有释放
	* 非主观意愿的一直引用
	* 
jvm 参数 jvm配置
用myeclipse的话配置下jdk的参数，例如：-XX:MaxPermSize=100m -Xms32m -Xmx256m



5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day88 2010年12月15日

1. 熟悉 jprofiler



2. bug：修改  【任务】
综合管理里面某些发起的流程，在查看时，会弹出项目选择窗，把它屏蔽掉。
类似的情况也修改

比如：综合管理-分包管理-分包预结算 里的分包预结算流程，在访问流程时会提示选择项目。查看页面
里的按钮也会触发弹出窗口 ？

上面例子的修改：

点待审批流程，进入到 archivecheckview.jsp

	分包预结算流程的查看页面，包含3个单独的jsp页面：
	分包结算基本信息 ——subconbalanceview.jsp 
	预结算明细 （
		——subconbalancebillview.jsp 还分按照清单分包，
		——subconbalanceunitview.jsp 按管理单元分包还是
		——groceyview.jsp 按工料机分包）
	扣款明细  ——subcondeductdetailview.jsp  


	subconbalancedetailinc.jsp 是三个导航按钮的页面 “分包结算基本信息 |   预结算明细   |   扣款明细   ”


流程页面的构成：
	archivecheckview.jsp 签核，传阅，会签等操作按钮块 以及签核记录 它包含下面的 archivesendheaderview.jsp页面 和引用的其他页面
	archivesendheaderview.jsp 流程模板，发起时间等信息块

	archivecheckview.jsp的中间会通过参数动态访问相应页面，比如：t_pm_subconbalance_view.jsp  
	-----------
	...
		<%
			String tablename =(String) request.getAttribute("tablename");
			if( tablename == null || tablename.equals("") ) 
			tablename = "t_oa_archivesinfo";
			String url_table = "../table/" + tablename + "_view.jsp";
			
		%>
	...
	-----------
	【系统 流程页面 特点】
	从这里，流程用的显示页面和综合管理里面时间操作用的页面有两套。（subconbalanceview.jsp和t_pm_subconbalance_view.jsp，其中
	t_pm_subconbalance_view.jsp页面是在subconbalanceview.jsp基础上去掉了操作按钮，只留下显示按钮）

	进入，这个查看页面后 3个标签的切换都在 t_pm_subconbalance_view.jsp 的逻辑里。部分代码如下：
	----------
	...
		<iframe style="width: 100%; height: 410;"
			src="<%=request.getContextPath() %>/pm/Subconbalance_view.action?id=<s:property value="subconbalance.id" />&balanceshow=1&fromFlowPage=1" name="dataiframe"
			id="dataiframe" frameborder="0" noresize marginwidth="0"
			marginheight="0" frameBorder=NO scrolling="no">
		</iframe>
	...
	----------
	上面的代码就是 分包预结算 的内容。

	【系统 特点 注意】不少页面的table是不可见的，只是为了打印等用的，不要误解了页面结构。
	
	上面的ifame，来到 SubconbalanceAction的view方法 （这里把fromFlowPage=1保存到request里面，供subconbalancedetailinc.jsp判断是否要选项目）

	subconbalanceview.jsp页面 （这里在页面上面包含进来了subconbalancedetailinc.jsp 页面，就是带3个标签的页面）流程页面要到这里来，
	是因为这里有现成的标签切换功能。但此时必须屏蔽掉项目选择弹出窗口。

	这样，在subconbalancedetailinc.jsp 里把fromFlowPage参数附加到标签按钮上去即可。

	done

	
	注：这种引用到综合管理里的页面，会弹出项目选择框，其他地方也会出现，多测试下。

	iframe导致返回功能混乱。【系统 内嵌 iframe 问题】





3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day89 2010年12月16日

1. 用jprofiler初步测试系统

情况：
	1）在内存够用情况下，报内存溢出 
	500 错误
	javax.servlet.ServletException: org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space
	初步推断是程序内部问题导致的溢出。
	----------------详细错误代码
			javax.servlet.ServletException: org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space
			org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:515)
			org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:419)
			com.frame.servlet.MyFilterDispatcher.doFilter(MyFilterDispatcher.java:40)
			com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
			com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
			org.apache.struts2.dispatcher.ActionContextCleanUp.doFilter(ActionContextCleanUp.java:99)


		root cause 

		org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space
			org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:491)
			org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:401)
			org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)
			org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
			javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
			org.apache.struts2.dispatcher.ServletDispatcherResult.doExecute(ServletDispatcherResult.java:139)
			org.apache.struts2.dispatcher.StrutsResultSupport.execute(StrutsResultSupport.java:178)
			com.opensymphony.xwork2.DefaultActionInvocation.executeResult(DefaultActionInvocation.java:348)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:253)
			com.frame.servlet.LoginInterceptor.intercept(LoginInterceptor.java:111)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:221)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:150)
			org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:48)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:123)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:167)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:105)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:83)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:207)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:74)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:127)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.ProfilingActivationInterceptor.intercept(ProfilingActivationInterceptor.java:107)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:206)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:115)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:143)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:121)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:170)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:123)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:176)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:50)
			org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:504)
			org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:419)
			com.frame.servlet.MyFilterDispatcher.doFilter(MyFilterDispatcher.java:40)
			com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
			com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
			org.apache.struts2.dispatcher.ActionContextCleanUp.doFilter(ActionContextCleanUp.java:99)


		root cause 

		javax.servlet.ServletException: java.lang.OutOfMemoryError: PermGen space
			org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:862)
			org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:791)
			org.apache.jsp.erp.portal.shortcutmyinput_jsp._jspService(shortcutmyinput_jsp.java:477)
			org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
			javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
			org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:377)
			org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)
			org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)
			javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
			org.apache.struts2.dispatcher.ServletDispatcherResult.doExecute(ServletDispatcherResult.java:139)
			org.apache.struts2.dispatcher.StrutsResultSupport.execute(StrutsResultSupport.java:178)
			com.opensymphony.xwork2.DefaultActionInvocation.executeResult(DefaultActionInvocation.java:348)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:253)
			com.frame.servlet.LoginInterceptor.intercept(LoginInterceptor.java:111)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor.doIntercept(DefaultWorkflowInterceptor.java:221)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.validator.ValidationInterceptor.doIntercept(ValidationInterceptor.java:150)
			org.apache.struts2.interceptor.validation.AnnotationValidationInterceptor.doIntercept(AnnotationValidationInterceptor.java:48)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor.intercept(ConversionErrorInterceptor.java:123)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ParametersInterceptor.doIntercept(ParametersInterceptor.java:167)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.StaticParametersInterceptor.intercept(StaticParametersInterceptor.java:105)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.CheckboxInterceptor.intercept(CheckboxInterceptor.java:83)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.FileUploadInterceptor.intercept(FileUploadInterceptor.java:207)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor.intercept(ModelDrivenInterceptor.java:74)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor.intercept(ScopedModelDrivenInterceptor.java:127)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.ProfilingActivationInterceptor.intercept(ProfilingActivationInterceptor.java:107)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.debugging.DebuggingInterceptor.intercept(DebuggingInterceptor.java:206)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ChainingInterceptor.intercept(ChainingInterceptor.java:115)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.I18nInterceptor.intercept(I18nInterceptor.java:143)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.PrepareInterceptor.doIntercept(PrepareInterceptor.java:121)
			com.opensymphony.xwork2.interceptor.MethodFilterInterceptor.intercept(MethodFilterInterceptor.java:86)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.interceptor.ServletConfigInterceptor.intercept(ServletConfigInterceptor.java:170)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.AliasInterceptor.intercept(AliasInterceptor.java:123)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor.intercept(ExceptionMappingInterceptor.java:176)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:224)
			com.opensymphony.xwork2.DefaultActionInvocation$2.doProfiling(DefaultActionInvocation.java:223)
			com.opensymphony.xwork2.util.profiling.UtilTimerStack.profile(UtilTimerStack.java:455)
			com.opensymphony.xwork2.DefaultActionInvocation.invoke(DefaultActionInvocation.java:221)
			org.apache.struts2.impl.StrutsActionProxy.execute(StrutsActionProxy.java:50)
			org.apache.struts2.dispatcher.Dispatcher.serviceAction(Dispatcher.java:504)
			org.apache.struts2.dispatcher.FilterDispatcher.doFilter(FilterDispatcher.java:419)
			com.frame.servlet.MyFilterDispatcher.doFilter(MyFilterDispatcher.java:40)
			com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
			com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
			org.apache.struts2.dispatcher.ActionContextCleanUp.doFilter(ActionContextCleanUp.java:99)


		root cause 

		java.lang.OutOfMemoryError: PermGen space
			sun.misc.Unsafe.defineClass(Native Method)
			sun.reflect.ClassDefiner.defineClass(Unknown Source)
			sun.reflect.MethodAccessorGenerator$1.run(Unknown Source)
			java.security.AccessController.doPrivileged(Native Method)
			sun.reflect.MethodAccessorGenerator.generate(Unknown Source)
			sun.reflect.MethodAccessorGenerator.generateMethod(Unknown Source)
			sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
			sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
			java.lang.reflect.Method.invoke(Unknown Source)
			ognl.OgnlRuntime.invokeMethod(OgnlRuntime.java:517)
			ognl.OgnlRuntime.getMethodValue(OgnlRuntime.java:931)
			ognl.ObjectPropertyAccessor.getPossibleProperty(ObjectPropertyAccessor.java:53)
			ognl.ObjectPropertyAccessor.getProperty(ObjectPropertyAccessor.java:121)
			com.opensymphony.xwork2.util.OgnlValueStack$ObjectAccessor.getProperty(OgnlValueStack.java:58)
			ognl.OgnlRuntime.getProperty(OgnlRuntime.java:1643)
			com.opensymphony.xwork2.util.CompoundRootAccessor.getProperty(CompoundRootAccessor.java:101)
			ognl.OgnlRuntime.getProperty(OgnlRuntime.java:1643)
			ognl.ASTProperty.getValueBody(ASTProperty.java:92)
			ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:170)
			ognl.SimpleNode.getValue(SimpleNode.java:210)
			ognl.Ognl.getValue(Ognl.java:333)
			ognl.Ognl.getValue(Ognl.java:310)
			com.opensymphony.xwork2.util.OgnlUtil.getValue(OgnlUtil.java:190)
			com.opensymphony.xwork2.util.OgnlValueStack.findValue(OgnlValueStack.java:208)
			org.apache.struts2.views.freemarker.ScopesHashModel.get(ScopesHashModel.java:69)
			freemarker.core.Environment.getGlobalVariable(Environment.java:976)
			freemarker.core.Environment.getVariable(Environment.java:962)
			freemarker.core.Identifier._getAsTemplateModel(Identifier.java:70)
			freemarker.core.Expression.getAsTemplateModel(Expression.java:89)
			freemarker.core.Dot._getAsTemplateModel(Dot.java:74)
			freemarker.core.Expression.getAsTemplateModel(Expression.java:89)
			freemarker.core.BuiltIn$existsBI._getAsTemplateModel(BuiltIn.java:636)


		note The full stack trace of the root cause is available in the Apache Tomcat/6.0.26 logs.


	----------------
	上面错误的出现，初步推测是在渲染jsp页面时，导致的错误，程序溢出导致后续的jsp渲染频频报错。

	上面异常层层上抛的过程，也显示了这个请求的执行流程（从下往上看）。
	
	再仔细看异常信息，和jprofiler的perm gen内存显示，确实超出了范围，是 perm gen 内存溢出：（从jprofiler的perm gen内存实时图上，
	看出，系统启动后这个值就解决溢出）
		什么是 perm gen ？

		看下面的javaeye案例：
		//////////////////
			2006年遇到的CGLib造成的Perm Space out of memory错误
			文章分类:Java编程 

			疑难杂症类别是总结了笔者这么多年来开发的经验总结
			2006年开发公司里的一个产品时，发现了一个很难解决的问题：
			问题现象：Tomcat跑一天Perm Space 报outofMemory的错误，后来就调整JVM的PermSize，
			调大后，一天稍长时间又出现这个错误，有点晕了。
			环境：JDK1.5，Tomcat5，Hibernate+Spring
			问题解决：想了半天，原来Hibernate 采用CGLib实现了lasy load的功能，其间要生成新的class，这些class，如果GC不回收，
			Perm Space当然迟早会溢出。后来一查果然是这个问题CGLib有个bug，每次lasy-load都会生成新的class，后来更新了一个
			新的包，问题解决。
		//////////////////
	
	【系统 溢出】部分原因就是perm gen 内存溢出。
		通过jprofiler，看出系统启动时perm gen 内存占用28M左右，随着后续的交互perm gen内存一直增大，而几乎没有减小（被GC回收）的趋
	势，最终导致perm gen 内存溢出。浏览器报 500 perm gen 溢出错误。

	下一步，找到perm gen 内存逐渐增高不下的原因？
		* 上面提到 CGLIB可能会有个bug，



	2）perm gen内存在达到70M后基本稳定 ，不过还是没有明显的GC回收效果。占用内存一直在增加的。

	解决办法：
		* 提高 perm gen 内存的大小 ：设置JVM参数即可（大小可以根据要求设置，有限制）
			    -XX:MaxPermSize=100m
		    这样设置后，系统的响应速度也感觉快了不少。

		    根本解决方法还是分析perg gen区是否有垃圾对象长时间没被回收。


2. bug：系统某些地方的页面，第一次访问时，可能会报 404文件找不到错误 
比如 综合管理-安全生产管理-重大危险源管理下可能会出现，再次访问时又OK了 ？




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day90 2010年12月17日

1. jprofiler

其他分析


2. web服务器

apache+tomcat




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day91 2010年12月20日

1. query-config.xml 在7.0.4 处重复，（协同-流程模板）在高级查询里没显示使用状态字段域。

【其他 输入法】xp里文件夹的输入法不会随着文件夹本身窗口的最小化或失去焦点而复原；所以
可能导致输入法条出现多个的情况。

2. 系统的 “启用”，“禁用” 功能呢个的实现。 ？ 

3. 对 外部地方引用到 综合管理 中数据可能弹出项目选择窗口的bug检查下 ？

	对于由于流程导致的弹出窗口问题，可以根据 系统设置-基础数据-流程绑定 里罗列出来
的用到流程的点来一个个测。



////////////////////////////////////已有流程，直接查看，不用建立测试数据，如下////////////////////////////////////////////
借款信息			bug ：流程查看页面（在流程监控里进去查看）input不能输入或修改 ？
付款信息			bug： 查看页面，表单边上不应该出现红色“*”号提示

综合管理的项目弹出选择框测试——项目自供需求总计划 (材料) pass

综合管理的项目弹出选择框测试——周材管理-租赁计划 pass

综合管理的项目弹出选择框测试——机械设备管理-需求总计划 pass
综合管理的项目弹出选择框测试——机械设备管理-租赁计划 pass		bug：流程查看页面的input不能输入。
综合管理的项目弹出选择框测试——机械设备管理-租赁合同 pass
综合管理的项目弹出选择框测试——机械设备管理-自购合同 pass
综合管理的项目弹出选择框测试——机械设备管理-自购摊销 pass

	注：已发起的流程，直接点击已发过流程的记录，就能进入到流程查看页面，以验证是否会弹出项目选择窗口。

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bug:
	综合管理的项目弹出选择框测试——项目自供需求月计划 流程点 材料需求明细 到了待处理流程页面？
	综合管理的项目弹出选择框测试——公司统供需求月计划
	综合管理的项目弹出选择框测试——集团统供需求月计划
	综合管理的项目弹出选择框测试——甲供需求月计划

	综合管理的项目弹出选择框测试——分包管理-合同信息 流程里出现了返回按钮 
		struts-pm.xml
		SubconbillAction
				<result name="billlist">/erp/pm/subcontract/subconbillbilllist.jsp</result> // 按清单分包
				<result name="bcillist">/erp/pm/subcontract/bcillist.jsp</result> //料，工，机
				<result name="unitlist">/erp/pm/subcontract/subconbillunitlist.jsp</result> // 成本单元
				<result type="redirect-action">Subconbill_list</result>
				对上面3个页面的返回按钮都要处理。
			

	综合管理-综合规划-项目组织-项目组织 的流程页面出现表格操作工具条，不应该显示 




4. 【系统 特点】 
	像综合管理下各个页面的 材料明细，设备明细等显示页面的页面名称是和表名关联的 ，比如：综合管理-材料管理-材料需求月计划
-甲供需求月计划 的材料需求明细部分的页面是 t_pm_materialreqmonthplan_view.jsp，从控制台的表名得出。
	就在table文件夹里。

	二级页签的超链接 在类似上面页面的 ：
	<!--二级页签的数据-->
	<%
		   java.util.ArrayList subal=new ArrayList();
		   OptionDto subht1=new OptionDto("材料需求明细","");	
		   subal.add(subht1);
		   request.setAttribute("subtitlist",subal);
	%>
	部分修改 ，OptionDto subht1=new OptionDto("材料需求明细","");设置为空，则没有链接 【页签 超链接 去除】



5. struts2 test 比较



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day92 2010年12月21日

1. 修改 day91第三条的问题 ，提交

2. 看管控下的收款信息块 
	表 t_epm_receivinginformation

	收款信息的导入（从excel文件导入）—— 原始数据>导入功能逻辑（取数据，分析，匹配，插入数据库）>进入数据库
	

	【系统 模块 功能点 实现的分析】
	从各个功能点的action入手，分析功能点的实现，比如excel熟人导入功能等,以便更好的把握本系统，以及后续的维护再开发。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day93 2010年12月22日

1. 从流程监控里查找流程


2. 修改 
bug :对系统，各个模块的查看页面，去掉 红色 “ * ” 号 提示符。

<font color="#FF0000">*</font> 或 <font color="red">*</font>

比如：综合管理-资金管理-付款申请 的查看页面

	archivewatckoutview.jsp 页面就是付款申请流程查看页面，由公用的流程信息块加相应的动态内容构成，
去分析下这个页面的结构，理解系统其他部分流程页面的结构 【系统 流程页面 构成 机构】

	部分代码如下：
	-----------------
	...
		<!-- 流程模板，发起时间，流程主题等（公用）信息 -->

		<table border=1 width="100%">
			<tr style="display:">
				<td align="center" class="table_view_td">
						<font size="3"><b><%=name %></b></font>
				</td>
			</tr>
			<tr>
				<td>
					<%@ include file="../oaflow/archivesendheaderview.jsp"%>
				</td>
			</tr>
		</table>
		</div>
		
		<%
				String tablename = (String) request.getAttribute("tablename");
				if (tablename == null || tablename.equals(""))
					tablename = "t_oa_archivesinfo";
						String url_table = "";
				if(tablename.equals("t_pm_bid")){
					if(request.getAttribute("businessOrDocJump").equals("doc")){
						url_table = "../table/t_pm_bid_doc_view.jsp";
					}else{
						url_table = "../table/t_pm_bid.jsp";
					}
				}else{
					 url_table ="../table/" + tablename + "_view.jsp";
				}
		%>
		<input type="hidden" name="table_name" value="<%=tablename %>" />

		<!-- 相应的模块内容信息 -->

		<jsp:include page="<%=url_table %>">
			<jsp:param name="isend" value="false" />
		</jsp:include>
		
		<!-- 签核记录，历史记录等（流程公用）信息 -->

		<TABLE class=table_input width="100%">
			<thead>
				<td style="width:20%;border:0px"></td>
				<td style="width:25%;border:0px"></td>
				<td style="width:15%;border:0px"></td>
				<td style="width:25%;border:0px"></td>
				<td style="width:15%;border:0px"></td>
			</thead>
			<tr align="center" height="24">
				<td class="table_view_td" align="right" style="border-top: 0px">
					<s:if
						test="flowprocess.historyopinion!=null && flowprocess.historyopinion!=''">
						<span id="xianshi" onclick="d_s()" style="cursor:hand">显示历史记录</span>
					</s:if>
					签核记录:
				</td>
				<td class="table_view_td" height="100%" colspan="4" id="qhjl"
					style="border-top: 0px;word-break: break-all; word-wrap:break-word;">
					<jsp:include page="../oaflow/checklist.jsp"></jsp:include>
				</td>
			</tr>
			<tr id="history" height="24">
				<td class="table_view_td" align="right" style="border-top: 0px">
					历史记录:
				</td>
	...
	-----------------
	
	注：
		* 系统多数页面都是通过include方式，动态加载其他相关页面。
		* 上面的 JS部分： url_table ="../table/" + tablename + "_view.jsp"; 也是系统动态构造页面路径去访问的方式，
		   以表名来命名文件名。比如 t_pm_paymentapp + _view.jsp = t_pm_paymentapp_view.jsp



3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day94 2010年12月23日

1.  测试流程流转里 启用/禁用的功能
* 表单定义里，在修改表单时，设置表单的启用与否无效，不能改变 ？列表页面的启用/禁用和新建的启用/禁用功能都测试通过

   修改：以新建的方法为例子，完善修改操作，实现在修改页面实现启用/禁用功能。

* 

2. 系统的 保存，修改 ，返回，查询，发送流程等等 按钮的提交后 disable 处理是共用的

例：
	//JSP
	<input type="button" value="  保存" id="savesubmit" class="button_save" onclick="return validData();" 
	onmouseout="this.className='button_save'" onmouseover="this.className='button_save2'"/>
	
	...

	function validData() {
	if(!SaveDocument()){
	return false;
	}
	var id=""
	   if (id == "")
	   {
			getloadsubmit();
			document.location="/wyjs/common/Weboffice_doflowadd.action";
		}else{
			getloadsubmit();
			document.location="/wyjs/common/Weboffice_doflowupdate.action";
		}
	...
	
	这里的 getloadsubmit() 方法是共用的 ，定义在 commonldialog_zn.js 里面，用来阻止多次提交。

	保存按钮都是以 id="savesubmit" 来标识的。 【系统 特点】 这也是防止重复提交的处理方法之一。


3.  sql语句注意的地方，如下 bug:
    select
	*
    from
        T_OA_Templatefile this_ 
    where
        this_.id in ( '')

-- 下面这个 in () 的写法是错误的
       select
	*
    from
        T_OA_Templatefile this_ 
    where
        this_.id in ( )



4. 看 协同门户-表单定义 的input页面的保存方式    【iweboffice 插件 使用方式 整合入J2EE系统的方式 】 ？通过js调用插件

	这个页面用到iweboffice，此页面保存时，用了插件OBJECT的保存内容的方法，在action里doadd方法几乎就是空的，这点要
注意。?

	* officeflowinput.jsp 通过这个页面来熟悉 iweboffice 和本系统的结合使用。
	* 看 iweboffice 的开发说明文档
	* 


	参考下面代码：
		------------
		...
			//作用：保存文档
			function SaveDocument(){
				if(trim(document.all('templatefile.filename').value)==''){
				alert("请输入表单名称！");
				return false;
				}
				//webform.WebOffice.WebClearMessage();            //清空iWebOffice变量
				webform.WebOffice.WebSetMsgByName("templatename",document.all('templatefile.filename').value);  //设置变量MyDefine1="自定义变量值1"，变量可以设置多个  在WebSaveTemplate()时，一起提交到OfficeServer中
				webform.WebOffice.WebSetMsgByName("descript",document.all('templatefile.descript').value);    //模板说明 
				webform.WebOffice.WebSetMsgByName("id",document.all('templatefile.id').value);
				webform.WebOffice.WebSetMsgByName("dict",document.all('templatefile.dictid').value);
				webform.WebOffice.WebSetMsgByName("state","0"); 
				webform.WebOffice.WebSetMsgByName("templatefile","templatefile");   						//在iWebOffice中做保存标记
				if (!webform.WebOffice.WebSaveTemplate()){    //交互OfficeServer的OPTION="SAVETEMPLATE"
				   StatusMsg(webform.WebOffice.Status);
				   return false;
				}else{
				   //StatusMsg(webform.WebOffice.Status);
				   return true;
				}
			}
		...
		------------



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day95 2010年12月24日

1. 测试系统



2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day996 2010年12月28日
系统

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day97 2010年12月28日

1. SSL安全认证说明


第一步：
C:\Program Files\Java\jdk1.6.0_05\bin>keytool -genkey -alias tomcat -keyalg RSA

姓氏：必须输入服务器的ip

第二步：
从C:\Documents and Settings\Administrator下将.keystore靠到tomcat/conf下

第三步：
Uncomment the "SSL HTTP/1.1 Connector" entry in $CATALINA_BASE/conf/server.xml and modify as described in the Configuration section below.
修改conf/server.xml

<Connector port="443" 
               maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
               enableLookups="false" disableUploadTimeout="true"
               acceptCount="100" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" 
           keystoreFile="conf/.keystore" 
           keystorePass="ebuilds">
</Connector>

修改文件权限：C:\>attrib boot.ini +s +h +r

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day98 2011年1月4日

1. 处理resource文件夹里doc文档记录的问题

（1）管控考核—资金管理--付款信息列表中的“总计”修改为“付款总计” 然后再增加一行 显示“收款总计” 
便于进行对比；收款信息列表中的“总计”修改成收款总计，然后再增加一行 显示“付款总计”
doing
 列表的统计数据有小记和总计，小记是当前页数据小汇总，总计是所有数据的汇总 
 找到付款和收款里取得总计的点，把值带到需要显示的页面

 done

（2）人力资源管理--退休管理--退休申请中填写完必路项后无法保存 只有把入职时间填上以后才能保存

         * 员工弹出框在取入职日期时，没有对null情况验证，导致类型转换出错， DWR 报异常。
	    异常类似：
			     页面弹出提示框 ，提示 “ a server error has occured ”

	 * 退休申请service类 RetireapplyService.java 当员工信息的岗位类型id为null时，没有判断null point错误 (positiontype = null)

		----------
		...
			map.put("nowpositionname", new PostinfoService().loadPostinfo(employee.getPositiontype()).getName()); //会出空指针异常
		...
		-----------

	* 没到action的doadd方法就返回了 ， 这是struts框架的设置，如果类型转换失败，默认就跳到input对应的页面。如果
	这个input页面没有设置，报错。

  【系统 健壮性 空指针问题】系统中有些逻辑没有考虑到空指针的问题，注意修改 ？

	这个问题（不能保存）的原因就是，数据库出来的日期是null，在页面显示时没有处理，导致null字符串转date类型时
	报错，直接返回input页面，数据不能保存。（第二次点击保存时，就能保存进去的原因分析下？转换失败后，返回到input页面
	并回填刚才提交的正确的表单域数据，由于日期时错误的，所以置空，空的日期是可以提交的，转换为日期就是null）
	
	done

（3）人力资源管理-培训管理-培训计划中由于申请单位字段不够长 导致保存的时候报“截断二进制”错误
	doing
		申请单位字段后台用的是单位的id处理的，前台的名称并不存入数据库，故不会导致字段过长的问题。
	默认单位名称是登陆者所在单位的详细名称包括一层层的所属，机构选择框和后续的显示都是用的简洁
	名称。
		本系统测试通过。

（4）流程监控中四个流程已经结束 但是王栋、邬梦娜两个人并不在会签名单中，却会弹出该项目的待
	处理流程提醒框 并且点击查看时报错

（5）市场经营管理-投标信息里面杭州钱江经济开发区泉漳高层农居（一期）工程二标段（投标信息）
	银泰购物广场项目土建工程1标（投标信息）
		工程名称为空
		在开标信息中 
	上述两个工程的 工程编号和工程名称 都为空

	doing
		
	原因：经查找测试，是因为上面2个表单项没有进行非空验证，导致数据丢失。
	解决：对上面2个字段，加入js验证即可 

	页面：bidinputbusiness.jsp

	done


（6）综合项目管理--成本管理-所有成本明细排序（明细的排序都按照编码排序）
	没有按照编码排序的点有：
	* 期间计划成本 中 人工、税金、其它直接费 、分包成本、的详细列表

	CostareaplanDao.java 里的getCostPlanAndAreaList方法，修改sql语句实现按照编码排序 例：order by sort.code,areaplan.createdate desc
	done

	bug：这里在增加详细成本记录时，不应该把上级类别出现在类别下的可选条目里。


	加入code两边空格情况的处理order by rtrim(ltrim(work.code))

	修改的文件有：合同预算，目标成本，计划成本，期间计划成本
		CostcontractDao
		CosttargetpmDao
		CostplanpmDao
		CostareaplanDao

	这里由于按照时间顺序排列，基本和按照code排列顺序是一样的，造成以code排序的假象，还是应该进代码里去看。

	done

（7）表单定义，当使用了已定义的表单，然后再引用，然后再禁用，再把表单引用去掉，再删掉表单定义，报错。
	doing
	是因为sql的原因，如下sql：
	    select
		this_.id as id25_0_,
		this_.recordid as recordid25_0_,
		this_.filename as filename25_0_,
		this_.filetype as filetype25_0_,
		this_.filesize as filesize25_0_,
		this_.filedate as filedate25_0_,
		this_.state as state25_0_,
		this_.companyid as companyid25_0_,
		this_.creatorid as creatorid25_0_,
		this_.creatorname as creator10_25_0_,
		this_.descript as descript25_0_,
		this_.dictid as dictid25_0_,
		this_.isdisable as isdisable25_0_ 
	    from
		T_OA_Templatefile this_ 
	    where
		this_.id in (
		    
		)
	-----------
	上面的 in ( ) ，写法是错误的 ，改为 in ( '' ) ，处理没有id的情况

（8）人力资源-用工管理-入职管理的员工，从招聘管理过来的员工，没有员工编码的生成
	doing
	可用的测试身份证号： 423005201101116222
	员工从试用通过并转正后，如何在机构人员框里能看到，还需要哪些手续？

		从招聘需求一步步走下来的员工，来到用工管理下的入职管理时，找到此员工，确实没有员工编码 ，找原因？
	来到 t_hr_emponduty 表，code字段确实为null，说明在招聘需求里点入职时，没有把员工编码设置正确。其中逻辑，
	是，入职前是没有员工编码的，点了入职后，在存入此员工时，应该自动生成编码，并存入数据库，需要修改。
	 “入职” 操作的action是 ResumeinfoAction ，方法为toduty （用工管理-入职管理里新建的数据能正常生成员工编码，使用那边的逻辑
	 ——它这里的编码是调用baseaction的getEmployeeCode方法得到的）

	 有2套员工编码， t_hr_emponduty 和 t_hr_employee ，

	员工编码业务逻辑是这样的：【系统 业务 员工编码 】

		在 用工管理-入职管理下走过了流程并通过后，才会正式进入员工表（t_hr_employee），之前是在 t_hr_emponduty
	表里。这2张表都有员工编码，应该是员工通过入职管理流程时，从t_hr_emponduty表取到编码，保存到 t_hr_employee表里（
	验证：把 t_hr_emponduty表里的某项记录手动设置一个特点的编码，并对此员工进行入职管理流程处理，再看t_hr_employee表
	的编码是否就是刚设定的特殊编码，以验证逻辑——经过验证，确实如此 ），正式成为员工。

	bug：系统自动生成编码的逻辑是从 t_hr_employee 表里取最大编码再加1的，按照上面的业务逻辑，应该是从t_hr_emponduty
	表取最大编码才对。无论是从招聘管理进来的数据，还是直接在用工管理-入职管理里输入的数据。 ？

	
	修改：
		还是以 t_hr_employee 里的编码为准来生成编码，t_hr_emponduty 里的编码修改为在走过入职管理流程并通过时生成，然后
	update到 t_hr_emponduty 表里。因为还有其他地方也有录入数据的入口，故还是以 t_hr_employee的编码为准。
	
	步骤：
		* 在流程审批通过时，生成员工编码，并反馈给 t_hr_emponduty 表
		
		* 点击 传阅（或审批或会签），来到 SendarchivesAction 的 docheck 方法，这个方法是通用的流程处理方法 【系统 流程 处理逻辑】

		* 自动生成编码需要companyid的，emponduty这个pojo类没有companyid这个属性，在把emponduty保存进employee表时，companyid
		   设置为登陆者的companyid，逻辑是companyid以登陆者的companyid为准。各个公司只能用自己公司账号才能向本公司添加员工。【系统 companyid 】
		* 从上面知道，emponduty没有companyid，这可能导致sql语句在有companyid筛选条件时漏掉没有companyid的记录

		* 在进入员工表前是没有编码的，故在发起入职管理流程时，去掉判断编码不为空的验证。

	done



（9）调整市场经营-合同履约-投标名称换一行加宽显示
	位置应该是：市场经营-投标信息 下查看页面的投标名称表单显示问题
	t_pm_bid.jsp 流程查看页面/发起流程页面processBusiness.jsp (把流程页面的input设置为disable) / INPUT页面bidinputbusiness.jsp / 查看页面 bidviewbusiness.jsp /标签页（包括查看页面/input页面/流程页面等的标签页） t_pm_bid_doc_view.jsp

	按照input页面的格式，修改view的表单布局。

	done

	补充：签约管理里的合同名称向右边补齐，投标名称换行补齐。
	三个地方的页面要修改：
		* input页面	bidcontractinputpalaver.jsp
		* view页面	bidcontractviewpalaver.jsp （fist ·）
		* 流程页面	recordview.jsp / bidcontractviewexplain.jsp /  bidcontractview.jsp
		以及里面的标签页，也要修改。(3个标签页都引用了同一个表单页面 bidcontractnoprocessheader.jsp 这家伙隐藏的比较深)
		bidcontractnoprocessheader.jsp 洽商记录 （从 bidcontractinput.jsp 进去，找到bidcontractnoprocessinput.jsp 再进去找到 bidcontractnoprocessheader.jsp）
		还有 签约管理中，走过流程的数据，点修改，进入的页面，也要改样式  bidcontractnoprocessinput.jsp >> bidcontractisprocessheader.jsp
			合同信息
			交底情况
	注意：上面3个页面的input页面 从 bidcontractinput.jsp 进去，里面包含了 bidcontractinputinc.jsp 页面，在这个页面里有去向那个
		    子页面（标签）的逻辑 ，点击标签，则跳到相应的页面。
		    部分代码如下：
		    ------------
		    ...
			function dogo(index,subindex){
				if (index==1){//合同信息
					if(subindex==1){//洽商记录
						var goto = "/pm/BidContract_inputpalaver.action?id="+document.all("contract.id").value+"&txtseq="+index+"&subtxtseq="+subindex;
					}else if(subindex==2){//签约信息
						var goto = "/pm/BidContract_input.action?id="+document.all("contract.id").value+"&txtseq="+index+"&subtxtseq="+subindex;
					}else if(subindex==3){//交底情况
						var goto = "/pm/BidContract_inputexplain.action?id="+document.all("contract.id").value+"&txtseq="+index+"&subtxtseq="+subindex;		
					}
					f1.action+="&path_cxy="+goto+"&istag=1";
					f1.submit();
					//if(validData()){
					//	f1.action+="&path_cxy="+goto;
						//每次切换的时候，我们都要去检查一下，当前输入的合同编号是否唯一。
						//如果不唯一，在不提交表单，要求用户重新输入。
					//	change();
					//}
				}
			 }
		    ...
		    ------------

		    action里还有这个逻辑：
		    -------------
		    ...
			public String doadd() {
				String newcode = new ProjectmanagerService().getNewCode();
				org = new OrgService().loadOrg(orgid);
				bidcode = org.getCode()+newcode;
				contract.setCode(bidcode);
				contract.setCompanyid(getLoginInfo().getCompanyId());
			    //contract.setEprjid(((Eproject)session.get("eproject")).getId());
			    contract.setCreatedate(new Date());
				String refid=new BidContractService().addContract(contract);
				if(refid != null){
					super.addFiles(refid);
				}
				return dogo();
			}
		    ...
			/**
			 * 判断requestParam来指定跳转页面
			 * maxin20080924
			 * @param targetid 当有值传递的时候说明是通过子页签切换增加的新纪录，需设置id到session中
			 * @return
			 */
			private String dogo(String... targetid){
				if(request.getParameter("path_cxy")!=null){
					try {
						StringBuffer path =new StringBuffer(request.getContextPath());
						path.append(request.getParameter("path_cxy"));
						path.append("&txtseq=");
						path.append(request.getParameter("txtseq"));
						path.append("&subtxtseq=");
						path.append(request.getParameter("subtxtseq"));
						path.append("&istag=");
						path.append(request.getParameter("istag"));
						if(targetid.length > 0){
							session.put("targetid", targetid[0]);
						}
						response.sendRedirect(path.toString());   // 这里还重定向 。。。 注意了 action的一个方法里有重定向（can be anywhere）
						return null;
					} catch (IOException e) {
						e.printStackTrace();
						throw new MyException(e);
					}
				}else{
					return SUCCESS;
				}
			}
		    ...
		    -------------
		注：上面，又是一处在action理直接重定向的代码，只好debug来找目标位置。

		以及查看页面去掉红星提示符。

	调整表单域的宽度小节：
	css定义在theme的style.css里面，有3套样式   【系统 样式 表单域 css 】
		* cssStyle="width:93%"  （要调整表单域的宽度，1 是样式 2 是表单域元素的样式属性，本系统样式由class
		引用的样式和标签自身的属性样式结合控制的）例如：
		-----------
		...
			<tr>
				<td align="right" class="table_view_td">
					承包范围:
				</td>
				<td class="table_view_td2" colspan="6">
					<s:textarea name="contract.scope" cols="60" rows="2" readonly="true"
						cssStyle="width:93%" cssClass="disabletextarea" />
				</td>
			</tr>
		...
		------------
		注意：上面的textarea标签样式由 cssClass 和 cssStyle 两部分控制，比如要把input域和文本框域对齐就要用到
		这里的 cssStyle="width:93%" ；看这个页面作为参考：bidcontractviewpalaver.jsp


2. debery服务器的关闭 —— myeclipse 使用 ，在startup里把它及其他一些不用的东西关掉，减少占用的内存。

3. turtiseCVS不能正确从cvs服务器取得项目，通过myeclipse的新建项目，从cvs来源建立，可以实现。

4. myeclipse 建立的数据库连接，可能导致tomcat热部署文件时不能关闭连接，导致部署失败，服务器down掉。
【tomcat 热部署 数据库连接释放】 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day99 2011年1月5日

1. day98第一条 go on


windows xp 各种配置人口命令：
gpedit.msc 组策略
services.msc 服务

2. 修改页面的样式时，想要用某个页面现成的样式，可以直接看html源码，找到css样式名称。【系统 样式 修改】

查看 day98第1条(9)的页面样式 ：t_pm_bid.jsp

3. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day100 2011年1月6日

go on task

	




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
day101 2011年1月7日

task again
（5）






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day102 2011年1月10日

1. struts2的拦截器
	比如，自定义的登陆拦截器，在访问一个需要正确登陆和授权后才可以访问的页面时，在执行action之前，
先执行拦截器，判断是否具有权限，如果没有，则转向到相应报错页面。
	同样道理，struts2自带的通用拦截器也定义这些逻辑，比如 对象/属性自动装配拦截器，就可以自动
把表单提交的属性转换为正确的类型，如果转换失败，改如何处理，也是有定义好的逻辑的。

表单提交的日期类型，如果转换失败就跳到input页面，如果input页面没有设置就报错 struts2

退休申请 地方逻辑：
	先从机构人员弹出框得到选择的员工和员工的id，通过dwr根据id查询是否已申请退（查询退休申请表里是否有此
	员工的id），没有的话，就再通过dwr在t_hr_employee表得到员工资料，填充退休申请的部分表单数据。


2.  struts2 action属性自动装配 【struts2 属性装配错误 】【 struts2 框架 】

案例：
	一个表单的某个日期类型的表单域，当把 "null" 传递到服务器时，struts2自动执行转换到日期的类型，此时，
会报类型转换失败错误，action不继续执行；当，再次点击提交时，这个表单域提交的是null（空，而不是刚才的“null”
字符串，“null”字符串在本例中式通过dwr从服务器得到的，没有进行判断就直接填充的日期文本框里去了）。

2点：
	* struts2类型转换失败，直接返回
	* 返回inut页面时，自动填充之前的表单内容，错误的表单域数据不能回填。（日期为null字符串的表单域置空）
补充：
	struts2的 Development Mode (aka "devMode") 开放模式 ，方便debug
	What does it do?
		When enabled, Struts 2 will reload your resource bundles on every request (meaning you can change your .properties files, save them, 
	and see the changes reflected on the next request).
		Note: this option can also be set standalone via struts.i18n.reload = true
		It will also reload your xml configuration files (struts.xml), your validation files, and so on, on every request. This is useful for testing 
	or fine-tuning your configuration without having to redeploy your application every time.
		Note: this option can also be set standalone via struts.configuration.xml.reload = true	And thirdly, perhaps the setting which is less
	widely known, and therefore a source of much confusion: it will raise the level of debug or normally ignorable problems to errors. For example: 
	when you submit a field which cannot be set on an action 'someUnknownField', it will normally be ignored. However, when you're in development
	mode, an exception will be thrown, telling you an invalid field was submitted. This is very useful for debugging or testing large forms, but can also
	be confusing if you're relying on parameters in your request that are not set on the action, but which you are using directly in your view layer (warning:
	bad practice, you should always validate input from the web).
	
	<constant name="struts.devMode" value="true" /> 如果按照默认是false的话，在用myeclipse开放struts2的项目时，可能导致热部署错误。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day103 2011年1月11日


1. 分析工作流问题

（4）流程监控中四个流程已经结束 ，王栋、邬梦娜两个人并不在会签名单中，却会弹出该项目的待
	处理流程提醒框 并且点击查看时报错
	
	系统流程 事务 问题
    

    表单删除问题 done 



2.   修改表格表单对齐时，注意到表头的列宽定义 ，如：
	-------------
	...
			<thead>
				<td style="width:14%"></td>
				<td style="width:18%"></td>
				<td style="width:14%"></td>
				<td style="width:18%"></td>
				<td style="width:14%"></td>
				<td style="width:18%"></td>
				<td style="width:4%"></td>
			</thead>
			<tr>
	...
	--------------

不要纳闷，同样内容的页面，表单域距离不一样，呵呵


3. 修改页面，要涉及到的几个地方，和注意的地方 【系统 页面修改 查找 小结 】

页面有：
	input页面 / view页面 / 流程发起页面 / 流程签核页面 / 流程查看页面 / 子标签页面（还有默认页，和首选标签页一样，但是不同的页面） / 不能修改的修改页面（特殊，据业务）

找jsp页面：
	* 根据页面的属性信息，找请求这个页面的URL  （根据URL判断请求的具体路径/定向等信息，比如是oa下还是hr下还是其他。。）
	* 根据 控制台的表明
	* 根据TCP/IP信息，找 get / post路径
	* jsp内部的 include 指令
	* jsp内部的再请求
	* jsp内部框架页SRC请求
	* jsp ，action ，js 构造 URL ，再请求 如，archivecheckview.jsp里 ：
	-------------
	...
		<%
		String tablename =(String) request.getAttribute("tablename");
		if( tablename == null || tablename.equals("") ) 
		tablename = "t_oa_archivesinfo";
		String url_table = "../table/" + tablename + "_view.jsp"; <!-- 构造URL -->
		
		%>
		<input type="hidden" name="table_name" value="<%=tablename %>"/>

		<jsp:include page="<%=url_table %>" > <!-- 请求上面构造出来的URL -->
			<jsp:param name="isend" value="false"/>
		</jsp:include>
	...
	-------------
	* 找流程查看页面的方法之一，在 archivewatckoutview.jsp 里debug构造的 url 
	

修改页面注意的地方：
	* 页面里可能有相似的代码，比如表格，有的是为了提交用，是隐藏的
	* 页面里可能有相似的代码，是处理不同逻辑的，用if判断，修改时要看仔细
	* 表单整体的对齐与否 ，还可以从表头的列宽入手：如
	   ---------------
	   ....
			<td style="width:14%"></td>
			<td style="width:18%"></td>
			<td style="width:14%"></td>
			<td style="width:18%"></td>
			<td style="width:14%"></td>
			<td style="width:18%"></td>
			<td ></td>
	   ...
	   ---------------
	   具体，就根据布局不同而改动了。




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day104 2011年1月12日


1.  提交 合同预算的sql修改和签约管理及投标信息的页面样式修改

com.erp.pm.costmanager.costcontract.dao.CostcontractDao.java

erp/oa/table/t_pm_bid_doc_view.jsp
erp/oa/table/t_pm_bid_view.jsp
erp/oa/table/t_pm_bid.jsp

erp/pm/bid/bidcontractisprocessheader.jsp
erp/pm/bid/bidinputbusiness.jsp
erp/pm/bid/bidinputdoc.jsp
erp/pm/bid/bidviewbusiness.jsp
erp/pm/bid/processBusiness.jsp

2. 系统工作流（流程）



3. 人力资源-招聘管理-招聘需求里的   招聘需求明细 ，增加一个字段“工作内容”文本输入框【任务】
并修改相应的地方：
	* 数据库 增加 workcontent 字段 varchar(4000)
	* 招聘需求明细pojo类增加 workcontent 属性，mapping映射修改
	* 查看页面 / 流程页面 /。。。
	* 页面设计横向滚动条，方便显示。

相关页面：
	input页面：inviterequireinput.jsp
	view页面： inviterequireview.jsp
	流程页面： inviterequiresendinput.jsp 发起流程页面 sendinput【系统 特点 流程子页面 包含】
			    t_hr_inviterequire_view.jsp (by debug) 待处理流程页面 checkview （由在archivecheckview.jsp里构造的url_table作为URL ）   
				上面这个路径，也可以通过表名找到
			    t_hr_inviterequire_view 流程查看页面

		

	pojo类：	Requireidetail.java


表： t_hr_requireidetail 

数据库更新： 
	alter table t_hr_requireidetail add workcontent varchar(4000)


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day105 2011年1月13日

1.  day104第三条，滚动条显示 + 周边引用页面的查找，修改

	input / VIEW / 流程相关页面都要添加

2. 表格滚动条显示 div 滚动

通过 div + css行为（expression） 实现 

<div id ="..." class="...">
	<table>
		<td class="locked">...</td>
		<td class="locked">...</td>
		...
		<td>...</td>
		...
	</table>
</div>

例如：<div id="table-locked" class="Divsub" style="width:100%;overflow-y:scroll;overflow-x:scroll;">
		把表格放到div中，并设置div的样式 x轴，y轴溢出的话显示滚动条；然后，设置表格的某些列（比如第一列）
	的样式，使其固定不随滚动条移动。

部分样式代码：
	-------------
	...
		thead td.locked_in {
			position: relative;
			left: expression(parentNode . parentNode . parentNode . parentNode .
				scrollLeft); 
			z-index: 666;
			border-left: 0px;
			border-bottom: 0px;	
		}

		.locked {
			left: expression(parentNode . parentNode . parentNode . parentNode .
				scrollLeft); 
			position: relative;
			border-left: 0px;
			border-bottom: 0px;		
		}
	...
	-------------

还有一段 js 来控制宽度的 ，不要忘了 。

参考系统：t_hr_inviterequire_view.jsp

关于 css行为 补充：

	#####################
	http://www.blueidea.com/tech/site/2006/3705.asp

	CSS中的行为——expression  
	作者：greengnn　时间： 2006-07-03　文档类型：原创　来自：蓝色理想 


	 
	 
	 
	作者的blog: www.jluvip.com/blog/ 

	CSS中的行为——expression

	最近对CSS中的行为比较感兴趣，虽然是不符合标准的也只有ie才能识别，但是他确实给css的功能扩展了不少。下面是摘自
	互联网上的文字和例子，因为都被转烂了，没法注明出处。

	IE5及其以后版本支持在CSS中使用expression，用来把CSS属性和Javascript表达式关联起来，这里的CSS属性可以是元素固有的
	属性，也可以是自定义属性。就是说CSS属性后面可以是一段Javascript表达式，CSS属性的值等于Javascript表达式计算的结果。
	在表达式中可以直接引用元素自身的属性和方法，也可以使用其他浏览器对象。这个表达式就好像是在这个元素的一个成员
	函数中一样。 

	给元素固有属性赋值

	下面是定义container容器的宽度，如果<725就为自己的宽度，否则就等于725，相当于max-width:725px;。

	<style type="text/css" media="screen">
	#container { width: expression((documentElement.clientWidth < 725) ? "725px" : "auto" ); }
	</style>
	给元素自定义属性赋值

	例如，消除页面上的链接虚线框。 通常的做法是：

	<a href="link1.htm" onfocus="this.blur()">link1</a>
	<a href="link2.htm" onfocus="this.blur()">link2</a>
	<a href="link3.htm" onfocus="this.blur()">link3</a> 

	粗看或许还体现不出采用expression的优势，但如果你的页面上有几十甚至上百个链接，这时的你难道还会机械式地Ctrl+C，
	Ctrl+V么，何况两者一比较，哪个产生的冗余代码更多呢？

	采用expression的做法如下： 

	<style type="text/css">
	a {star : expression(onfocus=this.blur);}
	</style>
	<a href="link1.htm">link1</a>
	<a href="link2.htm">link2</a>
	<a href="link3.htm">link3</a> 

	说明：里面的star就是自己任意定义的属性，你可以随自己喜好另外定义，接着包含在expression()里的语句就是JS脚本，在自定
	义属性与expression之间可别忘了还有一个引号，因为实质还是CSS，所以放在style标签内，而非script内。OK，这样就很容易地
	用一句话实现了页面中的链接虚线框的消除。不过你先别得意，如果触发的特效是CSS的属性变化，那么出来的结果会跟你的
	本意有差别。例如你想随鼠标的移进移出而改变页面中的文本框颜色更改，你可能想当然的会认为应该写为

	<style type="text/css">
	input {star : expression(onmouseover=this.style.backgroundColor="#F5F5F5";
	onmouseout=this.style.backgroundColor="#FFFFFF")}
	</style>
	<input type="text">
	<input type="text">
	<input type="text">
	可结果却是出现脚本出错，正确的写法应该把CSS样式的定义写进函数内，如下所示：

	<style type="text/css">
	input {star : expression(onmouseover=function()
	{this.style.backgroundColor="#FF0000"},
	onmouseout=function(){this.style.backgroundColor="#FFFFFF"}) }
	</style>
	<input type="text">
	<input type="text">
	<input type="text"> 
	注意:不是非常需要，一般不建议使用expression，因为expression对浏览器资源要求比较高。 

	 
	#####################


3. 部分input页面的空表格行，是通过js在客户端生成的 【系统 表格操作】

	部分js代码：
		sn=<s:property value='rds.size()'/>;
		for (var i=sn;i<5;i++)
		{	alert(1);
			add(document.all("tbl").lastChild,'afterEnd',"tbl","templeteid");
		}
	
	templeteid 指向的是隐藏的表格（内含表单）


4.  系统 流程 审批 传阅 
	系统内，有的带审批输入的流程，必须审批才会把批准数量保存到数据库（传阅的话，不保存审批数量数据）
	如：人力资源管理-招聘需求里

           
5. 合同预算 / 目标成本 2着的排序不一致？  【任务】
用工管理-流程走过后，删除流程报错
done


6. bug：人力资源-用工管理 入职管理里 身份证重复 ，走过流程的身份证号码，可以被继续使用，虽然提示重复，但还是
保存到数据库中 ？ 
	原因：检测出重复，提示“身份证号码已存在。。。”后，执行了提交（应该不提交）。



7.  bug 系统的查询功能 ，没有去掉字符串首尾的空格 ？ 业务需求

8.  修改了 style.css 的 detaildiv样式，加上 background-color:#E0E0E0;
以去掉白色背景，使整体颜色统一。


9. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day106 2011年1月14日


1. task   【任务】

(1)、设备预登记--选最后一页，最后一项，进去，退出之后会看到其他
项目部的设备

查询出的设备总记录也增加了。

测试：
	部分sql如下：
	----------
	    select
		count(*) as count 
	    from
		(  select
		    o.*   
		from
		    ( select
			a.sortid,
			a.usedflag,
			a.id,
			a.makesure,
			a.name,
			a.code,
			a.spec,
			a.productor,
			a.projectid,
			a.productcode,
			g.name as subcompanyname ,
			p.name providername 
		    from
			T_PM_EquipOutLendDetail a 
		    left join
			t_hr_org g 
			    on g.id=a.subcomany 
		    left join
			t_pm_Provider p 
			    on a.provider=p.id )o 
		where
		    1=1 
		    and sortid='402880911ffed6f601200d41000d0dc7'  
		) liguohui 
	Hibernate: 
	    select
		top 45 o.* 
	    from
		(  select
		    a.sortid,
		    a.usedflag,
		    a.id,
		    a.makesure,
		    a.name,
		    a.code,
		    a.spec,
		    a.productor,
		    a.projectid,
		    a.productcode,
		    g.name as subcompanyname ,
		    p.name providername   
		from
		    T_PM_EquipOutLendDetail a  
		left join
		    t_hr_org g 
			on g.id=a.subcomany    
		left join
		    t_pm_Provider p 
			on a.provider=p.id   )o 
	    where
		1=1  
		and  sortid='402880911ffed6f601200d41000d0dc7'  
	    order by
		code desc
	----------
	上面是查询某个类别机械，走到尾页，进入最后一项的查看页面，点击返回的sql输出。初步认定是部分sql语句，没有加入项目筛选条件 ，
	在点击返回时，服务器取到了sortid，没有projectid。

	直接查询列表，projectid是通过getQuerywhere(qlevel) 取到的，点返回时 ，这个值丢掉了。
	在 
		----------
		...
			private String getQuerywhere(String level){
				String where="";
				Project project = (Project)request.getSession().getAttribute("project");
				if(project!=null){
					where=" and o.projectid='"+project.getId()+"'";
				}
				if ("1".equals(level) || (request.getMethod().equals("GET") && level==null)) {
					//普通查询
					ArrayList list=new ArrayList();
					if (equipoutlenddetail!=null &&  ConvertUtil.isNotEmpty(equipoutlenddetail.getName())) {
					  list.add(new Query(QConstant.T_TXT,"o.name",QConstant.OP_LIKE,equipoutlenddetail.getName()));
					}
					where+=QueryUtil.getQueryWhere(list);
					session.put("where",where);
				}else if ("2".equals(level)) {
					//高级查询
					equipoutlenddetail=null;
					ArrayList list=QueryUtil.getQueryWhere(request,response);
					where+= QueryUtil.getQueryWhere(list);
					session.put("where",where);
				}
				else {
					//分页
					where=(String)session.get("where")+where; // 这里原来是 where=(String)session.get("where") ，把projectid丢了。
				}
				return (where==null?"":where);
			}
		...
		-----------

解决：
	可以在上面的逻辑里面改，不过那里是查询的逻辑，还是应该在查询的方法里加上 projectid 的参数。	
	在 EquipoutlenddetailDao 的某些方法加上 projectid 参数。

	done

(2)、安全检查-检查整改（同上）
	综合管理-安全生产管理-安全检查-检查整改
	
	.../pm/CheckimproveAction.java 


	(1) 用请求acton的toframe方法来确定是访问所有数据还是子类别数据：
		public String toframe() {
			request.getSession().removeAttribute("sortid");
			return TOFRAME;
		}

总结：
		上面2处问题的出现，都是因为把查询功能的逻辑和正常列表功能逻辑混用了，在正常数据列表
	查询里要加上projectid来标识，而不是从查询功能的变了中取关键参数。
		给需要的方法，传递 projectid 过去（和sortid一样）。
	

	【系统 综合管理 项目数据混淆 bug 】

	done


///////////////////////////
根据上面的问题，看下面的等待 

	EquipoutlenddetailAction.java

	-----------
	...
		public String list() {
			String sortid = request.getParameter("sortid");
			if(sortid != null && !"".equals(sortid) && !"null".equals(sortid)){
				request.getSession().setAttribute("sortid", sortid);
			}
			if(sortid == null || "".equals(sortid) || "null".equals(sortid)){
				sortid = (String)request.getSession().getAttribute("sortid");
			}
	...
	------------
	上面，把sortid存入了session ，为了配合返回功能



2 系统内部出现问题，关闭服务器，重新部署下 （开发时）


3. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day107 2011年1月17日

1. document.location  ，这里 location是document文档对象下的对象，是 DHTML模型里的对象。


2. day105第6条 line 10837
bug：人力资源-用工管理 入职管理里 身份证重复 ，走过流程的身份证号码，可以被继续使用，虽然提示重复，但还是
保存到数据库中 ？ 
	
	原因：检测出重复，提示“身份证号码已存在。。。”后，执行了提交（应该不提交）操作。

	身份证框是通过表单域失去焦点出发异步检测请求的，部分代码如下：

	

	#################### 下面也是简单的ajax/异步请求例子 ####################【系统 ajax】

	在 empondutyinput.jsp页面，调用了ajaxnew.js里封装了ajax请求的代码


String.prototype.trim = function(){return this.replace(/^\s+|\s+$|\n+\r+/g,"");}  -- 扩充 String对象的方法 


		--------------
		...
			function checkId(idcardObj){
				if(idcardObj.value.trim() == ""){
					return false;
				}
				if(checkIDCard(idcardObj.value.trim()) != true){
					idcardObj.value = "";
					return false;
				}
				var idCard = idcardObj.value.trim();
				var id = document.all("emponduty.employeeid").value;
				var url = "/wyjs/hr/Emponduty_checkIdCard.action";
				var param = "idcard="+idCard+"&id="+id;
				sendAsynchronRequest(url,param,checkIdCardCallback); // 发送异步请求
				
			}
		...
		...
			方法：checkIdCardCallback() —— 处理异步请求的返回值

			function checkIdCardCallback(){
				if( xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200){  //这里可以根据不同的响应
																		//进行个性动态的js动作
					var resultData = xmlHttpRequest.responseText;
					if(resultData.trim() == "1"){
						alert("身份证号已经存在，不能重复");  // 
						document.all("emponduty.idcard").value = "";
						return false;
					}
				}else{
					return false;	
				}
			}
		...
		---------------

		补充：
		/////////////////////////////////////////////////////////////////////////////////////
			ajaxnew.js 里定义的共用异步请求代码
		/////////////////////////////////////////////////////////////////////////////////////

		---------------
			方法：sendAsynchronRequest() —— 处理异步请求的返回值

			var xmlHttpRequest;
			function createXMLHttpRequest(){
			    if(window.XMLHttpRequest){ 
				xmlHttpRequest = new XMLHttpRequest();
			    }else if(window.ActiveXObject) { 
				try{
					xmlHttpRequest = new ActiveXObject("Msxml2.XMLHTTP");
				}catch(e){
					try {
					xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
					}catch(e){}
				}
			    }
			    if(xmlHttpRequest == null){
				alert("Does not Create XMLHttpRequest Object");
				return false;
			    }
			}		
			
			function sendAsynchronRequest(url,parameter,callback){
				createXMLHttpRequest();// 初始化XMLHttpRequest对象，用于异步操作
				if(parameter == null){ // 根据参数是否为空，判断用get请求还是post请求
					xmlHttpRequest.onreadystatechange = callback;
					xmlHttpRequest.open("GET",url,true);   //---------------------------如要要同步执行，比如必须根据请求的返回值判断是否提交，这里设置为 false （同步执行）
					xmlHttpRequest.send(null);
				}else{
					xmlHttpRequest.onreadystatechange = callback;
					xmlHttpRequest.open("POST",url,true); //---------------------------如要要同步执行，比如必须根据请求的返回值判断是否提交，这里设置为 false （同步执行）
					xmlHttpRequest.setRequestHeader("Content-Type","application/x-www-form-urlencoded;");
					xmlHttpRequest.send(parameter);
				}
			}
		---------------

		
			综上分析，是因为身份证编码的失去焦点是在点击保存时触发的，虽然失去焦点的处理函数把身份证表单
		置空了，但随即的提交操作却把整个已经存在的身份证号保存进去了。

服务器端代码：

		---------
		...
			/**
			 * 检测营业执照唯一
			 */
			public void checkLicense() {
				String theLicense = request.getParameter("license").trim();
				if(theLicense != null && !"".equals(theLicense)){
					PrintWriter out = null;
					try {
						response.setContentType("text/xml");   // 构造响应头
						response.setHeader("Cache-Control","no-cache");
						response.setHeader("Pragma","no-cache");
						out = response.getWriter();
						int result = new ProviderinfoService().checkLicense(theLicense);
						out.println(result);
						out.flush();
					} catch (IOException e) {
						e.printStackTrace();
						out.println("0");
					}finally{
						out.close(); // 关闭输出流
					}
				}

			}
		...
		---------


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day108 2011年1月18日

1. 提交 

2. 对预警模块加强功能，能够直接从预警信息提示里进去就行预警的后续操作【任务】
	部分预警不需要提供此功能。


单独new一个action来处理预警的修改

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day109 2011年1月19日

1. 根据保修金返还预警的修改功能，实现其他几个预警的修改功能【任务】

	* action ：com.erp.portal.risk.action.RiskWarnAction 
	* service：com.erp.portal.risk.service.RsikWarnService
	* input页面：/erp/portal/risk/paybackinput.jsp (根据原有的input页面修改，单独生成一份)
		提供修改方法，指向portal的修改action，action接受参数，传给service，service根据参数，调用各自的service

开始：
（1）合同变更 （分包合同没修改意思，先不做）
	view 页面： conchangenoteview.jsp (主合同)
	input页面：conchangenoteinput.jsp （新建一个到erp/portal/risk/目录）
（2）保修金 pass
（3）设备维修（待业务需求分析）



2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day110 2011年1月20日

1. 测试修改内容，提交

2. 走系统






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day111 2011年1月21日

1. 【系统 特殊 数据兼容】 
	在 人力资源-招聘管理-招聘需求 里，申请人参数在数据库里用 employeeid 表示，但employeeid字段数据机构不一致，
一部分是真实的id，还有一部分是name（名字）。故，在处理这个属性时，要做兼容逻辑。
	
	原来逻辑，换个人修改招聘需求就会导致申请人发生改变。this.setEmpname(getLoginInfo().getRealName()); 这句代码的问题。


	参考： day104第3跳 line 10766


2.  系统 流程页面数据显示 

	流程待处理页面的数据，通过 SendarchivesAction 的loadinfo方法取得，各个不同的流程都走这里，个别的参数要放到
页面上显示，可以在这里设置。


3. 【系统 流程 processid 流程状态 】 
minStates=1, minStates=1, 

上面的states是来自 T_OA_FLOWACTIVITIES  表的最小值（minStates） 和最大值（minStates） ，表示流程的状态

T_OA_FLOWACTIVITIES --- 流程签核记录表

流程状态有下面几种：

	1:待签核:	   2:处理通过:	 3:处理未通过:    4:已撤回: （验证下）

还有 2 代表什么意思？

流程状态：
	流程状态的判断，通过比较流程多条记录的状态信息，只有最大状态和最小状态都为2（minStates == 2 && minStates == 2）时，流程正常走完。

		这样，发起流程时，就给流程的每个处理点一个状态（初始都为0，states=0），处理点正常通过时把状态置为2（states=2），打回（states=4）
	，不通过（states=）


	流程监控里 删除流程，根据流程id（processid），在流程表（T_OA_FLOWPROCESS）里找到这个流程的相关信
息；（流程id是原始数据和原始数据的流程信息间的桥梁）
	找到后，得到需要处理的表和需要处理的表记录的id

	-----------------

	String[] idandtable  = flowprocessDao.getIdAndTable(session, ids[i]); //根据processid得到

	-----------------
	--
	    select
		a.id,
		isnull(b.tablename,
		'T_OA_ARCHIVESINFO') as tablename  
	    from
		T_OA_FLOWPROCESS a  
	    left join
		T_OA_FLOWTEMPLATE b 
		    on b.id=a.templetid  
	    where
		a.id='402881eb2da6304f012da737af2201be' 
	--
	    select
		a.id  
	    from
		t_hr_inviterequire  a  
	    where
		a.processid='402881eb2da6304f012da737af2201be' 

	最后执行删除的语句是：（有些流程数据是存放到详细表（子表）里的下面的语句没有重置这些流程相关字段的数据
							因为需求和表字段都不一致，可以考虑在取审批字段数据时，带上逻辑）

		String sql = "update  "+tablename+" set processid=null where id in("+sqlIds.substring(0,sqlIds.lastIndexOf(","))+")";

	-----------------

	这样，可以在取列表数据时，对于审批数据依据processid的null与否，。。。

4. bug ：人力资源-招聘管理-招聘需求 发起通过的流程，在监控里删除过后，审批数量没有被置零 ？
	·	导致，某些招聘需求在待签核页面的批准数量为上次历史批准的数量


5. 看下面几段代码，框架代码的用处
	FlowprocessService.java
	--------------
	...
	public void dodels(final String[] ids, final HttpServletRequest request,	final Flowprocess flowprocess) {

			new HibernateUtil().execute(new HibernateCallbackWithoutResult() {
				public void doInHibernate(Session session) {
					Flowactivities flowactivities = null;
					for (int i = 0; i < ids.length; i++) {
						if(ids[i] == null || ids[i].length() < 3){
							continue;
						}
						String[] idandtable  = flowprocessDao.getIdAndTable(session, ids[i]);
						if(idandtable == null || idandtable.length < 2){
							continue;
						}
						String[] tableid = new String[1];
						Flowprocess flowprocess = (Flowprocess) flowprocessDao.loadEntry(session, ids[i]);
						if ("".equals(idandtable[0])&& ConvertUtil.isNotEmpty(flowprocess.getTablename())) {
							idandtable = flowprocessDao.getTabledtoId(session, flowprocess.getId(),flowprocess.getTablename());
						}
						tableid[0] = idandtable[0];
						if (ConvertUtil.isNotEmpty(tableid[0])) {
							new Archivesutil().doFlowDelete(tableid, idandtable[1],session); // (1) 删除流程表里的记录
							// uploadfiledelDao.deldoc(session, tableid); // 
						}
						List flows = flowprocessDao.getFlowactivitiesByprocessid(session, ids[i]);

						for (int j = 0; j < flows.size(); j++) {
							flowactivities = (Flowactivities) flows.get(j);
							session.delete(flowactivities);// (2) 删除流程审批记录
							// flowactivitiesDao.delEntry(session,
							// flowactivities.getId(), Flowactivities.class);
						}

						// (3)删除存放历史记录的表中数据
						deleFlowHistory(session, ids[i]);
					}
					
					new MsgService().doDelsByOid(session,ids,Constant.FLOW_EVENT);
					
					for (int i = 0; i < ids.length; i++) {
						if(ids[i] == null || ids[i].length() < 3){
							continue;
						}
						flowprocessDao.delEntry(session, ids[i], Flowprocess.class);// (4) 删除流程消息提醒
					}
				}
			});

		}
	...
	--------------
	
	HibernateUtil.java （frame）
	--------------
	...
		public  void execute(HibernateCallbackWithoutResult action)  {    
			Session session = null;
			try {
				session = HibernateUtil.openSession();
				session.beginTransaction();
			    action.doInHibernate(session);        
				session.getTransaction().commit();
			} catch (JDBCException ex) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(ex.getSQLException());
			} finally {
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
		 } 
	...
	--------------
	
	HibernateCallbackWithoutResult.java (接口，其方法体可以根据不同需求而各自实现) （frame）
	--------------
	...
		public interface HibernateCallbackWithoutResult {    
			   
		    void doInHibernate(Session session);  
		} 
	...
	--------------
	
	直接在service层进行数据库层的处理。保证整个过程是一个原子操作。
	【系统 框架 】系统的框架代码要好好看看。


6. bug ：系统中，流程发起后，处于待签核状态，此时，如果把原始数据记录删除，系统允
许删除，这个待处理流程也在，但原始数据都丢失 ，？

现象：有些待签核的流程进去后，原始数据都是空。

修改：已发起流程，原始数据记录左边选择框不能选，必须删除流程后，方可进行删除操作。

7. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day112 2011年1月24日

1. 工作流里 流程监控 的删除流程
见navigator.txt

补充：
	
	流程相关的几个类

	Flow	process  / Flow	processAction / FlowprocessService
	
	Sendarchive / SendarchivesAction  / SendarchiveSercice




2. bug
* 分包合同变更流程查看页面的 红星去掉
	



* 分包合同流程查看页，不要出现修改按钮
    人工类：manpowerchangeview.jsp


* 分包变更签证里 人工类，输入表单页 申请人字段没显示  done
* 分包变更签证流程通过页面 ，样式 和input的readonly

标签：人工类，材料类，机械类 标签页面是 changeindexshow1.jsp
3. 【任务】
	* 记录问题，成文档
	* 解决操作问题
	* 数据库操作谨慎

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day113 2011年1月25日

1. 手机短信 功能部分的测试
	没有发送短信的设备也可以测试，系统和短信设备交流的还是系统发出的数据，保证系统生成的数据对了，
短信功能也就行的了。

【系统 手机短信】 SendSmsAction / SmsService  /


短信发送过程：

	- 调用 SendSmsAction 的 send 方法
	- 调用 SmsService 的 SendByMobiles(sms,allnames)

2. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day114 2011年1月26日

1. 短信modem 

1）直接通过移动或联通互联网短信网关。向中国移动或中国联通申请特服号码，你的应用系统短信由专线接入通信
公司的网关，这种方法速度快但费用高，申请SP资格不容易，短信业务量有门槛要求，一般只适合专业短信公司使用。
----不是件容易的事，周期长，等董事会研究半年再说。 

2）以二级SP方式接入移动或联通互联网短信网关。向二级短信服务商申请接入服务，但大多数的二级短信服务商不
提供短信接收功能，一般适合只要求发送短信的系统。----短信岂能只发不收？没有理由说服客户。 

3）购买工业GSM   Modem并作设备驱动开发。购买工业级GSM   MODEM设备,自己编写设备控制程序，熬更守夜，不
断地测试、不断地修改代码。真正的程序员会乐此不疲，但聪明的程序员决不会这样做，社会有分工，术业有专攻。
聪明的程序员都知道，客户需要的是一个稳定成熟的应用系统，是为了提高工作效率，而不是为了给您的劳动成果作
测试。现在的客户，付款的时候可是鸡蛋里挑骨头。----选择此路前，最好准备两个棉团，以便被老板和客户骂的时候
好塞进耳朵里。 

4）购买工业GSM   Modem及其配套设备控件。购买工业级GSM   MODEM设备,我们为你提供GSM   MODEM设备的控件
。基于该设备控件可以方便地控制设备，方便地实现短信的收发操作。----   使用非常简单，开发难度低。 

5）购买工业GSM   Modem和短信服务器二次开发平台。购买工业级GSM   MODEM设备，使用我们为您提供的短信服务
器二次开发平台。可以基于数据库接口或客户端OCX控件接口，二次开发非常简单，很容易实现网络应用。如果基于
数据库二次开发，只需要安装一下软件、配置一下数据库，一杯茶的功夫，用不着编程，立竿见影就可以用起来。只
要用起来了，再考虑怎么把二次开发做得更好也不迟。----没有比这再简单的事了，老板和客户最愿接受。 

	两种行之有效的低成本的手机短信二次开发途径：GSM   Modem设备控件、基于短信服务器的短信二次开发平台。
使用各种开发语言的开发人员都可以完全避免对GSM底层通信协议的学习，都可以把短信收发功能加入到自己的
程序中，不管你做的是OA系统，还是CRM系统，不管是CS结构，还是BS结构，它们都能出色地完成任务，大大
提高产品开发进度和产品质量。

2. 处理五洋问题doc记录第 3 条

走插件配置的设置过程：

PluginsetAction 的 doupdate 方法 代码如下：

	----------
	...
		public String doupdate() {
			OutputStream out = null;
			InputStream input = null;
			try {
				URL u = this.getClass().getClassLoader().getResource("init.properties");
				out = new FileOutputStream(u.getFile()); 
				input = Thread.currentThread().getContextClassLoader(). 
			getResourceAsStream("init.properties"); 
				Properties prop = new Properties(); 
				prop.load(input);
				prop.setProperty("im.use.flag", imgflag);
				prop.setProperty("send.use.flag", sendflag);
				prop.setProperty("james.use.flag", mailflag);
				prop.setProperty("msg.use.flag", msgflag);
				prop.store(out, "update flag");
			} catch (IOException e1) {
				e1.printStackTrace();
			} finally{
				try {
					if(out!=null){
						out.close();
					}
					if(input!=null){
						input.close();
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return SUCCESS;
		}
	...
	-----------

	这个方法，通过输入流把配置文件 init.properties 读入，然后把提交的修改参数通过输出流写入到这个配置文件中。
	（通过 URL u = this.getClass().getClassLoader().getResource("init.properties"); 找文件路径）




			imgflag = prop.getProperty("im.use.flag");  // 即时通管理:
			sendflag = prop.getProperty("send.use.flag"); // 短信管理        
			mailflag = prop.getProperty("james.use.flag"); // Email管理
			msgflag = prop.getProperty("msg.use.flag"); // 在线即时提醒


	在 oaflow 和 document 目录下，修改下面的jsp文件： archivesendheader.jsp
		



3. 导入excel内容到文本框过程 【系统 导入excel】

参考： line 8986

处理问题：
	发送短信的那个地方的外部接收人 能不能加入一个导入的功能 比如说 我把人员姓名和手机号存放在了一
个excel表里面 然后我通过导入这个文件 来
进行外部接收人的添加


新增功能点：分析是否可以做；对方写需求发送到我们领导 ；估计工作量 ；开发 ；验收； 【公司 新功能点 流程】


	根据上面解析excel的逻辑，excel的第一行是不被读取到数据库的，只是作为列名标识


js读取excel ：【js excel 读取】
-----------
...
	function readThis(){ 
		var tempStr = ""; 
		var filePath= document.all.upfile.value; 
		var oXL = new ActiveXObject("Excel.application"); //步骤1 ：生成ActiveX对象，通过它来操作本地excel
		var oWB = oXL.Workbooks.open(filePath); //打开excel
		oWB.worksheets(1).select(); //选择sheet
		var oSheet = oWB.ActiveSheet; 
		try{ 
			for(var i=1;i<=2;i++){ 
				if(oSheet.Cells(i,i+1).value =="null" || oSheet.Cells(i+1,i+1).value =="null" ) break; //处理不符合要求的记录
				var temp=oSheet.Cells(i+1,i).value+":"+oSheet.Cells(i+1,i+1).value；
				tempStr+=tempStr;
			} 
		}catch(e){ 
			alert(e); 
			document.all.txtArea.value = tempStr; 
		} 
			document.all.txtArea.value = tempStr; 
			oXL.Quit(); 
			CollectGarbage(); 
	} 
...
------------



4.  通过上面的 ActiveXObject 对象操作excel
	找到各个ActiveXObject及api的资料，利于开发。不只是知其然。【ActiveXObject API 】

【activex控件】

5. 录入数据的中英文兼容 【字符 兼容】【字符兼容问题处理 替换】
	为了达到兼容的目的，可以用字符串替换的方式，使得数据一致，然后传递给后续逻辑处理。

	例如：
		手机短信-发送短信-接收人（外部）的联系人数据，用英文字符“,” 和“:”来替换字符串中的对应中文字符。
	然后，在按照英文字符来截取各个部分。


6. js代码捕获错误  【js 人性化 错误 js 异常 js捕获异常】
	比如 js通过activex对象读取本地文件是，会报异常，把可能报异常的代码放到catch块中，捕捉到错误，给客户人性化提示

	---------
	...
			function readThis(){ 
			var tempStr = ""; 
			var filePath= document.all.upfile.value; 
			var oXL = new ActiveXObject("Excel.application"); //步骤1 ：生成ActiveX对象，通过它来操作本地excel
			if(filePath == "") {
				alert("请选择要导入的文件");
				return false;
			}
			try{
				var oWB = oXL.Workbooks.open(filePath); //打开excel
			}catch(e){
				alert("文件读取错误，请正确选择文件");
				return false;
			}
			oWB.worksheets(1).select(); //选择sheet
			var oSheet = oWB.ActiveSheet; 
			var rows = oSheet.usedrange.rows.count;//记录的行数
			try{ 
				for(var i=1;i<rows;i++){ 
					alert(oSheet.Cells(2,2).value);
					if(oSheet.Cells(i+1,1).value =="null" || oSheet.Cells(i+1,2).value =="null" ) break; //处理不符合要求的记录
					var temp=oSheet.Cells(i+1,1).value+":"+oSheet.Cells(i+1,2).value;
					tempStr+=temp;
				} 
			}catch(e){ 
				alert(e); 
				document.all.txtArea.value = tempStr; 
			} 
				document.all.txtArea.value = tempStr; 
				oXL.Quit(); 
				CollectGarbage(); 
		} 
	...
	---------


automation服务器不能创建对象：是因为ie的安全设置问题
在internet选项里吧安全里，与activex相关的部分修改下。

7. 系统-短信 
发送的速度慢 ？



8. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day115 2011年1月27日


1. 员工通讯录数据重复 bug

是录入数据的错误导致，一个员工录入了多条主职（应该只有一个主职）。




2. checkbox的 checked 属性

checked="false" 时依然是选中状态


csdfwef231
3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day116 2011年1月28日

1. 继续doc中的问题 ；走系统

2. bug ：部分流程走过的查看页面，有些表单域没有设置"readonly"属性。虽然，不影响使用，
但可能会造成误解。如果要打印的话，可能造成不必要的麻烦（审批的值在页面上打印前可以改变）。

比如：
	* 综合管理-方便管理-变更签证 的流程页面 



	注：因为有些流程查看页面和待审批页面是共用的，所以在修改readonly属性时，要测试好，不要
		影响其他地方。






***************

Happy New Year!

***************




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 117  2011年2月9日


收一下心，开始新的一年的工作，加油！

1. 处理记录下的修改点


 2. 系统整体样式与sitemash  ？






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 118 2011年2月10日

1. 系统工作流与自定义工作流


2. myeclipse 的快捷注释 若要注释某个标签及其内部的内容，只要把光标放在标签里使用快捷键注
释，即可把此标签及其内部作为整体注释掉，不用去选择要注释的部分。 【myeclipse 注释】

alt + shift + 方向键 ，选中标签内容。

右键->source->ctrl+shift+o 导入类的包

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day119 2011年2月11日

1. 系统工作流 可以参考系统工作流说明文档 
	resource\doc\WF-01)工作流管理说明[1].doc

工作流描述 xml文档:

	<?xml version="1.0"?>
	<flow name="自定义流程" isedit="true">
		<node orders="1">
			<item name="办公室主任" handlemode="4" manid="00000287" man="李宏" orders="1" />
		</node>
		<node orders="2">
			<item man="韩景海" manid="00000139" handlemode="5" name="" orders="2" />
		</node>
		<node orders="3">
			<item orders="3" man="井维宁" manid="00000158" handlemode="6" name="" />
		</node>
		<node orders="4">
			<item name="" handlemode="7" manid="00000318" man="张卫兵" orders="4" />
			<item name="" handlemode="7" manid="00000280" man="张首男" orders="4" />
			<item name="" handlemode="7" manid="00003326" man="尤念军  " orders="4" />
		</node>
	</flow>

	工作流图形到xml描述文档

2. 解决 综合管理-分包管理-变更签证 input页面的问题后续

这个地方的待处理流程能修改数据，在返回时，返回到错误的页面。 ？ bug

3. task 人力资源管理-用工管理-入职管理

的身份证验证存在问题，用过的身份证可以再次存入，原因是取值的表和存入的表不统一。

erp/hr/dutymanager/dao/EmpondutyDao.java

里的 getEmployeeListByIdCard 方法 ，流程通过后才把身份证存入employee表，流程之前把身份证存入t_hr_emponduty表

解决：
	异步查询身份证是否已存在的sql要查询上面两张表，只有两张表的记录都是0时，才返回0 ，
	否则返回1（已被使用）


action处理异步请求的函数：身份证输入框失去焦点时触发

	EmpondutyAction.java
	-------------
	...
		public void checkIdCard(){
			PrintWriter out = null;
			try{
				String idcard = request.getParameter("idcard");
				String id = request.getParameter("id");
				response.setContentType("text/xml");
				response.setCharacterEncoding("UTF-8");
				response.setHeader("Cache-Control","no-cache");
				response.setHeader("Pragma","no-cache");
				out = response.getWriter();
				boolean rs  = new EmpondutyService().checkIdCard(idcard,id);
				if(rs){
					out.println("1");
				}else{
					out.println("0");
				}
				
				out.flush();
			}catch(Exception e){
				e.printStackTrace();
			}finally{
				if(out != null ){
					out.close();
				}
			}
		}
	...
	--------------

done

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day120 2011年2月12日

1. task 把手机短信通讯录从文件（excel文件，后面支持文本文件）导入的实现方式修改为，用
异步发送到服务器读取再返回内容填充到文本域里，这样就绕过安全问题，客户端不需要配置
安全站点或其他设置就能导入本机到页面里

 doing

* jsp页面 sendsmsinput.jsp  

	页面上加个表单，用于提交文件  
		限制待选择文件类型,设置file表单的accept属性
		补充：
			----------
				'ez' => 'application/andrew-inset',  
				'hqx' => 'application/mac-binhex40',  
				'cpt' => 'application/mac-compactpro',  
				'doc' => 'application/msword',  
				'bin' => 'application/octet-stream',  
				'dms' => 'application/octet-stream',  
				'lha' => 'application/octet-stream',  
				'lzh' => 'application/octet-stream',  
				'exe' => 'application/octet-stream',  
				'class' => 'application/octet-stream',  
				'so' => 'application/octet-stream',  
				'dll' => 'application/octet-stream',  
				'oda' => 'application/oda',  
				'pdf' => 'application/pdf',  
				'ai' => 'application/postscript',  
				'eps' => 'application/postscript',  
				'ps' => 'application/postscript',  
				'smi' => 'application/smil',  
				'smil' => 'application/smil',  
				'mif' => 'application/vnd.mif',  
				'xls' => 'application/vnd.ms-excel',  
				'ppt' => 'application/vnd.ms-powerpoint',  
				'wbxml' => 'application/vnd.wap.wbxml',  
				'wmlc' => 'application/vnd.wap.wmlc',  
				'wmlsc' => 'application/vnd.wap.wmlscriptc',  
				'bcpio' => 'application/x-bcpio',  
				'vcd' => 'application/x-cdlink',  
				'pgn' => 'application/x-chess-pgn',  
				'cpio' => 'application/x-cpio',  
				'csh' => 'application/x-csh',  
				'dcr' => 'application/x-director',  
				'dir' => 'application/x-director',  
				'dxr' => 'application/x-director',  
				'dvi' => 'application/x-dvi',  
				'spl' => 'application/x-futuresplash',  
				'gtar' => 'application/x-gtar',  
				'hdf' => 'application/x-hdf',  
				'js' => 'application/x-javascript',  
				'skp' => 'application/x-koan',  
				'skd' => 'application/x-koan',  
				'skt' => 'application/x-koan',  
				'skm' => 'application/x-koan',  
				'latex' => 'application/x-latex',  
				'nc' => 'application/x-netcdf',  
				'cdf' => 'application/x-netcdf',  
				'sh' => 'application/x-sh',  
				'shar' => 'application/x-shar',  
				'swf' => 'application/x-shockwave-flash',  
				'sit' => 'application/x-stuffit',  
				'sv4cpio' => 'application/x-sv4cpio',  
				'sv4crc' => 'application/x-sv4crc',  
				'tar' => 'application/x-tar',  
				'tcl' => 'application/x-tcl',  
				'tex' => 'application/x-tex',  
				'texinfo' => 'application/x-texinfo',  
				'texi' => 'application/x-texinfo',  
				't' => 'application/x-troff',  
				'tr' => 'application/x-troff',  
				'roff' => 'application/x-troff',  
				'man' => 'application/x-troff-man',  
				'me' => 'application/x-troff-me',  
				'ms' => 'application/x-troff-ms',  
				'ustar' => 'application/x-ustar',  
				'src' => 'application/x-wais-source',  
				'xhtml' => 'application/xhtml+xml',  
				'xht' => 'application/xhtml+xml',  
				'zip' => 'application/zip',  
				'au' => 'audio/basic',  
				'snd' => 'audio/basic',  
				'mid' => 'audio/midi',  
				'midi' => 'audio/midi',  
				'kar' => 'audio/midi',  
				'mpga' => 'audio/mpeg',  
				'mp2' => 'audio/mpeg',  
				'mp3' => 'audio/mpeg',  
				'aif' => 'audio/x-aiff',  
				'aiff' => 'audio/x-aiff',  
				'aifc' => 'audio/x-aiff',  
				'm3u' => 'audio/x-mpegurl',  
				'ram' => 'audio/x-pn-realaudio',  
				'rm' => 'audio/x-pn-realaudio',  
				'rpm' => 'audio/x-pn-realaudio-plugin',  
				'ra' => 'audio/x-realaudio',  
				'wav' => 'audio/x-wav',  
				'pdb' => 'chemical/x-pdb',  
				'xyz' => 'chemical/x-xyz',  
				'bmp' => 'image/bmp',  
				'gif' => 'image/gif',  
				'ief' => 'image/ief',  
				'jpeg' => 'image/jpeg',  
				'jpg' => 'image/jpeg',  
				'jpe' => 'image/jpeg',  
				'png' => 'image/png',  
				'tiff' => 'image/tiff',  
				'tif' => 'image/tiff',  
				'djvu' => 'image/vnd.djvu',  
				'djv' => 'image/vnd.djvu',  
				'wbmp' => 'image/vnd.wap.wbmp',  
				'ras' => 'image/x-cmu-raster',  
				'pnm' => 'image/x-portable-anymap',  
				'pbm' => 'image/x-portable-bitmap',  
				'pgm' => 'image/x-portable-graymap',  
				'ppm' => 'image/x-portable-pixmap',  
				'rgb' => 'image/x-rgb',  
				'xbm' => 'image/x-xbitmap',  
				'xpm' => 'image/x-xpixmap',  
				'xwd' => 'image/x-xwindowdump',  
				'igs' => 'model/iges',  
				'iges' => 'model/iges',  
				'msh' => 'model/mesh',  
				'mesh' => 'model/mesh',  
				'silo' => 'model/mesh',  
				'wrl' => 'model/vrml',  
				'vrml' => 'model/vrml',  
				'css' => 'text/css',  
				'html' => 'text/html',  
				'htm' => 'text/html',  
				'asc' => 'text/plain',  
				'txt' => 'text/plain',  
				'rtx' => 'text/richtext',  
				'rtf' => 'text/rtf',  
				'sgml' => 'text/sgml',  
				'sgm' => 'text/sgml',  
				'tsv' => 'text/tab-separated-values',  
				'wml' => 'text/vnd.wap.wml',  
				'wmls' => 'text/vnd.wap.wmlscript',  
				'etx' => 'text/x-setext',  
				'xsl' => 'text/xml',  
				'xml' => 'text/xml',  
				'mpeg' => 'video/mpeg',  
				'mpg' => 'video/mpeg',  
				'mpe' => 'video/mpeg',  
				'qt' => 'video/quicktime',  
				'mov' => 'video/quicktime',  
				'mxu' => 'video/vnd.mpegurl',  
				'avi' => 'video/x-msvideo',  
				'movie' => 'video/x-sgi-movie',  
				'ice' => 'x-conference/x-cooltalk',  
			----------

	系统附件部分代码：/common/uploadfiledetail.jsp					【系统 附件】

* SendSmsAction 里处理异步提交的文件，并以文本返回给页面
* 导入的异步过程 在旁边用一个等待图表来显示 正在处理。。。 ，增强用户体验 ；ajax的好处
   利用系统里已有的ajax方法来发送和接受请求。

	参考：入职管理中 身份证验证的异步请求  day107第二条 line 11032

	—— 美化步骤最后做



这个功能改为把文件上传到服务器，再写回到表单中 （绕过js安全问题，客户端少配置 【设计】）                                                                                 
故把代码备份下：

	--------------
		/*
		 * 读取excel文件内容到表单域
		 * excel文件内容格式为2列多行
		 */		
		function readFromExcel(){ 
			var sendStr = ""; 
			var filePath= document.all.upfile.value; 
			var oXL = new ActiveXObject("Excel.application"); //步骤1 ：生成ActiveX对象，通过它来操作本地excel
			//alert(oXL);
			if(filePath == "") {
				alert("请选择要导入的文件");
				return false;
			}
			try{
				var oWB = oXL.Workbooks.open(filePath); //打开excel
			}catch(e){
				alert("文件读取错误，请正确选择文件");
				return false;
			}
			oWB.worksheets(1).select(); //选择sheet
			var oSheet = oWB.ActiveSheet; 
			var rows = oSheet.usedrange.rows.count;//记录的行数
			try{ 
				for(var i=1;i<rows;i++){ 
					//alert(oSheet.Cells(2,2).value);
					if(oSheet.Cells(i+1,1).value =="null" || oSheet.Cells(i+1,2).value =="null" ) break; //处理不符合要求的记录
					var temp=oSheet.Cells(i+1,1).value+":"+oSheet.Cells(i+1,2).value+",";
					sendStr+=temp;
				} 
			}catch(e){ 
				alert(e); 
				document.all("inputname").value = sendStr; 
			} 
				document.all("inputname").value = sendStr; 
				oXL.Quit(); 
				CollectGarbage(); 
			//隐藏文件域
			document.getElementById("importSpan").style.display="none"; 73012589556214123
		}
	--------------



2. 调试 倒查法 【调试 方法】 
现在，知道一个操作调用的dao层是哪个方法，要找到有哪些action会调用，



3. 使用反射时，修改类要注意的地方，修改各层代码要注意的地方


补充：					【java 反射】

		反射其实就是程序能够自检查自身信息。就像程序会照镜子反光看自己。
	在程序中可以检查某个类中的方法属性等信息，并且能够动态调用。
	这样可以写出很灵活的程序。
	比如要把一个对象中的数据copy到另外一个对象中，规则是属性名相同就copy，
	就可以用反射来做，不需要指定每个属性的名字，只要动态从类中取得信息，
	再判断属性名是否相同即可。当然应用还有很多。

		反射可以结合Java的字节码，使用ASM和cglib等库，还能动态生成类。
	hibernate的延迟载入，spring的AOP都是这么实现的

		反射给Java带来了一些动态性。不过虽然很好，但毕竟还是有一定局限性的。
	另外ASM，cglib使用还是不放便。因此一些纯动态语言现在是一个重要发展趋势，
	比如ruby，python等，程序很容易动态生成。

	来自：http://zhidao.baidu.com/question/64096531.html
	



4. myeclipse6.5的自动提示 快捷设置 输入提示 content assit
在 keys 里面 的content assist 里配置 （when editing text）





5. task 把 员工管理 里面的身份证验证以及主职/兼职中主职只能有一个的要求完善下，查找入职管理部分  ？

doing

页面：erp/hr/employee/employeeinput.jsp

身份证验证 完成
主职/兼职 验证 
	先定位表，再得到每个行，得到每个行的第一个radio对象，再判断是否checked


6.  js 调试 【js 调试 错误】
js如果错了，即时这个方法没有被调用，它也会报错，还可能导致其他js函数不能正常执行。

for(int i=0;i<3;i++){
	...
}
上面js代码错在哪里？  

js是没有int变量类型的，和java混淆了 ，呵呵 

js的报错也太不友好，居然报 缺少 " ; "  

下面才是对的：
for(var i=0;i<3;i++){
	...
}

上面是通过一段段注释来定位错误的位置的。 /* */ ,范围从大到小 




7. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 121 2011年2月14日

1. day120第一条



2. 取 iframe 里面的元素    【iframe 取值，frame 取值】

var collAll = document.frames("IFrame1").document.all


var frame = document.all("hiddenframe");

		alert(frame.document.all("f2"));//记住，iframe ！= document ，document是iframe的一个子节点 



【访问iframe 读取iframe 元素 js access iframe element 】 
参考 ：http://www.webmasterworld.com/forum91/299.htm

-------------
Hi all, 

Thanks for all your suggestions. As per ricfinks suggestion I used the window.frames[] syntax and this is working perfectly now: 

window.frames[0].document.getelementById('daLink').style.backgroundColor="#000"; 



I'm not sure why trying to get at it using getelementById didn't work, as (like ricfink) I thought that an iframe lived both in the Frames array and the Id array. 

DrDoc, both background and backgroundColor work sine (in IE) - does anyone know which is the W3C standard for this?
-------------


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day122 2011年2月15日

1. 分析网络上其他网站的异步上传文件例子

										【myeclipse 可视化编辑 网页 html】


【html 元素的 onreadystatechange event 对象，readyState 属性】

用html自带的 submit 提交，可以 用标签对象的 onreadystatechange 事件来获得提交的状态信息，从而实现提醒。

html 对象的 readyState 属性


补充：

		html 对象还有不少属性 ，事件，方法(appendChild,removChild..)等等，将这些基础东西再结合js脚本等其他技术就可以方便的
	构建B/S架构的富客户端应用。
		
		
如：
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	readyState Property  
	--------------------------------------------------------------------------------

	Retrieves a value that indicates the current state of the object.

	Syntax

	HTML N/A 
	Scripting [ sState = ] object.readyState 

	Possible Values

	sState String that receives one of the following values.uninitialized Object is not initialized with data. 
		loading Object is loading its data. // 正在加载...
		loaded Object has finished loading its data. // 加载完成
		interactive User can interact with the object even though it is not fully loaded. // 交互（没有完全加载完成时也可进行）
		complete Object is completely initialized.// 初始化完成 
	 

	The property is read-only. The property has no default value.


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

* 通过innerHTML ，等属性动态改变html对象

通过iframe异步请求，来请求新的页面内容（不只是一点字符串），可以通过 iframe的onreadystatechange事件来触发处理响应结束
逻辑，也可以在返回的页面代码里，执行js，来更新当前请求页面的内容。

部分代码如下（利用隐藏iframe实现异步页面更新）：tosendcheckevaluation.jsp页面

-------
...
	主页面执行（当前发出异步请求的页面）：

	<iframe name="myframe" style="display:"";" src="" onReadyStateChange="setTemplet();"></iframe>

	...

	function setTemplet(){
		if(theframe.readyState == "complete"){
			alert("complete");
			document.getElementById("tdevaltemplet").innerHTML = theframe.document.documentElement.innerHTML;
		}
	}
	...
	返回的请求页面执行（异步请求返回的页面）

	function initdiv(){
		alert(1);
		//parent.document.getElementById("tdevaltemplet").innerHTML = document.documentElement.innerHTML; // ----这种document.documentElement.innerHTML取法，把整个返回内容都取到了，用下面的方式，只取div里的html
		parent.document.getElementById("tdevaltemplet").innerHTML = document.all("mydiv").innerHTML;
		alert("done");
	}
	initdiv();	
...
-------




2. js 代码编写 【js 编码 注意 小节】

js 在操作对象前，做好对象是否存在的判断。


js 事件 ，下面是绑定事件（带参数的例子）
	 alert(window.frames['check_file_frame'].attachEvent('onreadystatechange',function(){ajax_callback(this)}));

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day123 2011年2月16日

1.  处理五洋新问题
详见：E:\resource\doc\五洋系统问题 里的doc文档 （2个问题）

* 系统2级返回功能的调用 

	再次熟悉系统的返回功能机制。

* 高级查询配置 种类
	1）直接用户输入的，比如name等
	2）由数字字典来的
	3）特殊数据，比如机构选择，需要单独配置一个按钮，方便选择机构

从处理问题，发现系统里有些高级查询的配置是错误的，需要再测试下的 ？

2. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day124 2011年2月17日


1. myeclisp 【myeclipse 项目 错误 红叉】
项目出现红叉有多种原因，代码错误，编译环境配置错误（如jar包错误）。还有一种就是其他原因导致的错误
，可以将项目 clean（project -> clean） 一下一般就解决了



2.  html 属性 方法 js 延时 【html 对象 可编辑】

CONTENTEDITABLE Attribute | contentEditable Property   设置对象是否可编辑

setTimeout("alert(1);",2000) //


input type=file 的值不能重置 ，这样 ....value = "" 是不行的，出于安全考虑 ；设想通过 【文件选择框 重置】
把这个file表单去掉，重新insert一个一样的新的file ，innerHTML ,removeChild()

js 的 try catch ,捕获错误 【js 错误】

	------------
	...
		try{	
			...	
		}catch( e ){
			alert(e.description); //捕捉并打印错误信息
		}
	...
	-------------

js 删除节点 node

	----------
	...
	try{
		file.parentNode.removeChild(file); // 通过取得父节点，再删除子节点的方式，删除特定节点（元素，对象） HTML JS
	}catch(x){
		alert(x.description);
	}
	...
	----------

3. js 调试  【js 调试 技巧】

- 利用try catch 来捕获整个 function的错误，以便提示 ；

- 利用一些基础调试库来简化js的调试

补充：
	经常要调试js的话，可以搜集整理下调试js的技巧和方法。代码，编程 是越写越熟练，越有效率。。。



4. 通过手机短信的通讯录导入功能 熟悉了伪装ajax上传文件 【iframe 伪ajax】

	通过 file 表单的onchange事件，调用处理函数，把之前的表单对象缓存起来，再修改表单的action和target，把target修改到一个隐藏
的iframe上，这样表单提交并不刷新整个页面，事先在iframe上绑定 onreadystatechange 事件，当服务器返回数据到这个iframe时，调用
onreadystatechange 绑定的方法，这个方法取到服务器返回的结果，再做相应的逻辑处理。onreadystatechange 事件对应对象的几种
状态，可以对此做更细致的处理（类似ajax的xmlhttprequest对象）

js代码如下：
	---------
		<script type="text/javascript">
		/*******************
		 *处理通讯录文件导入代码
		 *******************/ 
		var flag = false;
		var fileForm = new Object();
		var frame = window.frames['subframe'];
		var file = "<input type=\"file\" name=\"addressBookFile\" id=\"SendSms_send_addressBookFile\" class=\"inputcss\" style=\"width:3em;\" onchange=\"sendAddressBook(this);\"/>";
			
		function importExcel(){
			var span=document.getElementById("importSpan");
			span.style.display = "";
		} 

		function sendAddressBook(fileObj) {
			try{
				document.all("inputname").value = "";
				flag = true;
				if(fileObj.value != "") {
				var form = document.forms['f1'];
				
				//把form的原始数据缓存起来
				fileForm.f = form;
				fileForm.a = form.getAttribute("action");  //form.action 为一个静态的对象，所以这里要使用getAttribute方法取值
				fileForm.t = form.target;
				
				//请求服务器端
				form.target = "subframe";
				form.action = "<%=request.getContextPath()%>/oa/SendSms_readAddressBookFile.action";
				form.submit(); //其实上面的action已经会执行submit操作，这步可有可无
			  }
				var div = document.getElementById("imgPosition");
				var img = "<img src='<%=request.getContextPath()%>/upfile/ajax-loader.gif' title='正在加载...'/>";
				div.innerHTML = img;
				fileObj.value = "";
			  }catch(e){
				//alert("sendAddressBook error :"+e.description);
			  }
			return false;
		}

		function ajax_callback(result) {
			try{
			  if(!flag || result == null){return;}
			  var div = document.getElementById("imgPosition");
			  div.innerHTML = "";
			  if(result.readyState == "complete"){
				var imgsuccess = "<img src='<%=request.getContextPath()%>/upfile/ico_success.gif' title='加载完成' style='height:1.5em;'/>";
				var imgerror = "<img src='<%=request.getContextPath()%>/upfile/ico_error.GIF' title='文件读取错误，请重新选择' style='height:1.5em;'/>";
				var data = window.frames['subframe'].document.getElementById("data")
				if(data != null && data != "undefined"){
					div.innerHTML = imgsuccess;
					document.all("inputname").value = data.innerText;
				}else{
					div.innerHTML = imgerror;
				}
				realfile = document.all("addressBookFile");
				if(realfile == null || realfile == "undefined")return;
				var parent = realfile.parentNode;
				parent.removeChild(realfile);
				parent.innerHTML = file + parent.innerHTML;
			  }
			  //还原form属性
				fileForm.f.target = fileForm.t;
				fileForm.f.setAttribute("action", fileForm.a);
			  }catch(e){
				alert("ajax_callback error :"+e.description);
			  }
			return ;
		} 

		</script>
	---------

5. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 125 2011年2月18日

1. 给手机短信页面加上 js 验证  【系统 常用js 通用js】

	系统的script文件夹里，有些js是通用的，可以去看看，不用每个都去重新写。统一管理，增加代码复用。
比如：utils.js里的 out_excel(filename,url) 就是读取本地excel的函数，etc


补充：
	stringObj.replace(rgExp, replaceText) // js字符串替换

	js 去除空格 ：
		str为要去除空格的字符串:

		去除所有空格:   
		str   =   str.replace(/\s+/g,"");       
		去除两头空格:   
		str   =   str.replace(/^\s+|\s+$/g,"");

		去除左空格：

		str=str.replace( /^\s*/, '');

		去除右空格：

		str=str.replace(/(\s*$)/g, "");




2. 继上次提交后的内容，做一个 doc 文档  ，用于升级



3. 插件配置 空指针问题  ？ init.prporties 文件 

某些时候，加入插件配置，点击修改时，报空指针错误 ，原因之一在于下面代码：
PluginsetAction 的 doupdate 方法
	-----------
	...
		out = new FileOutputStream(u.getFile()); 
		input = Thread.currentThread().getContextClassLoader().getResourceAsStream("init.properties");  // getContextClassLoader() 方法会报异常
													//SecurityException if a security manager exists and its checkPermission method doesn't allow getting the context ClassLoader. 
		Properties prop = new Properties(); 
	...
	-----------

上面会因为安全问题，导致input为null 

解决：
		上面是 在某个类里 用 Thread.currentThread().getContextClassLoader() 来获得上下文的加载器报的安全问题，这个类没有
	足够的权限来访问上下文的加载器，改为 PluginsetAction.class.getClassLoader().getResourceAsStream("init.properties"); 从本类来
	获得类加载器。
补充：
	上面获得类加载器，还可以这样 this.class.getClassLoader() 但这个不好，因为this的话，需要先实例化。


4. 主职 唯一选择问题 line 12009

那个职位列别是放在隐藏表格里的，不要误解。

5. java 安全 【java 安全 问题】 看上面的第 3 条


6. js 代码也要注重重用 
比如下面：
	-------------
	...
		if(name2 != null || name2 != ""){
			name2 = name2.replace("，",",");
			name2 = name2.replace("：",":");
			var namelist = name2.split(",");
			var isvalid = false;
			var length = namelist.length;
			for(var i=0;i<length;i++){
				var mobilenum = namelist[i].split(":");
				if(mobilenum.length == 1){
					if(mobilenum[0] != null && mobilenum[0] != ""){
						var num = mobilenum[0].replace("/^\s+|\s+$/g","");//去掉左右空格
						if(num != null && num != "" && !validatemobile(num)){
							return false;
						}
					}				
				}else if(mobilenum.length == 2){
					if(mobilenum[1] != null && mobilenum[1] != ""){
						var num = mobilenum[1].replace("/^\s+|\s+$/g","");//去掉左右空格
						if(num != null && num != "" && !validatemobile(num)){
							return false;
						}
					}
				}else{
					continue;
				}
			}
		}
	...
	-------------

	通用的检测是否为空的函数：
	utils.js
	---------
	...
		function CheckIsEmpty( str ) // 不为空返回 false
		{	
			return( (str==null)||(str == "") )
		}
	...
	----------

		看上面，有多个地方用到判断一个对象是否为null或者空，这样判断基础要用的，可以用一个函数代替，这样，代码量少了
	也清晰多了。
		而且，从全局来看，应该设计一个js文件，专门来放这些通用的代码，有一套代码库。好的系统，这点是必须的。集中管理。
	我们系统的 utils.js就是一个例子。
		好代码是花了心思的，不是能用就行。写的多了，就想到要写的好了，写的精干了。

		从上面的思路，就可以想象为上面会出js的各种库了（jquery，prototype 等等），都是尽量的简化js的编写，提供尽可能多
	通用逻辑，也方便扩展（比如jquery库，就是以插件丰富）。回过头来，我们系统，可以考虑用一些简单的js库，或者自己写
	一些，后续的开发也从这个库触发，这样js的编码就可以相对统一一些，减少代码的冗余。 【系统 建议】
		再从纵深来看，系统用的struts ，hibernate 等框架，无不体现代码重用，统一风格等特点，比如struts 表单提交，文件上传等
	每个项目都需要用的，大部分逻辑是相同的这部分代码都集成到框架里，我们直接调用，再做个性化的处理即可。
		关键是思想，不要重复发明轮子。

		框架也许不尽是好的，要学习好的，用的系统里。

		比如：document.getElementById(str) --------- 简化为 ${} 

	【技巧 经验 js 编码】
	
	

7.  详细列表页面 表格 的获取

<table width="100%" border="0" align="center" name="t_dutypost" cellpadding="2" cellspacing="1" class="td_list_border">
	<tbody id="tbl">


注意：系统里 tbody的id 是 tbl ,后面是 L 不是 一 。


主职唯一 js 验证逻辑系统已经有了，需在提交时触发。 看下子 ？

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day126 2011年2月21日

1. 五洋系统升级问题

2. 打包开发环境







+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day127 
nanj

1. 配环境
cvs 账号
CVS服务器用域名不用网址
数据库用服务器的数据库，配置从hibernate的配置文件中

sql客户端连接数据库地址 192.168.20.17 ，直接在服务器选择里输入即可 ，连接zhhx_test数据库

解压tomcat，在myeclipse里配置tomcat（配置jre路径），部署，运行，

系统账户 cyshen e.....0

设置项目debug开发模式 及 hibernate的sql格式化输出，便于调试。 （struts.xml 及hibernate的配置文件）



2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 128 2011年2月23日星期三

1. myeclipse 注册生成代码的编译环境用5.0，用6.0会报：
java.lang.UnsupportedClassVersionError: Bad version number in .class file

这个是Java编译器版本问题



2. 录入数据 ，文档在 
	D:\Program Files\Tencent\QQ\Users\516610260\FileRecv\文件分发单

从序号 1 开始录入，红色为后面的数据以录好

入口：http://218.94.159.38/zhhxpm/sys/Login_dologin.action zhhx e_0

位置：办公自动化-公文处理-内部文件处理-文件分发记录单维护


从提供的excel文档看所属部门，找到后，进入详细信息页面，录入数据（注意序号：以已录入的序号为参考，格式参考）。

可以在员工休息离查询人员所属机构位置（机构+人名不重）

3. 

id		employeeid	username	password	realname	theme	state	companyid	createdate	lastdate	lastemployeeid
00003212	00003212	321081680822752	f379eaf3c831b04de153469d1bec345e	杨青	theme03	1	402881ed2196419c01219648603b000f	2009-07-03 00:00:00.000	NULL	NULL


一个账号登陆后，直接new一个登陆过的窗口，它们的session是一样的，2个页面会相互影响；打开不同的浏览器窗口，再分别用
同一个账号登陆即可。 【录入】 规律  ，效率，

系统找人特点 ，名字按照字母排列，根据所在机构查询，没有子机构就在总机构上。


4. 用sql操作编码增减

update t_oa_gwffdweihusub set ordernum = ordernum + 12 where id in(
	select * from t_oa_gwffdweihusub where pid='4028949f278ed0c10127934add000462' and ordernum = 1 and ordernum > 1
)


录入数据的数据库是 zhhx ，不是 zhhx_test 

陈建宏,陈清华,赵巧玲,周克军,李建华,钱后龙,姜植国,张东升,鱼剑英

从后台批量校正数据。

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day129 2011年2月24日星期四

1. 实在的



2. 
hx
 http://192.168.20.229:8080/zhhxpm
zhhx 666666

中冶天工
 http://192.168.20.233:8085/zytg/
manager、88888


资质要求的基本功能点，模块


3. workflow 【系统 流程 配置】zb

参考：
添加流程：
	1、修改list列表的查询语句，增加流程状态的查询；
	2、修改list页面，增加流程状态列，并且使第一列的checkbox根据流程状态变化；
	3、创建流程发送页面，其实和view页面同样；
	4、在相应的Action里写点击“流程发送”按钮和“发送”按钮触发的方法；
	5、menuset-config.xml里有的“流程绑定”菜单，放开使用功能；
	6、在erp/oa/table的路径下创建t_pm_tbname_view.jsp页面；
	7、到com.erp.oa.archives.action.SendarchivesAction里的loadinfo（）方法里添加相应的业务逻辑；



4. cvs chengs cshen123 20.15 
导入hx2.0系统 ，lib库通过添加jars导入。 部署的时候注意web项目名不要重复。

zhhx	666666
5. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day130 2011年2月25日星期五

1. 测试 demo系统2.0（2.0-本地cvs系统）测试服务器
根据需求文档，记录测试文档
数据库：192.168.20.33/zhhx

demo 里数据库的id编码不一致。


2. 看安全模块的需求doc、


3. 协助




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day131 2011年2月26日星期六
加

1. 以20.17数据库为准


2. 对于js后面用jquery实现

3. java.lang.LinkageError

造成以上异常的主要原因的是jsp解析包冲突，不知道用哪个jar包进行解析。 




day131.5


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day132 2011年2月28日星期一


1. struts2 自动装配action属性 之 对象数组
	------------------
	...
		<s:iterator value="hms" status="s" id="z">
		<tr height="22" class="td_list_background0" onmouseover="overrow(this)" onmouseout="outrow(this,0)" onclick="selectRow(this)">
			<td class="input_table_title" nowrap><input type="hidden" name="dutyposts[<s:property value='%{#s.index}'/>].seq"/></td>
			<td nowrap>
			 <input type="hidden" name="dutyposts[<s:property value='%{#s.index}'/>].id" value="<s:property value='hms[#s.index].id'/>" />
			 <input type="hidden" name="dutyposts[<s:property value='%{#s.index}'/>].dutyorgid"  
			 value="<s:property value='hms[#s.index].dutyorgid'/>"/>
			 
			 <input  name="dutyposts[<s:property value='%{#s.index}'/>].dutyorgname"
			  value="<s:property value='hms[#s.index].dutyorgname'/>" readonly class="inputcss"  style="padding-right:22px;"/>
			 <img src="<eb:img file='icon_select.gif'/>"  
			onClick="getOrg('dutyposts[<s:property value="%{#s.index}"/>].dutyorgid','dutyposts[<s:property 
			value="%{#s.index}"/>].dutyorgname')"  class="input_list_img"/>
			</td>
			<td  nowrap>
			 <input type="hidden" name="dutyposts[<s:property value='%{#s.index}'/>].dutypost"  
			   value="<s:property value='hms[#s.index].dutypost'/>"/>
			 <input name="dutyposts[<s:property value='%{#s.index}'/>].dutypostname"
			  value="<s:property value='hms[#s.index].dutypostname'/>" readonly class="inputcss"  style="padding-right:22px;"/>
			   <img src="<eb:img file='icon_select.gif'/>" 
				onClick="getPost('dutyposts[<s:property value="%{#s.index}"/>].dutypost','dutyposts[<s:property value="%{#s.index}"/>].dutypostname')" class="input_list_img"/>
			</td>
			<td  nowrap>
			<s:radio  name="dutyposts[%{#s.index}].status"  value="hms[#s.index].status"  list="#{'1':'主职', '0':'兼职'}" />
			</td>
		</tr>
		</s:iterator>
		   
	  </tbody>
	</TABLE>
			

	</s:form>

	<table id="templeteid" style="display:none"><!--该table放在form外面，避免提交时候算数据-->
	   <tr height="22" class="td_list_background0" onmouseover="overrow(this)" onmouseout="outrow(this,0)" onclick="selectRow(this)">
			<td class="input_table_title" nowrap><input type="hidden" name="dutyposts[@sn].seq"/></td>
			<td nowrap>
			  <input type="hidden" name="dutyposts[@sn].id"  />	
			  <input type="hidden" name="dutyposts[@sn].dutyorgid"   />
			  <input name="dutyposts[@sn].dutyorgname" readonly class="inputcss" style="padding-right:22px;"/>
			  <img src="<eb:img file='icon_select.gif'/>"  class="input_list_img" onClick="getOrg('dutyposts[@sn].dutyorgid','dutyposts[@sn].dutyorgname')" />
			</td>
			<td  nowrap>
			   <input type="hidden" name="dutyposts[@sn].dutypost"   />
			   <input name="dutyposts[@sn].dutypostname" readonly class="inputcss" style="padding-right:22px;"/>
			   <img src="<eb:img file='icon_select.gif'/>" class="input_list_img"
				onClick="getPost('dutyposts[@sn].dutypost','dutyposts[@sn].dutypostname')" />
			</td>
			<td  nowrap>
			<s:radio name="dutyposts[@sn].status" 	 list="#{'1':'主职', '0':'兼职'}"   value="0"  />
			</td>
		</tr>
	</table>
	...
	------------------
	这里对象数组的下标设置好，struts会自动set进去（拦截器的工作）。


jsp里的用jstl实现for循环（不是对对象遍历）：
	<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
	<c:forEach var="i" begin="1" end="10" step="1">
	  ${i}
	</c:forEach>
	这要引入jstl的jar包


2. 中冶天工代码 ，数据库 ，cvs账号  

参考ZYTG 下载模块
jhe 888888 ERP-PM-GROUP-ZYTG-2009.1 
少 xfire 的jar包，到网上下载。

配置hibernate

补充：
	* 导入功能方便录入大量数据 （比如：综合管理-成本管理-成本预算 的数据导入）—— 从这个导入功能，我们不少
功能可以做的更好，更方便实际应用（易用）。
	* 


3. <s:select 标签 ，—— 取不到值，是不是2个对象长的太像了 ？
<s:select  name="material.wzlb"  cssClass="disableinput" list="#dict.getDictvalueList2('t_pm_wzlb')" 
               listKey="id"  listValue="name" value="%{material.wzlb}"   required="true"   headerKey=""  headerValue="--请选择--"/>


4. 收取ebuilds邮件  

参考 中南项目 

http://office.zhongnangroup.cn/pm/index.jsp?roleid=6 jsb 111 
总承包PM - 经营管理 - 选择上面的链接 进入子模块，与wyjs的子链接在左边大树上不同。

原型设计，开发



5. 在 本地cvs上开发 20.33 zhhx


6. 从协同门户-个人助理-个人信息 整理验证框架

validation-oa.xml - 把验证配置安模块合并一起配置
empshinput.jsp

radio的验证 ，系统通过设置默认值来实现必选。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day133 2011年3月1日星期二


1. myeclipse 可以让项目增加各种功能 ，比如 web 项目 ，xfire ，jstl ，hibernate ，struts 等等。

2. zhhx系统 - 投标工程流程  

-> 发起审批 http://localhost:8080/zhhxpm2.0/pm/Bid_toSendCheck.action?id=4028946a2e750092012e751903f60003
	BidAction 的 toSendCheck 方法 ，投标 id 

	select * from t_pm_project_bid where id = '4028946a2e750092012e751903f60003' -- 查询投标信息表




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day134 2011年3月2日星期三

1. 下载 zhhxpmv_demo 原型 开发 投标管理等模块

仿照中南功能内容，按照demo原型的风格先做菜单，页面

初步：
	- 配置菜单树 （配置上权限显示树-如果没配就能看到可能是权限重复）
	- 建立并命名Action 
	- 配置Action （简单配置） struts-pm.xml
	- 建jsp页面(input ,view ,list)



---- action ，jsp------
#
客户信息 ： CustomInfoAction              -------------- 参照项目管理-基本信息 里面的客户信息 customerinput.jsp
客户信息查询： CustomInfoSearchAction
项目跟踪评审： ProjectFollowEvaluationAction

#
招标文件评审： InviteBidEvaluationAction
技术标评审： TechBidEvaluationAction
商务标评审评审： CommerceBidEvaluationAction
投标信息备案： EnterBidRecordAction
	开标结果分析列表页面: openbidresultanalyzelist.jsp --------- OpenBidResultAnalyzeAction
		开标结果分析inpu页面: openbidresultanalyzeinput.jsp
		开标结果分析查看页面: openbidresultanalyzeview.jsp
	保证金回收：depositetrieveview.jsp +  input --------------- DepositRetrieveAction
	投标小节：enterbidsummarizeview.jsp + input ---------------- EnterBidSummarizeAction


///// 

	<action class="com.erp.pm.bid.action.CustomInfoAction" method="{1}" name="CustomInfo_*">
		<result name="view">/erp/pm/bid/custominfoview.jsp</result>
		<result name="input">/erp/pm/bid/custominfoinput.jsp</result>
		<result name="list">/erp/pm/bid/custominfolist.jsp</result>
		<result type="redirect-action">CustomInfo_list?back=1</result>
	</action>
	
	<action class="com.erp.pm.bid.action.CustomInfoSearchAction" method="{1}" name="CustomInfoSearch_*">
		<result name="view">/erp/pm/bid/custominfosearchview.jsp</result>
		<result name="input">/erp/pm/bid/custominfosearchinput.jsp</result>
		<result name="list">/erp/pm/bid/custominfosearchlist.jsp</result>
		<result type="redirect-action">CustomInfoSearch_list?back=1</result>
	</action>

	<action class="com.erp.pm.bid.action.EnterBidRecordAction" method="{1}" name="EnterBidRecord_*">
		<result name="view">/erp/pm/bid/enterbidrecordview.jsp</result>
		<result name="input">/erp/pm/bid/enterbidrecordinput.jsp</result>
		<result name="list">/erp/pm/bid/enterbidrecordlist.jsp</result>
		<result type="redirect-action">EnterBidRecord_list?back=1</result>
	</action>

	<action class="com.erp.pm.bid.action.InviteBidEvaluationAction" method="{1}" name="InviteBidEvaluation_*">
		<result name="view">/erp/pm/bid/invitebidevaluationview.jsp</result>
		<result name="input">/erp/pm/bid/invitebidevaluationinput.jsp</result>
		<result name="list">/erp/pm/bid/invitebidevaluationlist.jsp</result>
		<result type="redirect-action">InviteBidEvaluation_list?back=1</result>
	</action>
	
	<action class="com.erp.pm.bid.action.ProjectFollowEvaluationAction" method="{1}" name="ProjectFollowEvaluation_*">
		<result name="view">/erp/pm/bid/projectfollowevaluationview.jsp</result>
		<result name="input">/erp/pm/bid/projectfollowevaluationinput.jsp</result>
		<result name="list">/erp/pm/bid/projectfollowevaluationlist.jsp</result>
		<result type="redirect-action">ProjectFollowEvaluation_list?back=1</result>
	</action>	

	<action class="com.erp.pm.bid.action.CommerceBidEvaluationAction" method="{1}" name="CommerceBidEvaluation_*">
		<result name="view">/erp/pm/bid/commercebidevaluationview.jsp</result>
		<result name="input">/erp/pm/bid/commercebidevaluationinput.jsp</result>
		<result name="list">/erp/pm/bid/commercebidevaluationlist.jsp</result>
		<result type="redirect-action">CommerceBidEvaluation_list?back=1</result>
	</action>	

	<action class="com.erp.pm.bid.action.TechBidEvaluationAction" method="{1}" name="TechBidEvaluation_*">
		<result name="view">/erp/pm/bid/techbidevaluationview.jsp</result>
		<result name="input">/erp/pm/bid/techbidevaluationinput.jsp</result>
		<result name="list">/erp/pm/bid/techbidevaluationlist.jsp</result>
		<result type="redirect-action">TechBidEvaluation_list?back=1</result>
	</action>

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day135 2011年3月3日星期四

1.  招投标

css样式从style.css里去找 ，
disableinput4  96% 宽度

本系统业务 ：招标文件 有 技术标，和商务标

投标/招标和工程挂钩


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day136 2011年3月4日星期五

1. 整理必填字段


* 客户信息页面 - 参考 项目管理-基本信息下的客户信息

2. 提交代码




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day137 2011年3月7日星期一

1. 原型就直接用jsp页面来表示，主要是呈现表单需求，功能页面的简单示例查看，方便后续开发。

2. 招投标管理的业务需求分析 —— 从业务需求到系统功能的体现

招投标作为一个子系统开发

3. 根据今天的doc（中核华兴材料设备供应商管理需求确认报告.doc） ，设计供应商模块的原型 （供应商管理(供应商提供材料，设备等)）

菜单配置：
	在招投标管理系统里面，加入供应商管理菜单，具体菜单如下：

	- 供应商管理 provider manager  ——————放到bid下的 provider 目录里
		- 零星采购供应商 fragmental provider
			list	fragmentalproviderlist.jsp
			view
			input
		- 集中采购供应商 
			- 合格供应商 qualified priovider
				list	qualifiedprioviderlist.jsp
				view
				input
			- 不合格供应商 unqualified priovider
				list	unqualifiedprioviderlist.jsp
				 view 
			- 证照逾期供应商 overdue provider
				list	overdueproviderlist.jsp
				input / view 同上
		- 供应商效果评价 provider evaluation
			list	providerevaluationlist.jsp
			view 做为list页的一部分，点击list从下方显示。参考中南


参照 fbjhinput.jsp  ， fbjhlist.jsp ， fbjhview.jsp 3个页面做出一个原型，后续在此基础上修改（套用各种表单元素）。【原型开发】 出样子 ，根据原型再细化表单样式等的具体需求，最后定版开发，是客户和开发交流的系统中间产物。这里，对于各种原型用的到得表单元素，样式，效果等最好都有例子代码(比如 select checkbox radio等)，方便快速开发原型。（直接用jsp）

开发时，依据原型用动态内容替换表单等，并开发逻辑层等代码。

	<menu  id="5"  parentid="0" name="供应商管理" icon="icon_sfw.gif" url="javascript:openFolder(24.1)"/>
		<menu  id="5.1" parentid="5" rightid="3.2.2.1" name="零星采购供应商" url="/erp/pm/bid/provider/fragmentalproviderlist.jsp"/>
		<menu  id="5.2" parentid="5" rightid="3.2.2.1" name="集中采购供应商" url="javascript:openFolder(5.2)"/>
			<menu  id="5.2.1" parentid="5.2" rightid="3.2.2.1" name="合格供应商" url="/erp/pm/bid/provider/qualifiedprioviderlist.jsp"/>
			<menu  id="5.2.2" parentid="5.2" rightid="3.2.2.1" name="不合格供应商" url="/erp/pm/bid/provider/unqualifiedprioviderlist.jsp"/>
			<menu  id="5.2.3" parentid="5.2" rightid="3.2.2.1" name="证照逾期供应商" url="/erp/pm/bid/provider/overdueproviderlist.jsp"/>
    	<menu  id="5.3" parentid="5" rightid="3.2.2.1" name="供应商效果评价" url="/erp/pm/bid/provider/providerevaluationlist.jsp"/>

星级评价参考中南分包管理-星级评定  【星级评定 评价】

供应商评分系统说明：

	* 供应商通过评审流程后，进入合格供应商；证照过期提示更新但还属于合格供应商
	* 各部门分别依据自己的评分标准对供应商打分，最后都换算为百分制，得出综合分，从而评出星级
		综合分的权重，按部门均分（只有1个部门评，它就是100%，2个部门评了就各自50%，依次类推），再到各部门自己的
		评分，可以自定义自己的评分标准，但最后都换算为各自部门的权重分来得出综合分。
	* 各部门可以看到自己及其他部门的打分情况，可以参部门自己的评分结果或者综合分结果来判断是否用此供应商
	* 使用时，可以根据综合得分来排列，从而方便选择综合分高的供应商
	* 如何保存评分历史记录的问题 ？

供应商 ，供应类别的划分确定 ？方便按类别查找供应商。 ？

	材料 和 设备 统一放到一个数据字典中维护（数据字典里再划分材料和设备）


4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day138 2011年3月8日

1.  开会 ，配置开发环境 ，


2. 整理合同管理原型 + 整理剩下的供应商管理原型

合同管理原型（在综合项目管理中）：

- 合同管理原型
	- 合同洽商 contract palaver	contract palaverlist.jsp				-- done
	- 合同评审 contract evaluation		contractevaluationlist.jsp			-- done
	- 合同签订 contract conclude and sign	contractconcludeandsignlist.jsp
	- 合同交底 contract transfer		contracttransferlist.jsp			-- done
	- 合同履行 contract implement
	- 合同变更 contract vary		contractvarylist.jsp
	- 合同结算 contract  final calculation
		- 月度结算  contract  final calculation by month		contractfinalcalculationbymonth.jsp
		- 竣工结算  contract  final calculation		contractfinalcalculation.jsp


		<menu  id="22"  parentid="0"  name="合同管理原型" icon="icon_zyk.gif"/>  
			<menu  id="22.1"  parentid="22" name="合同洽商" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractpalaverlist.jsp"/>
	      	<menu  id="22.2"  parentid="22" name="合同评审" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractevaluationlist.jsp"/>
	      	<menu  id="22.3"  parentid="22" name="合同签订" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractconcludeandsignlist.jsp"/> --- 已有
	      	<menu  id="22.4"  parentid="22" name="合同交底" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contracttransferlist.jsp"/>
	      	<menu  id="22.5"  parentid="22" name="合同履行" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/"/>
	      	<menu  id="22.6"  parentid="22" name="合同变更" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractvarylist.jsp"/>
	      	<menu  id="22.7"  parentid="22" name="合同结算" icon="icon_sfw.gif" url="javascript:openFolder(22.7)"/>
	      		<menu  id="22.7.1"  parentid="22.7" name="月度结算" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractfinalcalculationbymonth.jsp"/>
	      		<menu  id="22.7.2"  parentid="22.7" name="竣工结算" rightid="3.9.1.1" url="/erp/pmnew/contractmanage/contractfinalcalculation.jsp"/>	

jsp页面位置放到 erp/pmnew/contractmanager 里（原有的部分页面是合同信息汇总的页面）




题外：用了联想的键盘才发现什么事多余的设计 加个fn键不知何意，alt+f4等都不方便使用
解决 Lenovo Low Profile USB Keyboard 

3. 【中间 机构树问题】

对于这个树，可以在list页面用查询来替代 ，即设置 分公司(即机构)字段，这个字段也加上权限筛选 ，参考中南的样子

补充：
	这块的业务也可以参考中南

4. 【业务 工程与合同】 合同是建立在工程基础上，有了工程才有合同，根据工程能找到对应的合同信息。


5.     接受人 / 人员选择框 


	<img class="table_input_img"
		src="<eb:img file='img_lookup.gif'/>" width="15" height="15"
		border="0" style="cursor: hand"
		onClick="getMan(null,'move.moveinman','1')" />


		getMan(null,'move.moveinman','1') —— 这个方法 ，最后的参数 1 代表多选，2 代表单选 

		这个js方法代码如下：

		------------
		...
			待补充
		...
		------------

【系统 公用js函数 设计】 系统里多数共用的js都是通过传递不同参数到共用的方法，返回定制的数据。 



6. 原型设计时的要考虑的问题 【原型设计 字段取值 问题】

	字段确定了，还要确定这些字段是从哪里取的值，那些字段是相互关联的，这点最好都说明清楚，这样在开发时，就
能很快找到正确的数据。
	
	这点，也是业务的关键，就是数据以及数据间的关系。

7. 系统 项目管理 没有选择工程 是否会有操作上的问题出现 ？

8. 系统慢，貌似和数据库关系很大 （数据库的性能又和逻辑代码有关系，比如session忘了关等等）

9. 通过在流程监控里删除2条流程，在去看sql的输出，有不少重复的sql语句，？

10. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day139 2011年3月10日

1. 供应商管理

建表

	供应商基本信息表
	供应商供应类别信息表 -- 用这个字表来保存供应类别信息，比直接放到主表里去查找效率高 原子性


补充：
	基本表与中间表、临时表不同，因为它具有如下四个特性： 
	(1) 原子性。基本表中的字段是不可再分解的。 
	(2) 原始性。基本表中的记录是原始数据（基础数据）的记录。 
	(3) 演绎性。由基本表与代码表中的数据，可以派生出所有的输出数据。 
	(4) 稳定性。基本表的结构是相对稳定的，表中的记录是要长期保存的。 
	

供应类别的OR映射处理，把供应类别的id拼成字符串保存，模糊查找。

供应商_类别中间表 用下面sql查询提供效率：
	----------
	...
		StringBuffer sql = new StringBuffer();
		sql.append(" select org.name,org.code,org.id ");
		sql.append(" ,cast(stuff((select ','+id from t_hr_org where parentid=org.id and id in("+ids+") for xml path('')),1,1,'') as varchar(8000)) as cids ");
		sql.append("  from t_hr_org org ");
		sql.append("  where type=3 ");
		sql.append("  and id in(");
		sql.append(" select parentid from t_hr_org where id in(");
		sql.append(ids);
		sql.append(" )  ");
		sql.append(") "); 
	...
	-----------

* 录入页面上显示上，创建单位，创建人，创建时间，最后修改人，最后修改人单位，最后修改时间。这样录入的数据有根可循
* 创建人，创建单位 ---- 2者是否能保证数据是正确的？创建单位字段是普通id字段

* 供应类别查询类似
		    select
			o.id,
			o.code,
			o.name 
		    from
			F_Dictvalue1('pm_customer_szcs') o 
		    order by


2. for xml path 检索中间表



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day140 2011年3月11日

1. 本系统流程状态说明：  ？
	1
	2
	3
	4



2. 中标工程的流程查看页面sql重复或者多次执行  ？ 其他地方也有 ，可能出自一个原因，待看

3. 表格行操作

行操作触发 下面函数，只是显示出那个小div块（位置根据点击的位置来确定）

function YourMenu(even,ttd)
{
	even.returnValue=false;
	var mydiv=document.getElementById("mydiv");
	mydiv.style.top=even.clientY+14;
	mydiv.style.left=even.clientX-20; 
	mydiv.style.zIndex=4;
	mydiv.style.display='';
}

然后就是 mydiv 这个块来操作表格了 。

点击插入行的操作 ：add(curTr,'beforeBegin')

	var sn = 0;
	function add(trr,flag) {  // ----- 这里点击插入行时，把 trr 这个行对象传递进来，这个trr是在点击表格行时初始化的。
						点击了行就会把行对象保存到全局变量里，这样 div块就知道该操作那个表格了。
						【表格操作 tableedit.jsp】

	  try
		{
			if (trr=='undefined')
			{
			 alert("请先选择行");
			 return;
			}
		}catch(e){}
		try{expandTempleteNo();}catch(e){}

		var tbl=document.all(tablename);

		var templeteid=document.all(templetename);
		
		var templeterow = templeteid.getElementsByTagName('tr');
		var newrow = templeterow[0].cloneNode(true);
		var cells=newrow.getElementsByTagName('td');
		for (var k=0;k<cells.length;k++)
		{
			var s=cells[k].innerHTML;
			s=strReplaceAll(s,"@sn",sn);
			cells[k].innerHTML=s;
		}
		trr.insertAdjacentElement(flag,newrow);
		sn=sn+1;
		try
		{
		expandadd(trr,flag);
		}catch(e){}
	}


下面就是点击行时js的操作，支持多个表格的操作

var curTr;

function selectRow(ttr)
{
try{expandTempleteNo();}catch(e){}
	try
	{
	curTr.firstChild.className="input_table_title";
	var cell0=curTr.getElementsByTagName('td');
		for (var k=1;k<cell0.length;k++)
		{
			cell0[k].className="";
		}
	}
	catch(excetion)
	{
	}
	curTr=ttr;
	ttr.firstChild.className="tdarrow";
	var cell2=ttr.getElementsByTagName('td');
	for (var k=1;k<cell2.length;k++)
	{
		cell2[k].className="input_table_data";
	}
	tablename = ttr.parentElement.id
	if(tablename=="tb1"){   // ----------------从这里看出 配置 第二 ，第三个表格 的命名规则 ，和模板的命名规则
	templetename='templeteid';
	}
	if(tablename=="tb2"){
	templetename='indagatorid';
	}
	if(tablename=="tb3"){
	templetename='templetefamily';
	}
}


4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day141 2011年3月12日

1. 表设计 & 流程



2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day142 2011年3月14日

1. 建立表，根据表生成需要的代码。

从powerdesigner生成的sql建立表
t_pm_providerinfo 供应商信息
t_pm_providersuspend info 供应商停用&启用记录表
t_pm_providerandtype 供应商&供应类别中间表  (去除 ，不符合实际)
T_Sys_Dictvalue 取类别

* 各层文件的命名还是以数据库表的命名为准，统一命名，方便开发维护。
* 一些公用的表单元素参考下列页面：
	victualerinput.jsp
	


2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day143 2011年3月15日

1. 高级查询

and o.companyid
每个action里可以自定义。

2. 材料设备各自维护字典，供应商选择类别从这里选，可以两者都选。

3. 取表格行里某个input的值，直接取到所有input（tr.getElementsByTagName("input")）再找到对应的哪个

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day144 2011年3月16日


1. 类别窗口
流程添加


2. 日期运算 
* 加一年 ，取到年份 加1 ，在sql里进行日期计算

	select dateadd(year,1,o.createdate) as date from t_pm_providerinfo o where o.type = 2


SELECT
convert(varchar(10),DATEADD(wk, DATEDIFF(wk,0,dateadd(wk,24,'2009-01-01')), 0),120) 起始日期,
convert(varchar(10),DATEADD(wk, DATEDIFF(wk,0,dateadd(wk,24,'2009-01-01')), 6),120) 结束日期

上面求第25个周起止时间，求第20周把24改成19即可。

***************************************
补充解释一下：
1：dateadd(week,24,'2009-01-01')是在'2009-01-01'的基础上加上24周，算上'2009-01-01'所在的周正好是25周，但是这个加法是以7天为基数加的，换句话说'2009-01-01'是周几，加完之后也是周几。
2：DATEDIFF(wk,0,dateadd(wk,24,'2009-01-01'))
【0代表1900年1月1日00:00】，这个是求第1步算出的日期和【1900年1月1日00:00】年的星期差。
3：DATEADD(wk, DATEDIFF(wk,0,dateadd(wk,24,'2009-01-01')), 0)
是求出第一步求出的日期所在周的周一的日期。
4：DATEADD(wk, DATEDIFF(wk,0,dateadd(wk,24,'2009-01-01')), 6)
是求出第一步求出的日期所在周的周日的日期。
5：convert(varchar(10),xxxx,120)是求出第3或者4步中时间的 年份+月份
**************************************


licensestatus —— licensestatus >= 0:已经逾期 ; 0 > licensestatus >= -1 即将逾期 ；licensestatus < -1 正常


3. 供应商删除 操作 ，删除引用到这个id的所有记录，给提示。

	--------
	...
		/**
		 * 删除供应商同时删除引用到它的数据（停启用记录，供应类别记录，评价记录等）
		 * @param ids
		 */
		public void delProviderinfos(final String[] ids) {	
	//		  providerinfoDao.delEntrys(ids,Providerinfo.class);
			Query q = null;
			new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
				@Override
				public void doInHibernate(Session session) {
						String sql_sub = "delete from t_pm_providersuspendinfo where parentid in "+getFormatIds(ids);
						session.createSQLQuery(sql_sub).executeUpdate();
						for (int i = 0; i < ids.length; i++) {				
							Object o = session.get(Providerinfo.class, ids[i]);
							session.delete(o);
						}
				}
			});
	...
	--------


4. 供应商 供应类别字典 
PM-GYS-SHEBEI	供应商供应设备类别
PM-GYS-CAILIAO	 供应商供应材料类别

在 t_sys_dictvalue 里找上面字典的数据

select id,name,dicttypecode from t_sys_dictvalue where dicttypecode like '%gys-she%'

弹出窗 jsp ：common/selectdialog/_getsupplytype.jsp

5. 
providerstatus :
	1	未评审
	2	评审中
	3	评审通过
	4	初评未通过
	5	黑名单
	6	

6. myeclipse ide 更改文件名大小写，文件可能不会覆盖，要把原来的文件删除。 【IDE BUG 重要 】

7. stack overflow at line  -----------------------  一个 js 方法的命名冲突问题   【关键字命名冲突】
参看：
	stack overflow at line 
	     今天碰到如题的问题，这个问题一般是由于溢出才会报的错误，但是我的页面仅仅是对关闭而已，后来才发现，我自己定义了一个function close(),这个close()跟页面关闭的window.close()重复了，我把我定义的close()删除掉就OK了。

	这里的close()关键字一样不能自定义。。。

	来自：http://www.cnblogs.com/biandande/archive/2009/01/17/1377562.html


8. 对象数组装配 13054

<input type="hidden" name="dutyposts[@sn].id"  />



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day145 2011年3月17日

1. 供应类别是在供应商还没有创建的时候选择的 ，设计表时，要考虑到。【表设计 】

2. struts2 的 <s:hidden 标签使用时，注意name和value属性的配置。 <s:hidden name=" " />  value=""



3. 流程配置 ，参考 resource/txt/eb  ；系统里的 emponduty 用工管理审批  【流程配置 ，配置流程 ，流程添加 ，流程配置步骤】

	* 新建action ： com/erp/oa/oaflow/action/ProviderinfoAction
	* Archivesutil.java里添加上面的action，配置操作 (这步操作，是配置增删改流程的action，这里配置好，就可以自动根据
	上面的action里对流程进行操作-实现操作配置，本系统的部分流程没有配置这个，采取了另一种配置方式，基本是一致的)
	* TableList.java 里配置表名和表单名称
	* 在webapp的erp.oa.table中添加对应的表单，表名.jsp为input页面，表名_view.jsp为view页面 ；（see : t_hr_emponduty.jsp）
	   就是一个简单的查看页面
	* 在 SendarchivesAction.java  中添加对应的dto属性和getter、setter方法
	   在 public void loadinfo(String id,String tablename){}中添加一个else if 为此表单赋值 （修改和查看时表单显示的值）
	* 在要发送流程的action中加入以下几个私有变量和对应的get，set方法：（代码生成时会生成，要手动提供set/get方法）
		private Flowprocess flowprocess;
		private Flowtemplet flowtemplet;
		private String senduserid;
	*  在发送流程的input方法中加入：
		request.setAttribute("itemlist", new TableList().getTempletList("对应表单的表名")); （toSendCheck方法-在列表页面发起流程）

公用流程查看页 ：archivecheckview.jsp ，根据表名找到jsp页。

-- zhhx版本的流程配置 ，在service层有下面方法：
	-------
	...
		/**
		 * 保存流程 节点   和修改
		 */
		public String sendprocess(final HttpServletRequest request,
				final Flowprocess flowprocess, final Providerinfo providerinfo) {
			return (String) new HibernateUtil().execute(new HibernateCallback() {
				public Object doInHibernate(Session session) {
					String processid = new FlowprocessService().doAddOrSendProcess( //保存流程节点的方法doAddOrSendProcess
							session, request, flowprocess);
					providerinfo.setProcessid(processid);
					if (ConvertUtil.isNotEmpty(providerinfo.getId())) {
						providerinfoDao.updateEntry(providerinfo);
					} else {
						providerinfoDao.addEntry(session, providerinfo);
					}
					return null;
				}
			});
		}	
	...
	-------
	
	在这种配置下，在action放入2个方法同时，再到service加上上面的方法。

providerfb 
 


4. 系统 service 层 ，在取dto时，把该要用的属性全部设置好再返回，而不是在action里再去设置，SendarchivesAction.java 里用到也要自己
   去设置需要的属性，如果在service里就写好其他地方就可以直接调用，减少重复代码。【系统 service层 设置属性】

5. 系统 2 个 EmployeeService 用意

6. 
"]#{..} is not allowed in template text

注意：上面的错误时因为不能迭代某个对象 ，这个对象要加进来 ，加上下面的代码，引入数据字典service类
	<s:bean name="com.erp.sys.service.DictvalueService" id="dict"/>

参考类似页面



7. 本系统 zhhx ，流程模板绑定/关联，事先按照步骤添加流程功能后（其中要把表和流程名定义下来），在建立流程模板时，
选择，map设置里设置的流程名，建立好模板，在相应的地方就能看到流程模板。【系统 模板绑定】

8. 配置查询 （action的getQuerywhere方法） 
   这个系统 Query类的设计。模糊查询等，都可以在这里配置。通过在action配置where条件，达到定制查询功能。
9. sql语句 or条件不要疏忽

      select
        top 15 * 
    from
        t_pm_providerinfo o 
    where
        o.type = 2  
        and o.companyid='402881ed2196419c01219648603b000f' 
        and o.name like '%000000000000000%'        
        and o.providerstatus = 4 
        or o.providerstatus = 6  




10. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day146 2011年3月18日

1. 在 zhhxpmv2.0上

2. sql 

消息 8156，级别 16，状态 1，第 2 行
多次为 'abc' 指定了列 'id'。

    select
        count(1) as counts 
    from
        (  select
            *,  -- 这里o.*，否则会检索所有关联到得表
            a.name as qyformname 
        from
            t_pm_providerinfo o  
        left join
            t_sys_dictvalue a 
                on o.qyform = a.id  
        where
            1=1 
            and type='2'  
            and o.providerstatus <> 5  
            and o.companyid='402881ed2196419c01219648603b000f'  ) abc

3. js验证

##################
providerinfoinput.jsp

* 必填项
	providerinfo.code 
	providerinfo.name
	providerinfo.license  不重复
	providerinfo.artificalperson 
	providerinfo.supplytypename 
	providerinfo.generalsituation
	providerinfo.workscope

4. 添加流程时，点击审批，有个更新操作会更新dto ，需要设置下，否则原始值都覆盖为null了。 【流程更新 更新流程】



	/**
	 * 保存流程 节点   和修改
	 */
	public String sendprocess(final HttpServletRequest request,
			final Flowprocess flowprocess, final Providerinfo providerinfo) {
		return (String) new HibernateUtil().execute(new HibernateCallback() {
			public Object doInHibernate(Session session) {
				String processid = new FlowprocessService().doAddOrSendProcess( //保存流程节点的方法doAddOrSendProcess
						session, request, flowprocess);
				providerinfo.setProcessid(processid);
				if (ConvertUtil.isNotEmpty(providerinfo.getId())) {
					providerinfoDao.updateEntry(providerinfo);
				} else {
					providerinfoDao.addEntry(session, providerinfo);
				}
				return null;
			}
		});
	}	

	service层


	action 控制层

	sendCheckProcess 方法在点击发送流程按钮时，也会更新流程内容（此是流程发起页面还能修改流程的情况）。


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day147 2011年3月20日

1. 调试流程
流程状态的判断，参考下面：（T_OA_FLOWACTIVITIES表，在这个表里找到所有这个流程的记录及其状态值，依此做判断）

	---------
	...
		 <td  nowrap align="center" id="chkId18">
		    <s:if test="minStates == 1 || minStates == 0">
					<%if(aclstring.indexOf("3.2.1.5")>=0) {%>
							 <s:if test="maxStates == 1"><font color="red">待审批</font></s:if><!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
							 <s:if test="maxStates == 2">处理中</s:if><!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
					    <%}%>
						<%if(aclstring.indexOf("3.2.1.5")<0) {%>
							 <s:if test="maxStates == 1"><font color="red">待审批</font></s:if> 
							 <s:if test="maxStates == 2">处理中</s:if> 
						<%}%>
			    </s:if>
				    <s:if test="minStates == 2 ">
						<s:if test="maxStates == 2">
							<%if(aclstring.indexOf("3.2.1.5")>=0) {%>
								审批通过<!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
							<%}%>
							<%if(aclstring.indexOf("3.2.1.5")<0) {%>
								审批通过&nbsp;
							<%}%>

						</s:if>
				    </s:if>
				   <s:if test="maxStates == 3">
					 <%if(aclstring.indexOf("3.2.1.5")>=0) {%>
						<font color="red">
								未通过&nbsp;
						</font> ||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a></font>
							<!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
						 <%}%>
						 
					 <%if(aclstring.indexOf("3.2.1.5")<0) {%>
						<font color="red">
								未通过&nbsp;
						</font> ||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a></font>
						 <%}%>
					 </s:if>
				     <s:if test="maxStates == 4">
					<%if(aclstring.indexOf("3.2.1.5")>=0) {%>
							已撤回流程<!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
							||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a>
						<%}%>
						<%if(aclstring.indexOf("3.2.1.5")<0) {%>
							已撤回流程&nbsp;||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a>
						<%}%>
				     </s:if>
					 <s:if test="minStates == null ">
							<%if(aclstring.indexOf("3.2.1.5")>=0) {%>
								<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">发起审批</a></font><!--<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>-->
							<%}%>
							<%if(aclstring.indexOf("3.2.1.5")<0) {%>
								<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">发起审批</a></font>
							<%}%>
					 </s:if>
					 
					  <%if(aclstring.indexOf("3.2.1.5")>=0) {%>
				<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>
				<%}%>
				  <%if(aclstring.indexOf("3.2.1.6")>=0) {%>
					<!-- <a href="<%=request.getContextPath()%>/pm/Bid_advancedDel.action?id=<s:property value='id'/>" /> ||&nbsp;高级删除</a> -->
					<a href="#" onclick="delAll('<s:property value="id"/>')" /> ||&nbsp;高级删除</a>
				  <%}%>
					 </td>
	...
	---------

	这里的sql ，一个记录要从另一个表里的多头记录统计出一个结果，用子查询实现。把多条记录统计作为一条记录返回。

	select min(states) as minStates,max(states) as maxStates ,processid from t_oa_flowactivities group by processid

	得到一个流程的状态统计值，从而判断流程状态。


2. 看这个方法 在service层，这个空验证在这里验证是否好 
	/**
	 * 取得供应商供应类别名称（对于一个供应商）
	 * @param ids
	 * @return
	 */
	public String getSupplynamesByIds(String ids){
		String names = "";
		if(ids != null && !"".equals(ids)){
			String[] arr = ids.split(",");
			String inStr = getFormatIds(arr);
			List list = providerinfoDao.getSupplynamesByIds(inStr);
			for (Object obj : list) {
				names = names + ((Map)obj).get("name")+" , ";
			}
		}
		return names;
	}

	还是，在用到的地方自己先验证好，再传递参数进来。


3. 零星供应商的流程从新做一个，内容太少。


4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day148 2011年3月21日

1. 常用正则表达式

身份证 ： /^(\d{18,18}|\d{15,15}|\d{17,17}x)$/
手机号：:  /^1[3|4|5|8][0-9]\d{4,8}$/
数字： /^[0-9]+$/
...
s


2. 零星供应商流程调试  - 根据type类型显示各自字段 2者共用流程逻辑。

3. 类别里，只有材料和设备2大类，里面设置其他来兼容范围。



4. showmodeldialog 请求了url后不关闭浏览器就不刷新页面内容，在 url后面跟上一个变化的参数，比如time即可 【sql server 函数】

5.  供应商类别查询 
	select o.processid,o.id,o.name,o.code,o.city as cityname,o.artificalperson as legelperson,erterprise.name  enterprisename
	,stuff((select ','+name from t_sys_dictvalue 
	where  charindex(id,o.supplytype,0)>0
	FOR XML PATH('')),1,1,'') as typename
	from t_pm_providerinfo o left join t_sys_dictvalue erterprise on erterprise.id=o.qyform

从上面，各种常用sql查询方式。或者，用到某种数据库，它提供了那些方法或过程可以提高效率。【sql 】

上面的 ： sql server stuff 

6. 系统设置一个自定义js的位置，不用每个页面去重复拷贝。

7. <input type="hidden" name="providerinfo.supplytype"/> 和<s:hidden name="providerinfo.supplytype"/> 不用回写时，直接用input标签 搜索功能

8. 供应商的停用/启用
	停用——进入不合格
	启用——进入基本供应商信息列表，发起评审，并通过后才进入合格列表

流程状态和providerstatus状态，双重控制。

9. 给供应商一个标识 ，将供应商分 3 类 ，材料 ，设备 ，材料和设备

*	t_pm_providerinfo 表 以 supplytypeflag 值的状态 来表示：
		supplytypeflag = 1 材料
		supplytypeflag = 2 设备
		supplytypeflag = 3 材料 + 设备
	
* 类别的判断，放在选择供应商类别时，只供材料 为 1 ；只供设备为 2 ；材料设备都供为 3；
   用js判断选择。


10. 开发分包管理系统(

	分包计划、
	招标文件编审发放、
	开标定标、
	分包合同评审、
	分包合同台帐、
	分包合同交底、
	合同变更与补充
	
	)




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 149 2011年3月22日

1. 分包管理
	* 分包商表及业务，
	 根据表生成逻辑代码，配置并加入功能。
		providerfbview.jsp
		providerfbinput.jsp
		providerfblist.jsp

/menupmmk-config.xml v2.0


2. ie 浏览器 - Utilu IE Collection ，修复

3. 看看系统的上传功能 
	
	/common/uploadfiledetail.jsp  提交用
	/common/uploadfileview.jsp  查看
	配合struts2框架。


4. 一个弹出窗标题头样式

	----------
	...
		<tr>
			<td valign="bottom">
				<table width=100% align="center" cellpadding=0 cellspacing=0 class="xz_border">
					<tr>
						<td width="7"><img src="<eb:img file='query/query_01.gif'/>" height=28></td>
						<td width="159"  background="<eb:img file='query/query_02.gif'/>"><b>选择供应类别</b></td>
						<td background="<eb:img file='query/query_03.gif'/>">&nbsp;</td>
						<td width="21"><img src="<eb:img file='query/query_04.gif'/>" width=21 height=28></td>
					</tr>
				</table>
			</td>
		</tr>
	...
	----------


5. sql 逻辑等于一个值的判断 排除 a==b==2的条件
	and b.minStates<>b.maxStates or b.minStates <> 2   

6.  sql
和group by 一起用的几个子句 ，having 
--------
...
    select
        min(states) as minStates,
        max(states) as maxStates ,
        processid 
    from
        t_oa_flowactivities 
              
	  where o.processid = processid 
	                   
    group by  processid   
    having min(states) = '2'
...
--------




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day150 2011年3月23日

1. service层得多个事务 系统 事务 【同事务 操作 共事务 】
	
	例子：
	--------
	...
		public String addProvidersuspendinfo(Providersuspendinfo providersuspendinfo) {
			String result = "";
			Session session = HibernateUtil.getSession();
			ProviderinfoService service = new ProviderinfoService();
			try {
				session.beginTransaction();
				SimpleData o=(SimpleData)providersuspendinfo;
				result = providersuspendinfoDao.addEntry(o); // 这步不能撤销 ，要采取下面的方式事务才能起作用 
				Providerinfo p = service.loadProviderinfo(providersuspendinfo.getParentid());
				if(p.getType()== 1){//启用
					p.setProviderstatus(3);
				}else{
					p.setProviderstatus(4);
				}
				service.updateProviderinfo(p);
			} catch (Exception e) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(e.getMessage());
			}finally{
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
			
			
			return result;
		}
	...
	--------
	注：上面的事务是有问题的 ！！！ ，看下面的代码，事务能保持原子操作。
		原因，事务不能提交，事务嵌套，也不能提交，否则就不能撤回，

	InvitebidService
	--------
	...
		/**
		 * 保存招标评审文件，同时保存预选分包商记录
		 * @param invitebid
		 * @param prepickproviderfbs
		 * @return
		 */
		public String addInvitebid(Invitebid invitebid,List<Prepickproviderfb> prepickproviderfbs) {
			
			
			Session session = HibernateUtil.getSession();
			SimpleData o=(SimpleData)invitebid;
			try {
				session.beginTransaction();
				
				session.save(o);
				for(int i=0;i<prepickproviderfbs.size();i++){
					prepickproviderfbs.get(i).setParentid(o.getId());
					SimpleData fb=(SimpleData)prepickproviderfbs.get(i);
					session.save(fb);
				}
				session.getTransaction().commit();
			} catch (Exception e) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(e.getMessage());
			}finally{
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
			
			return o.getId();
		}
	...
	---------
	上面代码，在同一个事务里的2个操作，后一个操作可以调用前一个操作生成的 ID。【未提交 ID调用】

2. 流程删除操作 

com/erp/oa/oaflow/action/ProviderinfoAction.java 定义在这个位置的action的del方法里
定义流程删除时，要对原dto对象的操作，比如更新dto属性，或者删除dto。


上面这个操作，再供应商停用时要用到。
	停用 —— 类似于把流程信息删除，等于没发过流程。至于流程历史保留问题 ，
			于dto表里只有一个字段保存processid，不是保存在字表里的，故需要重新设计方可【流程历史】
自动调用流程删除操作。（手动的是把id传递给action）

* 调用 FlowprocessService 的 dodels(final String[] ids, final HttpServletRequest request, final Flowprocess flowprocess) 方法
   来删除审批过的dto的流程信息。这样停用过后，供应商又从合格转入待评审列表（即供应商信息列表里）里去了。


debug这边流程配置方式。

3.  js验证导致的提交问题
比如：注册资金（万元） ，如果不是数字格式，则不能提交。

4. 有流程的记录删除时同时删除流程记录信息。（一般不轻易删除）

这里要

5. debug调试时，事务问题导致表锁住，不行的话重启服务器或结束访问的程序 【事务 锁】



6. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day151 2011年3月24日

1.  配置
menupmk 
<!-- 分包管理 -->
<menu  id="3"  parentid="0" name="分包管理" icon="icon_tbgl.gif" />
	<menu  id="3.1" parentid="3" rightid="3.9.1.1" name="分包商名录" url="javascript:openFolder(3.1)"/> 
		<menu  id="3.1.1" parentid="3.1" rightid="3.9.1.1" name="新引进分包商" url="/pm/Providerfb_list.action"/> 
		<menu  id="3.1.2" parentid="3.1" rightid="3.9.1.1" name="合格分包商" url="/pm/Providerfb_listWithQualified.action"/> 
		<menu  id="3.1.3" parentid="3.1" rightid="3.9.1.1" name="不合格分包商" url="/pm/Providerfb_listWithUnqualified.action"/>
     	<menu  id="3.2" parentid="3" rightid="3.9.1.1" name="分包商效果评价" url="/pm/Providerfb_listWithEvaluation.action"/>
     	<menu  id="3.3" parentid="3" rightid="3.9.1.1" name="分包计划" url="/pm/SubcontractPlanFb_list.action"/>       		     
     	<menu  id="3.4" parentid="3" rightid="3.9.1.1" name="招标管理"  url="javascript:openFolder(3.4)"/>       		      
			<menu  id="3.4.1" parentid="3.4" rightid="3.9.1.1" name="招标文件编审发放" url="/pm/InviteBidFb_list.action"/> 
			<menu  id="3.4.2" parentid="3.4" rightid="3.9.1.1" name="开标定标" url="/pm/OpenBidFb_list.action"/><!--BidPickFb_list.action  -->
			<!--  <menu  id="3.4.3" parentid="3.4" rightid="3.9.1.1" name="定标" url="/erp/pmnew/zyfbmanage/dblist.jsp"/>   -->
     	<menu  id="3.5" parentid="3" rightid="3.9.1.1" name="分包合同"  url="javascript:openFolder(3.5)"/>       		      
			<menu  id="3.5.1" parentid="3.5" rightid="3.9.1.1" name="分包合同评审" url="/pm/SubcontractEvaluFb_list.action"/> 
			<menu  id="3.5.2" parentid="3.5" rightid="3.9.1.1" name="分包合同台帐" url="/erp/pmnew/zyfbmanage/fbhttzlist.jsp"/> 
			<menu  id="3.5.3" parentid="3.5" rightid="3.9.1.1" name="分包合同交底" url="/erp/pmnew/zyfbmanage/fbhtjdlist.jsp"/> 
			<menu  id="3.5.4" parentid="3.5" rightid="3.9.1.1" name="合同变更与补充" url="/erp/pmnew/zyfbmanage/fbhtbglist.jsp"/> 
	<menu  id="3.6" parentid="3" rightid="3.9.1.1" name="分包付款"  url="javascript:openFolder(3.5)"/>       		      
			<menu  id="3.6.1" parentid="3.6" rightid="3.9.1.1" name="分包付款申请" url="/erp/pmnew/zyfbmanage/fbfksqlist.jsp"/> 
			<menu  id="3.6.2" parentid="3.6" rightid="3.9.1.1" name="分包结算" url="/erp/pmnew/zyfbmanage/fbjslist.jsp"/>

struts-pm.xml
	<action	class="com.erp.pm.subcontract.providerfb.action.ProviderfbAction" method="{1}" name="Providerfb_*">
		<result name="view">/erp/pm/subcontractfb/providerfb/providerfbview.jsp</result>
		<result name="input">/erp/pm/subcontractfb/providerfb/providerfbinput.jsp</result>
		<result name="list">/erp/pm/subcontractfb/providerfb/providerfblist.jsp</result>
		<result name="listwithqualified">/erp/pm/subcontractfb/providerfb/providerfbwithqualifiedlist.jsp</result>
		<result name="listwithunqualified">/erp/pm/subcontractfb/providerfb/providerfbwithunqualifiedlist.jsp</result>
		<result name="listwithevaluation">/erp/pm/subcontractfb/providerfb/providerfbwithevaluationlist.jsp</result>
		<result type="redirect-action">Providerfb_list?back=1</result>
	</action>

-- 上面配置 ，根据表生成的action重新配置。


2.  招投标几个术语

* 开标(Bid opening) ，
	招标单位在规定的时间、地点内，在有投标人出席的情况下，当众公开拆开投标资料(包括投标函件)，宣布投标人(或单位)的名称、
	投标价格以及投标价格的修改的过程。
* 定标 
	定标也即授予合同，是采购机构决定中标人的行为。定标是采购机构的单独行为，但需由使用机构或其他人一起进行裁决。在这一阶段，
	采购机构所要进行的工作有：决定中标人，通知中标人其投标已经被接受，向中标人发现授标意向书，通知所有未中标的投标，并
	向他们退还投标保函等。 



3. 给分包商input页配置struts2的框架验证  (供应商管理 也改为用框架验证) 【框架验证 抽取】

1）建立js验证xml配置文件，

2）在form页面引入validation.js，
	<eb:js file="validator.js"/>	

3）写好验证js，提交时触发验证。
	例如：
	----------
	...

		function validData(){
		   var id = "<s:property value="info.id" />"
		   if (id == ""){
			  f1.action = "<%=request.getContextPath()%>/pmmk/CustomerInfo_doadd.action";
		   }else{
			  f1.action = "<%=request.getContextPath()%>/pmmk/CustomerInfo_doupdate.action";
		   }
		bindingValidatorForm('Subcontractplan_doadd','<%=request.getContextPath()%>/script/validation-subcontractfb.xml');
		if(Validator.Validate('Subcontractplan_doadd',3,'','error')){
			f1.submit();
			getloadsubmit();
		}
		}

	...
	----------

4）CustomerInfo_doadd 和 validation-customerinfo.xml'里的<form name="Subcontractplan_doadd" > 对应
5）直接配置好调用，不用重启。（debug）
OK

参考： 分包商管理验证配置，validation-providerfb.xml ，providerfbinput.jsp 




补充：（struts2框架验证）

4. 分包管理业务

* 分包商管理
* 制定分包计划（和工程挂钩，-一个工程一般对应多个分包计划）
	- 分包计划明细 （一个分包计划下有多个分包明细，明细内容是工程下面要分包出去的东西）
* 制定招标文件 （与上面的分包计划里的明细条目一一对应，这里的弹出框列出详细条目及其对应的计划名称，计划对应的过程名称，并填写分包的原因 ），评审，
	- 标书发放 ：对于上面评审通过的标书，进行标书发放，发放目标为招标文件里的预选投标单位，每个标书一般会有多条发放记录
*  开标，对应招标，和上面评审通过的招标文件一一对应 （选择分包内容的地方，是选择上面评审过的招标文件，带出必要数据）(招标文件又和分包明细条目一一对应)
	- 寻标 
	- 定标
* 分包合同评审 （上传评审文件，走评审流程）
* 上面评审通过后，正式签订了合同，录入分包合同台账信息



5. 检测字段数据库里是否唯一的代码，可以抽取到公共代码里去，通过传递参数实现代码重用。 【系统 建议】
	各类表单唯一验证。

6. 联合投标 

首先，联合体各方应当签定书面的共同投标协议，明确各方拟承担的工作，并将共同投标协议连同投标文件提交招标人。如果中标的联合体内部发生纠纷，可以依据共同签定的协议加以解决。
    联合体中标的，联合体各方应当共同与招标人签订合同。不能以联合体中某一投标人的名义与招标人签订合同，而是联合体各方都必须共同与招标人签订合同，联合体各方对中标的项目承担连带责任。联合体中的某一方违反合同，采购人都有权要求其中的任何一方承担全部责任。联合体的任何一方均不得以其内部联合体协议的约定来对抗招标人。
    按你的说法就是联合体其中的单位加上业主签订一份合同。 


分包招标里，可能会有联合投标的情况 。【 业务 联合投标 】
按照上面，这个招标会有多个分包合同，如何管理？

7. 强外键关系只对父子表建立，其他可不体现在数据库，方便大量数据的维护

PD 的外键可以设置是否生成，设置为能看见外键关系，但不一定生成关系。

8. 系统走过流程的dto信息的更新问题，是否再走个更新流程，还是直接就去改（这样流程失去了意义）
可以设置某些字段可以修改，关键信息不允许更新。 【流程 修改】



9. 合同交底 业务 
补充：
	从字面上说:将合同交到底下执行。

	具体说，合同交底就是将合同的内容贯彻下去，让相关的人清楚相关的合同条款，并尊照执行，防止因对合同不熟，不理解，撑握不透彻而出现违反合同的行为，为自己带来损失。

	合同交底是公司合同签订人员和精通合同管理的专家向项目部成员陈述合同意图、合同要点、合同执行计划的过程

	http://pmp.aura.cn/newsarticle/paper/134031903.html

	有时交底也指合同的一方向另一方交底。总之都是为了贯彻和明确合同执行中的细节。

	http://www.hometop1.com/zxlc/zx11.html

10. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day152 2011年3月25日

1. 表名统一用  [ t_pm_fb_名称 ] 来命名，以便区分模块。
前导命名区分 

2. 用ajax或者dwr进行异步交互。 - 以分包商编码异步生成为例
	dwr 补充：
	* jar包
		...
	* 配置 dwr （web.xml里配置servlet etc）
		------
		...
			<servlet>
				<servlet-name>dwr-invoker</servlet-name>
				<display-name>DWR Servlet</display-name>
				<description>Direct Web Remoter Servlet</description>
				<servlet-class>
					org.directwebremoting.servlet.DwrServlet
				</servlet-class>
				<init-param>
					<param-name>debug</param-name>
					<param-value>true</param-value>
				</init-param>
				<init-param>
					<param-name>activeReverseAjaxEnabled</param-name>
					<param-value>true</param-value>
				</init-param>
				<init-param>
					<param-name>
						initApplicationScopeCreatorsAtStartup
					</param-name>
					<param-value>true</param-value>
				</init-param>
				<init-param>
					<param-name>maxWaitAfterWrite</param-name>
					<param-value>-1</param-value>
				</init-param>
				<load-on-startup>1</load-on-startup>
			</servlet>
			<servlet-mapping>
				<servlet-name>dwr-invoker</servlet-name>
				<url-pattern>/dwr/*</url-pattern>
			</servlet-mapping>
		...
		-------
	* 在dwr配置文件（dwr.xml）里配置 java类
		------
		...
			  <create javascript="providerfbservice" creator="new"> 
			       <param  name="class" value="com/erp/pm/subcontractfb/providerfb/service/ProviderfbService"></param>
			   </create>
		...
		-------
	* 页面引入dwr的js ，并调用执行
		<script src='<%=request.getContextPath() %>/dwr/interface/providerfbservice.js'></script>
		<script src='<%=request.getContextPath() %>/dwr/engine.js'></script>
		<script src='<%=request.getContextPath() %>/dwr/util.js'></script>		

		# 调用
		-------
		...
			function getMaxCodeByType( type ){
				if(type != null){
					providerfbservice.getCodeByType(type,callback); //
				}
			}

			function callback(data){
				document.getElementById("providerfb.code").value = data;
			}
		...
		--------
		关于调用：可以参考 dwr的调试页面（在debug模式下）信息 ，如：

			Methods For: providerfbservice (com.erp.pm.subcontractfb.providerfb.service.ProviderfbService)
			To use this class in your javascript you will need the following script includes:

			  <script type='text/javascript' src='/zhhxpm/dwr/interface/providerfbservice.js'></script>
			  <script type='text/javascript' src='/zhhxpm/dwr/engine.js'></script>

			In addition there is an optional utility script:

			  <script type='text/javascript' src='/zhhxpm/dwr/util.js'></script>
			  ...



3. 编码不允许改 

	后面业务都用到的


4. 向dwr 回调函数传参数 js 回调 回调 参数
	-----
	...
		<script> 
		//全局变量，在回调函数中应用 
		var key=1; 
		myTest.test(var1,var2, 
			     {callback:function(data){ 
					callBackTest(data,key); 
					    } 
			      } 
			  ); 
		function callBackTest(data,key){ 
			  //tagName是页面的一个标签的id名 
			  DWRUtil.setValue("tagName",key); 
			  TODO every  with data...... 
		} 
		</script> 

	...
	-----
	
	注意上面 JS 的这种写法。动态扩展 


5. 流程的停用操作，按照现在的设计会重置 processid ，这样历史数据就丢失了，可以建个字表，把历史processid ,记录id ，日期，
字段保存为一条记录，这样后面可以查看历史流程数据。 【流程历史数据】

6. 供应商的service层，提供公用的方法（入口），方便模块调用。 不同模块会调用自己需要查看的类别，提供公用方法调用。【供应商 接口】




7.  生成 分包计划表（t_pm_fb_subcontractplan） 和 分包计划详细表 （t_pm_fb_subcontractplandetail） ，下面（本次做到开标定标）的
需求有变化暂不生成代码

	* 生成代码 

	* 加功能

8. action里绑定模板的逻辑 【流程模板 绑定】
		-------
			public String toSendCheck(){
				request.setAttribute("itemlist", new TableList().getTempletList("t_pm_providerfb"));//  设置此流程绑定的模板
		...
		-------



9. 分包计划表 需要分包计划名字  ？

10. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day153 2011年3月26日

1.分包管理

	<!-- subcontract manager -->
	<action	class="com.erp.pm.subcontractfb.providerfb.action.ProviderfbAction" method="{1}" name="Providerfb_*">
		<result name="view">/erp/pm/subcontractfb/providerfb/providerfbview.jsp</result>
		<result name="input">/erp/pm/subcontractfb/providerfb/providerfbinput.jsp</result>
		<result name="list">/erp/pm/subcontractfb/providerfb/providerfblist.jsp</result>
		<result name="listwithqualified">/erp/pm/subcontractfb/providerfb/providerfbwithqualifiedlist.jsp</result>
		<result name="listwithunqualified">/erp/pm/subcontractfb/providerfb/providerfbwithunqualifiedlist.jsp</result>
		<result name="listwithevaluation">/erp/pm/subcontractfb/providerfb/providerfbwithevaluationlist.jsp</result>
		<result name="toSendCheck">/erp/pm/subcontractfb/providerfb/tosendcheckproviderfb.jsp</result>
		<result type="redirect-action">Providerfb_list?back=1</result>
	</action>
	<action	class="com.erp.pm.subcontractfb.action.SubcontractplanAction" method="{1}" name="Subcontractplan_*">
		<result name="view">/erp/pm/subcontractfb/subcontractplanview.jsp</result>
		<result name="input">/erp/pm/subcontractfb/subcontractplaninput.jsp</result>
		<result name="list">/erp/pm/subcontractfb/subcontractplanlist.jsp</result>
		<result name="toSendCheck">/erp/pm/subcontractfb/tosendchecksubcontractplan.jsp</result>
		<result type="redirect-action">Subcontractplan_list?back=1</result>
	</action>
	<action	class="com.erp.pm.subcontractfb.action.SubcontractplandetailAction" method="{1}" name="Subcontractplandetail_*">
		<result name="view">/erp/pm/subcontractfb/subcontractplandetailview.jsp</result>
		<result name="input">/erp/pm/subcontractfb/subcontractplandetailinput.jsp</result>
		<result name="list">/erp/pm/subcontractfb/subcontractplandetaillist.jsp</result>
		<result name="toSendCheck">/erp/pm/subcontractfb/tosendchecksubcontractplandetail.jsp</result>
		<result type="redirect-action">Subcontractplandetail_list?back=1</result>
	</action>

2. 分包计划的工程信息数据在 t_pm_contract 里取。合同信息里流程通过的记录

	弹出窗文件名：_getcontractfb.jsp  

3. 公用弹出框 配置 参考 navigator.txt  【弹出框 配置】

	* 在 common/selectdialog 下建立 2个jsp页，如 _getOrgjsp(列表内容),getOrg.jsp（标题）
	* 在用到窗口的地方加入js调用代码：
		-------
		...
			function getcontract()
			{
			  
				var url = path + "/common/selectdialog/index.jsp?type=getcontractfb&page=getcontractfb.jsp&time=" + escape(new Date());
				var style = "dialogWidth:600px;dialogHeight:500px;status:no;help:no;resizable:no;scroll:no; ";
				var parm = new Array();
				//---------得到弹出框的返回值
				var val = window.showModalDialog(url, parm, style);  
			}	
		...
		-------
	* 到 CommonldialogAction 里配置 view 方法 （根据上面url的参数），调用业务层获得数据对象page，配置上url到page（分页功能用到）
	这里的url就是获得list数据的URL。
	* 配置 上面URL的视图到 _getOrg.jsp

	（具体逻辑在2个jsp里自定义即可）


4. 分页配置 里  ，返回的 page 对象要设置 url 属性，分页时要用到。

5. 分包计划流程，列出分包明细 ？

6. 分包计划明细弹出框


弹出窗文件名：_getsubcontractplandetail.jsp

7.





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day154 2011年3月27日

1. sql server 

plan 是关键字 ，
注意一些关键字，不要使用。

2. 招标评审选择分包商弹出框

	_getProviderfb.jsp



3. 存入评审文件同时，要存入引用引用评审文件id的预选分包商记录。 【主键id生成 主键生成 hibernate session】
存入时session.save(object)，会返回dto的id  ,也就是在session对象执行save操作时，就会生成 主键 id，这时 事务还没有提交。

删除时，同时删除，如果是批量删除，采取下面的方式，效率高些
	------
	...
		/**
		 * 生成招标评审记录，同时删除相关引用记录
		 * @param ids
		 */
		public void delInvitebids(String[] ids) {	
			Session session = HibernateUtil.getSession();
			String sql = "";
			try {
				session.beginTransaction();
				for (int i = 0; i < ids.length; i++) {				
					Object o = session.get(Invitebid.class, ids[i]);
					//删除预选分包商记录
					Connection con = session.connection();
					PreparedStatement stmt = con.prepareStatement(" delete from t_pm_fb_prepickproviderfb where parentid = '"+((Invitebid)o).getId()+"' ");
					stmt.executeUpdate();
					session.delete(o);
				}
				session.getTransaction().commit();
			} catch (Exception e) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(e.getMessage());
			}finally{
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
		}
	...
	------
	上面的stmt是直接调用JDBC的API来更新。

4. 数据一层层引用到地方，不用js去设置表单域的值，直接取到id，用异步请求，来自动填写表单。
	用dwr ，还是要用 js 来设置 radio，select等的选中状态。

5. js 操作radio js操作select

*	设置 select 标签选中
	---------
	...
		//设置select状态
		function setSelectPick(fieldname,value){
			var s = document.all(fieldname);
			var os = s.options;
			if(value != ""){
				for(var i=0;i<os.length;i++){
					if(os[i].value == value){
						os[i].selected = true;
					}
				}
			}else{
				for(var i=0;i<os.length;i++){
					if(os[i].value == value){
						os[i].selected = false;
					}
				}		
			}
		}
	...
	---------

*	设置radio
	---------
	...
		//设置radio状态
		function setRadioChecked(fieldname,value){
			var radios = document.getElementsByName(fieldname);
			if(value != ""){
				for(var i=0;i<radios.length;i++){
					//alert("_"+radios[i].value+"_"+val[3]+"_");
					if(radios[i].value == value){
						radios[i].checked = true;
					}
				}
			}else{
				for(var i=0;i<radios.length;i++){
					radios[i].checked = false;
				}			
			}	
		}
	...
	---------




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day155 2011年3月28日

1. 报文件找不到错误 ： xxx.jsp not found  【文件名 大小写 重命名 改变】 line 13949  
	在重命名 jsp页 ，文件名大小写改变时，myeclipse不会覆盖源文件，故要手动删除。只是IDE的问题。

2. 从 sql 到 dto 的转换 ，直接由sql结果返回 dto
例子：
	-------
	...
		/**
		 * 取预选分包商列表
		 */
		public List<Prepickproviderfb> getPrepickproviderfbListByPid(final String parentid){
			Object obj = new HibernateUtil().execute(new HibernateCallback(){
				@Override
				public Object doInHibernate(Session session) {

					//String hql = "from Prepickproviderfb where parentid =:parentid"; HQL方式

					// SQL方式，dto的属性和sql的字段一一对应，并dto提供属性的get/set方法 ，【SQL2DTO sql到对象】
					// 这种方式，实现从sql返回根据id得到name的dto对象，减少查询次数。

					String sql = "select o.*,a.name as providername from t_pm_fb_prepickproviderfb o left join t_pm_providerfb a on a.id = o.providerid where o.parentid = '"+parentid+"' ";
					HashMap where = new HashMap(); 
					where.put("parentid", parentid);
					
					
					return HibernateUtil.getSQL2DtoList(sql, Prepickproviderfb.class);
					//return HibernateUtil.getHQL2DtoList(hql, where)
				}
			});
			
			return (List<Prepickproviderfb>)obj;
		}
	...
	-------
	
	HibernateUtil.getHQL2DtoList(...) 方法的实现：
	
	-------
	...
		public static Page getSQL2DtoPage(String sql, HashMap where, Class cs,
				int pageindex, int pagesize) {
			Session session = null;
			List list = null;
			int rowcount = 0;
			try {
				session = HibernateUtil.getSession();
				session.beginTransaction();
				SQLQuery q = session.createSQLQuery(sql);
				if (where != null) {
					Iterator it = where.keySet().iterator();
					while (it.hasNext()) {
						String key = (String) it.next();
						q.setParameter(key, where.get(key));
					}
				}
				q.setResultTransformer(Transformers.aliasToBean(cs)); // --------------- 这里
				/*rowcount = q.list().size();
				if (pagesize > 0) {
					q.setFirstResult((pageindex - 1) * pagesize);
					q.setMaxResults(pagesize);
				}*/
				if (pagesize > 0) {
					//组装查询总记录数sql
					StringBuffer countQueryString = new StringBuffer("select count(1) as counts from ( \n");
					countQueryString.append(removeOrders(sql));
					countQueryString.append("\n ) zbyu \n");
					SQLQuery q2 = session.createSQLQuery(countQueryString.toString());
					if (where != null) {
						Iterator it = where.keySet().iterator();
						while (it.hasNext()) {
							String key = (String) it.next();
							q2.setParameter(key, where.get(key));
						}
					}	
					rowcount = Integer.parseInt(q2.uniqueResult().toString());
					q.setFirstResult((pageindex - 1) * pagesize);
					q.setMaxResults(pagesize);
				}
				list = q.list();
				session.getTransaction().commit();
			} catch (JDBCException ex) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(ex.getSQLException());
			} finally {
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
			return new Page(list, pageindex, pagesize, rowcount);
		}
	...
	-------
	Page.getList();


	根据上面，直接从 sql 里将引用到得 id对应的名称等字段封装为 DTO	显示，减少查询次数。【DTO 完整 查询】 



3. 数据字典 

PM-FB-FBFS 分包方式 
pmbjxs 市场经营管理-投标信息-招标文件评审-报价形式 /计价方式



4. 数据库 唯一性验证 要在数据库里就约束。多线程操作情况的处理。  【唯一 unique】
比如编码，身份证，注册号等。


5.  view 页面 ，参考下面，加上流程信息显示

   	<action class="com.erp.pmmk.invitebid.action.InvitebidreviewsAction" method="{1}" name="Invitebidreviews_*">
   	<result name="view">/erp/pmmk/invitebid/invitebidreviewsview.jsp</result>// 
   	<result name="input">/erp/pmmk/invitebid/invitebidreviewsinput.jsp</result>
   	<result name="list">/erp/pmmk/invitebid/invitebidreviewslist.jsp</result>
   	<result name="toSendCheck">/erp/pmmk/invitebid/tosendcheckinvitebidreviewsinput.jsp</result>
   	<result type="redirect-action">Invitebidreviews_list?back=1</result>
   	</action>

6. tosendcheck***.jsp 发起流程页面，内容可以改（input页） ，这里注意 更新操作里还有插入操作（不是一个dto对象，有子表的情况）。

	--------
	...
		/**
		 * 更新操作，同步更新子表数据；发布流程时可能还会修改数据（比如：造价预选分包商）这里要判断
		 * @param invitebid
		 */
		public void updateInvitebid(Invitebid invitebid,List<Prepickproviderfb> prepickproviderfbs) {
			
			Session session = HibernateUtil.getSession();
			
			try {
				session.beginTransaction();
				SimpleData o=(SimpleData)session.load(invitebid.getClass(), invitebid.getId());
				o.copy(invitebid);
				session.update(o);
				if(prepickproviderfbs != null){
					for(int i=0;i<prepickproviderfbs.size();i++){
						Prepickproviderfb fb = prepickproviderfbs.get(i);
						if(fb != null&&fb.getProviderid()!=null&&!"".equals(fb.getProviderid())){
							if(fb.getId() != null && !"".equals(fb.getId())){//is update
								SimpleData p = (SimpleData)session.load(fb.getClass(),fb.getId());
								fb.setParentid(o.getId());
								p.copy(fb);
								session.update(p);
							}else{//add new 
								fb.setParentid(o.getId());
								SimpleData sd=(SimpleData)fb;
								session.save(sd);
							}
						}
					}
				}
				session.getTransaction().commit();
			} catch (Exception e) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(e.getMessage());
			}finally{
				if (session != null && session.isOpen()) {
					session.close();
				}
			}		
		}
	...
	---------

7. zhhx 系统 ，给view 页面加上流程内容显示步骤 ：

* 拷贝下面代码 到 view页面。并修改里面的对象名称
（1）内容上面
	<TABLE class=table_input   width="100%">
	<thead>
		<td  style="width:20%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
	</thead>
	<tr align="center"  >
		<td class="table_view_td" id="isxianshiflow" colspan="5" align="center"><a href="#" onclick="xianshiflow()">显示流程</a></td>
	</tr>
	</TABLE>
 	<TABLE class=table_input id="qianheyijianflow"  width="100%" style="display:none">
	<thead>
		<td  style="width:20%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
	</thead>
	<tr align="center"  >
	<td  class="table_view_td" align="right" style="border-top: 0px" colspan="5" >
		 <s:set name="id" value="invitebid.processid"/>
		  <jsp:include page="../../oa/oaflow/archivesendheaderview1.jsp" >
		    <jsp:param name="id" value="<s:property value='#id'/>"/>
		 </jsp:include>
	</td>	
	</tr>
	</TABLE>	
（2）内容下面
	<TABLE class=table_input   width="100%">
	<thead>
		<td  style="width:20%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
	</thead>
	<tr align="center"  >
		<td class="table_view_td" id="isxianshi" colspan="5" align="center"><a href="#" onclick="xianshi()">显示签核意见</a></td>
	</tr>
	</TABLE>
 	<TABLE class=table_input id="qianheyijian"  width="100%" style="display:none">
	<thead>
		<td  style="width:20%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
		<td style="width:25%;border:0px"></td>
		<td style="width:15%;border:0px"></td>
	</thead>
	<tr align="center"  >
	<td class="table_view_td">
	</td>
	
	
	<td  class="table_view_td" align="right" style="border-top: 0px" colspan="4">
		 <s:set name="id" value="invitebid.processid"/>
		    <jsp:include page="../../oa/oaflow/checklistext.jsp" >
		    <jsp:param name="id" value="<s:property value='#id'/>"/>
		 </jsp:include>
	</td>
	</tr>
	</TABLE>	


（3）action 的view 加入封装流程数据的逻辑，用于流程信息显示，先要加入action属性
	--------
	...
		//flow
	private Flowprocess flowprocess;
	private Flowtemplet flowtemplet;
	private String senduserid;
	private Flowactivities flowactivities;
	private String maxStates;//最大结点
	private String minStates;//最小结点
	private String templetname;

		
		flowprocess = new  FlowprocessService().loadFlowprocess(invitebid.getProcessid());
		if(flowprocess!=null){
			if (StringUtils.isNotEmpty(flowprocess.getTempletid())) {
				flowtemplet = new FlowtempletService().loadFlowtemplet(flowprocess.getTempletid());
				request.setAttribute("tablename", flowtemplet.getTablename().toLowerCase());
				this.setTempletname(flowtemplet.getName());
			}
		}
	...
	-------

（4）把 JS 也拷贝过去（修改action路径） ，原来的修改，返回删除 

	ok

分包招标文件评审可以参考。

8. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 156 2011年3月29日

1. 供应商管理，分包管理，js框架验证（我佛山人编写的validator库）（day151-3 line 14547） + 开标，带流程view页面加上流程信息显示

2. 定标流程页面内容 = 招标评审内容 + 定标详细列表内容。

3. 在招标文件发放里查看中标对比状态。

4. list方法的筛选条件可以在公用的 where条件构成逻辑里去做 ，就是 action 的 getquerywhere方法里去定义。传递到list
方法，得到筛选过后的数据。

5. 招标文件发放 处，partbidorgid 就是 providerid 

6. div 自适应内容高度 height:auto ;


7. 父子表列表情况参考 分包计划详细action来处理pid/parentid的传递

8.弹出框

	_getinvitebid.jsp   // 招标文件评审

注：在建立弹出框相关代码时，修改了 CommonldialogAction 一般IDE会出问题，需要重启，否则action的view方法if逻辑不能正常执行；
	程序逻辑没问题。【弹出框 没数据】


	弹出框 用到 query.js 要引入（其他一些也看情况引入，装饰器没有自动给这些弹出框页面加入js）。

9. 
* 根据表生成基础代码
* 丰富dto对象，id的提供name
* 


10. 系统用装饰器页

	common/layout.jsp

11. 列表页面，数据不够时，生成空行 ( 变量 i, j )  ,<%int i=0;%>
	------
	...
		<table width="100%" border="0" align="center" cellpadding="2" cellspacing="1" class="td_list_border">
			<tr align="center"  height="22">
				<th align="center" class="td_list_title">工程编码</th>
				<th align="center" class="td_list_title">工程名称</th>
				<th align="center" class="td_list_title">分包内容</th>
				<th align="center" class="td_list_title" nowrap>分包类型</th>
			</tr>
			<%int i=0;%>
			<s:iterator value="page.getList()" status="index"><%i++;%>
				<tr height="22"  style="cursor: hand" title="双击选择" onDblClick="setProviderfbId(this);" class="td_list_background<%=(i%2)%>"  onmouseover="overrow(this)" onmouseout="outrow(this,<%=(i%2)%>)">
					<s:hidden name="id"/><!-- 招标评审ID，下面都是分包计划明细的字段用于显示 -->
					<s:hidden name="content"/>
					<s:hidden name="presubmoney"/>
					<s:hidden name="type"/>
					<s:hidden name="invitebidtype"/>
					<s:hidden name="mode"/>
					<s:hidden name="bidorgname"/>
					<s:hidden name="valuationtype"/>
					<s:hidden name="providerqualification"/>
					<input type="hidden" name="providerqualification" value="<s:date name="preenterdate" format="yyyy-MM-dd"/>"/>
					<s:hidden name="worktime"/>
					<s:hidden name="subreason"/>
				    <td align="left" ><s:property value="code"/></td>
			    <td align="left"><s:property value="prjname"/></td>
			    <td align="left"><s:property value="content"/></td>
			    <td align="right"><s:property value="typename"/></td>
		       </tr>
			 </s:iterator>

			 <!-- 这里就是处理行数不够问题，保持显示风格, 变量 i 和 j -->
			<%for(int j=i;j<Constant.PAGE_SIZE;j++) {%>
		       <tr class="td_list_background<%=((j+1)%2)%>" onmouseover="overrow(this)" onmouseout="outrow(this,<%=((j+1)%2)%>)">
			<td height="22"></td>
			<td height="22"></td>
			<td height="22"></td>
			<td height="22"></td>

		     </tr>
			<%}%>	 
		</table>
	...
	-------

12. 对于本系统使用的 validator.js  （我佛山人）的一些说明（与struts2的验证框架还是）






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day157 2011年3月30日

1. day146-4 line 14110

	流程发起，暂不能修改，可以返回到列表页面修改。 （多出了input维护）


2. 在招标评审service层写了个公用的根据招标评审ID取得工程信息的方法。起到桥梁作用。
	invitebidservice - getcontractbyinvitebidid()

3. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day158 2011年3月31日

1. 询标 ，开标

2. struts2标签  <s:form action="%{page.getUrl()}"  method="post" id="pgform" name="pgform" > 【嵌套】

3.删除过流程才能删除数据记录

4. 删除操作加上删除附件的逻辑。

5. 组织机构表的 ID ，设计为树形结构保存，比如公司总部为 1  ，分公司为11，12,13，。。。，分公司的子公司为111,112
这样能从ID上体现层级，在模糊查找时比较方便 like ,从上级可以找到所有下属机构。


6. 拷贝代码：
	* form 路径修改
	* 对象名修改
	* URL修改
	* 


7. 分包流程命名 ，流程名称自动生成   【风格 流程标题 标题 命名标题】
*

	【供应商名称】集中采购供应商审批流程

	 分包计划:
	申请单位【工程名称】分包计划审批流程
	如:安全生产部【金塘大浦口集装箱码头前期工程（土石方工程）】分包计划审批流程

	招标文件编审发放
	组织招标单位【工程名称】招标文件编审审批流程
	如:安全生产部【金塘大浦口集装箱码头前期工程（土石方工程）】招标文件编审审批流程

	开标
	组织招标单位【工程名称】开标审批流程

	询标
	组织招标单位【工程名称】询标审批流程

	定标
	组织招标单位【工程名称】定标审批流程

	分包合同评审
	组织招标单位【分包合同名称】分包合同评审流程

	分包合同签订
	组织招标单位【分包合同名称】分包合同签订审批流程

	分包合同变更
	【变更协议】分包合同变更审批流程

	 分包付款申请
	【分包合同名称】分包付款申请审批流程

	 分包结算
	【分包合同名称】分包结算审批流程
* 都显示创建人，时间（保留修改人，时间）
* 金额右对齐
* 

8. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day159 2011年4月1日

1. 通用样式有个样式图片对应文档，可以不断丰富。

2. 明细列表参考代码：
	询标发流程页面：tosendcheckbidinquiry.jsp
	-----
	...
		<tr class="input_table_title" height="22px">
			<td colspan="5"><b>【分包计划明细】</b></td>
		</tr>
		<tr>
			<td colspan="5">
				<table width="100%" border="0" align="center" style="height:22;cellspacing:0;cellpadding:0;text-align:center;" >
					<tr>
						<td class="input_table_title3">分包内容</td>
						<td class="input_table_title3">组织招标单位</td>  
						<td class="input_table_title3">招标形式</td>
						<td class="input_table_title3">计价方式</td> 
						<td class="input_table_title3">预计分包金额</td>
					</tr>
					<s:iterator value="plandetails.getList()" status="index">
						<tr>
							<td class="table_input_td" style="text-align:left;padding-left:1em;"><s:property value="content"/></td>
							<td class="table_input_td" align="left"><s:property value="bidorgname"/></td>
							<td class="table_input_td" align="center"><s:property value="invitebidtypename"/></td>
							<td class="table_input_td" align="left"><s:property value="valuationtypename"/></td>
							<td class="table_input_td" style="text-align:right;padding-right:1em;"><s:property value="presubmoney"/></td>
						</tr>
					</s:iterator>
				</table>
			</td>
		</tr>	
	...
	-----

3. 人员选择框
getMan('invitebiddistribute.distributer','invitebiddistribute.distributername','2')



4. 分包，开标，询标，定标，共用弹出框 ，通过  type参数来实现子分支

var url = path + "/common/selectdialog/index.jsp?type=getinvitebidforbidinquiry&page=getinvitebid.jsp&time=" + escape(new Date());

	CommonldialogAction.java
	-------
	...
			}else if(dotype.equals("getinvitebid")){
				String subtype = request.getParameter("type");
				if(subtype.equals("getinvitebidforopenbid")){
					page = new InvitebidService().getInvitebidListByType("", getPageIndex().intValue(), Constant.PAGE_SIZE,1);
					page.setUrl(request.getContextPath()+"/pm/Invitebid_getInvitebidList.action?searchtype=1");
					request.setAttribute("searchtype", "1");
				}else if(subtype.equals("getinvitebidforbidinquiry")){
					page = new InvitebidService().getInvitebidListByType("", getPageIndex().intValue(), Constant.PAGE_SIZE,2);
					page.setUrl(request.getContextPath()+"/pm/Invitebid_getInvitebidList.action?searchtype=2");
					request.setAttribute("searchtype", "2");
				}else if(subtype.equals("getinvitebidforbidpick")){
					page = new InvitebidService().getInvitebidListByType("", getPageIndex().intValue(), Constant.PAGE_SIZE,3);
					page.setUrl(request.getContextPath()+"/pm/Invitebid_getInvitebidList.action?searchtype=3");
					request.setAttribute("searchtype", "3");
				}
			}
	...
	-------

5. 列表查询，高级查询，弹出框查询等地方的表单都要设置不不可回写，每次条件都归零。

6.  系统文件上传/下载/删除 ，从action 的doadd方法开始，将dto的附件和dto的ID关联好，保存在 T_Sys_Doc 表，一个dto可以对应多个附件（一对多）方式
保存。根据dto的ID找到附件信息，部分表记录如下：

id									name				seqname				refid								filesize		uploaduser	uploaddate	modulename	remark	companyid	createdate					lastdate	lastemployeeid		ftype
402881ed21a4c2f60121a4c62d180003		~$管控考核.doc	12440099996401.doc	402881ed21a4c2f60121a4c62cf90002	162			NULL		NULL		NULL		NULL	NULL		2009-06-03 14:19:59.640		NULL	NULL			NULL
402881f9224e08f501224e0a82ac0002			111.pdf			124684982750047.pdf	402881f9224e08f501224e0a81830001		584331		NULL		NULL		NULL		NULL	NULL		2009-07-06 11:10:27.500		NULL	NULL			NULL

表里保存了基本的附件信息。在后续操作时，方便对附件进行控制。


文件管理由公用的类完成：
	------
	...
		public String doadd() {
			invitebid.setPid(plandetail.getId());
			String refid=new InvitebidService().addInvitebid(invitebid,prepickproviderfbs);
			new FileManager().addFiles(refid, getUpload(),getUploadFileName());//
			return SUCCESS;
		}
	...
	------


7. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day160 2011年4月6日

1. 分包管理bug



2. 多个删除操作，在同一个事务进行 

	dao层应该只是数据库操作，不要有事务，这样，不同的service在调用dao层代码时，可以自己加上需要的长短事务。
避免事务嵌套。

必须系统的 basedao 里对于通用的操作就提供了带事务和不带事务的方法，部分代码如下：
	-----
	...
		//直接调用保存
		public String addEntry(SimpleData data) {
			Session session = HibernateUtil.getSession();
			try {
				session.beginTransaction();
				session.save(data);
				session.getTransaction().commit();
			} catch (JDBCException ex) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(ex.getSQLException());
			} finally {
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
			return data.getId();
		}
		
		//和其他操作一次，实现同一个事务控制
		public String addEntry(Session session, SimpleData data) {
			session.save(data);
			return data.getId();
		}
	...
	-----

	通用的逻辑，越简单，约束越少，越方便公用。sservice·层就是一个原子操作（有事务的话），调用service代码的话，它
封装了几乎所有的业务逻辑。

	这里，本系统流程删除操作是有自己的事务的，数据库操作是调用公用的basedao；在某些地方，比如供应商要停用，那么就要 
重置流程，这时在修改供应商记录信息的同时，也要修改流程信息，这里需要事务，就不方便直接调用流程里的流程删除逻辑（有自己的
事务要求），否则事务嵌套。需要再到供应商的service层，提供删除流程信息等的逻辑（如果存在删除的情况下）。

	在流程处理的service层里，可以提供一个带事务删除的原子操作逻辑，再加上一个不带事务的，方便其他地方事务调用，这样不用
需要手动删除流程信息的service里重复写删除流程信息的逻辑。【系统 事务嵌套】

Archivesutil.java 流程增删改等操作中间跳转工具类（便于自定义）。

系统待处理流程可以删除的，并没有删除流程记录。 ？需要上面的逻辑


供应商管理 的service层应用了上面的逻辑。 providerinfoservice  ，真暂时抽取到这个service类里。可以放到流程处理service类里公用。
流程service提供了这个方法 doDelProcess(session,processid) 。

	------
	...
		/**
		 * 删除供应商同时删除引用到它的数据（停/启用记录，评价记录,流程记录等）
		 * @param ids
		 */
		public void delProviderinfos(final String[] ids) {	
			Query q = null;
			new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
				@Override
				public void doInHibernate(Session session) {
					FlowprocessService service = new FlowprocessService();
					//
					delProviderSuspendInfos(session,ids);
					for (int i = 0; i < ids.length; i++) {				
						Object o = session.get(Providerinfo.class, ids[i]);
						Providerinfo p = (Providerinfo)o; 
						if(p != null && ConvertUtil.isNotEmpty(p.getProcessid())){
							service.doDelProcess(session, p.getProcessid());//删除流程信息
						}
						session.delete(o);
					}
				}
			});
			FileManager.delUploadFiles(ids, null);//
		}
	..
	------

3. 流程历史数据 可以在进行流程操作时保存到一个中间表  【系统 流程历史 历史流程】

字段如下：

	id	DTO的ID		流程处理ID	存入日期

这样可以得到DTO的历史流程记录。

4. 编码生成放在保存操作里，避免冲突
	客户端可以生成一个编码，只是查看下，真实的编码还是在保存时，从数据库读取最新编码，生成当前编码，保存。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day161 2011年4月7日

1. 流程通过后不允许的操作（参考 subcontractplandetail）

	主记录流程通过后，在查询对应的子记录集中附加上流程状态信息，根据这个状态判断是否有相应子记录
操作权利。

2. 参考分包计划/计划明细里的标签切换样式 （parentid的传递）

3. 效果评价 设计 （供应商/ 分包商）

发起人在效果评价发起时，定义好评分细项（评分大项不变-后面要出统计值），


4. 数据库 唯一性的字段，在数据库层加上唯一约束，保存操作时捕获可能的sql异常。【唯一性字段 处理】

5. 异步请求的同步执行 ，需要根据请求的返回值来判断后续的操作时
	providerinfoinput.jsp
	-----
	...

		var xmlHttpRequest;
		function createXMLHttpRequest(){
		    if(window.XMLHttpRequest){ 
			xmlHttpRequest = new XMLHttpRequest();
		    }else if(window.ActiveXObject) { 
			try{
				xmlHttpRequest = new ActiveXObject("Msxml2.XMLHTTP");
			}catch(e){
				try {
				xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
				}catch(e){}
			}
		    }
		    if(xmlHttpRequest == null){
			alert("Does not Create XMLHttpRequest Object");
			return false;
		    }
		}
	...
	...	
		//这段代码在 ajaxnew.js定义，可以提供下面的同步公用方法，以适应不同的场合。【js 同步执行 同步操作】
		function sendAsynchronRequest2(url,parameter,callback){
			createXMLHttpRequest();
			if(parameter == null){
				xmlHttpRequest.onreadystatechange = callback;
				xmlHttpRequest.open("GET",url,false);//-------------------------设置为false，同步执行 （后面的js代码需要等待）
				xmlHttpRequest.send(null);
			}else{
				xmlHttpRequest.onreadystatechange = callback;
				xmlHttpRequest.open("POST",url,false);//-------------------------设置为false，同步执行 （后面的js代码需要等待）
				xmlHttpRequest.setRequestHeader("Content-Type","application/x-www-form-urlencoded;");
				xmlHttpRequest.send(parameter);
			}
		}
		//
		function checkIdCard(theField){
			var obj = document.all(theField);
			if(obj.value == ""){
				return false;
			}
			if(!checkEmpty("providerinfo.contactmanoneidcard","身份证号"))return false;
			var contactmanoneidcard = obj.value;
			var url = "<%=request.getContextPath()%>/pm/Providerinfo_checkUnique.action?time="+escape(new Date());
			var param = "field=contactmanoneidcard"+"&contactmanoneidcard="+contactmanoneidcard+"&id=<s:property value='providerinfo.id'/>";
			sendAsynchronRequest2(url,param,checkIdCardCallback); // 发送异步请求	
		}

		String.prototype.trim = function(){return this.replace(/^\s+|\s+$|\n+\r+/g,"");}

		function checkIdCardCallback(){
			if( xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200){  
							
				var resultData = xmlHttpRequest.responseText;
				resultData = resultData.trim();
				if(resultData == "1"){
					alert("身份证号已经存在，不能重复");  // 
					document.all("providerinfo.contactmanoneidcard").value = "";
					isvalididcard = true;
				}else{
					isvalididcard = false;
				}
			}else{

				
			}
		}
	...
	-----

6. 配置角色权限 policy-config.xml 和 menu*-config.xml 配置权限 

配置好后，分配权限方可看到菜单和访问

步骤（这里是角色权限）：
	* 定义角色权限 统一在一个文件里，细化到每个功能点的权限（比如增删改等-底层是控制访问action的URI来配置的）
	* 系统通过分析上面xml配置文件的逻辑，提取出相应的权限点（可以保存到数据库中）
	* 在页面上，对上面配置的功能点加上对应的权限控制逻辑。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day162 2011年4月8日

1. 配置页面（jsp）权限

jsp页面 ，部分代码：

	-------
	...

	<% 
	com.frame.util.LoginInfo logininfo = (com.frame.util.LoginInfo)session.getAttribute("LoginInfo"); 
	String userrid=logininfo.getUserId();
	String  aclstring=logininfo.getAclstring();

	%>

	<td  nowrap align="center" id="chkId18">
		    
		    <s:if test="minStates == 1 || minStates == 0">
							
						<%if(aclstring.indexOf("5.1.3.4.5")>=0) {%>
							 <s:if test="maxStates == 1"><font color="red">待审批</font></s:if>
							 <s:if test="maxStates == 2">处理中</s:if> 
					    <%}%>
						<%if(aclstring.indexOf("5.1.3.4.5")<0) {%>
							 <s:if test="maxStates == 1"><font color="red">待审批</font></s:if> 
							 <s:if test="maxStates == 2">处理中</s:if> 
						<%}%>
			    </s:if>
				    <s:if test="minStates == 2 ">
						<s:if test="maxStates == 2">
							<%if(aclstring.indexOf("5.1.3.4.5")>=0) {%>
								审批通过
							<%}%>
							<%if(aclstring.indexOf("5.1.3.4.5")<=0) {%>
								审批通过&nbsp;
							<%}%>
						</s:if>
				    </s:if>
				    <s:if test="maxStates == 3">
					       <%if(aclstring.indexOf("5.1.3.4.5")>=0) {%>
						<font color="red">
								未通过&nbsp;
						</font> ||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a></font>
						  <%}%>
						 
					 <%if(aclstring.indexOf("5.1.3.4.5")<=0) {%>
						<font color="red">
								未通过&nbsp;
						</font>  
						 
						 <%}%>
						 </s:if>
				     <s:if test="maxStates == 4">
						<%if(aclstring.indexOf("5.1.3.4.5")>=0) {%>
							已撤回流程 
							||&nbsp;<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">重新审批</a>
						<%}%>
						 
				     </s:if>
					 <s:if test="minStates == null ">
							<%if(aclstring.indexOf("5.1.3.4.5")>=0) {%>
								<font color="blue"><a href="Bid_toSendCheck.action?id=<s:property value="id"/>">发起审批</a></font>
							<%}%>
							 
					 </s:if>
					 
						  <%if(aclstring.indexOf("5.1.3.4.6")>=0) {%>
				<a href="<%=request.getContextPath()%>/pm/Bid_input.action?id=<s:property value='id'/>" /> ||&nbsp;修改</a>
				<%}%>
				  <%if(aclstring.indexOf("5.1.3.4.7")>=0) {%> 
					<a href="#" onclick="delAll('<s:property value="id"/>')" /> ||&nbsp;高级删除</a>
				  <%}%>
					 
					 </td>
	...
	-------

	可以写到公用action中，其他地方也用到的。


2. 高级删除 

	可以删除流程通过的数据，同时删除引用到它的子表数据。在action里调用service里通用的删除相关数据代码。


3. 生成供应商，分包商建表语句 （注意外键名称不要重复，表不允许删除一般就是外键引用的原因，在删除前解除约束即可，如下：）

	有2张表(t_pm_fb_bidpicksub ,t_pm_fb_subcontractevaluation )，引用了这个表的ID ,要删除这个表需要去掉约束（对应2个约束），这种语句powerdesigner
会自动生成好。
	-----
	...
		if exists (select 1
		   from dbo.sysreferences r join dbo.sysobjects o on (o.id = r.constid and o.type = 'F')
		   where r.fkeyid = object_id('t_pm_fb_bidpicksub') and o.name = 'fk_t_pm_fb_pickdetail_reference_t_pm_fb_pick')
		alter table t_pm_fb_bidpicksub
		   drop constraint fk_t_pm_fb_pickdetail_reference_t_pm_fb_pick -- 删除约束
		go

		if exists (select 1
		   from dbo.sysreferences r join dbo.sysobjects o on (o.id = r.constid and o.type = 'F')
		   where r.fkeyid = object_id('t_pm_fb_subcontractevaluation') and o.name = 'fk_t_pm_fb__reference_t_pm_fb_subcontractsyndic')
		alter table t_pm_fb_subcontractevaluation
		   drop constraint fk_t_pm_fb__reference_t_pm_fb_subcontractsyndic
		go

		if exists (select 1
			    from  sysobjects
			   where  id = object_id('t_pm_fb_bidpick')
			    and   type = 'U')
		   drop table t_pm_fb_bidpick
		go

		/*==============================================================*/
		/* Table: t_pm_fb_bidpick                                       */
		/*==============================================================*/
		create table t_pm_fb_bidpick (
		   id                   varchar(40)          not null,
		   pid                  varchar(40)          null,
		   remark               varchar(8000)        null,
		   flowstatus           varchar(2)           null,
		   processid            varchar(40)          null,
		   employee             varchar(40)          null,
		   createdate           datetime             null,
		   lastemployee         varchar(40)          null,
		   lastdate             datetime             null,
		   constraint pk_t_pm_fb_bidpick primary key (id)
		)
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '
		   
		   ',
		   'user', @currentuser, 'table', 't_pm_fb_bidpick'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '招标评审表ID',
		   'user', @currentuser, 'table', 't_pm_fb_bidpick', 'column', 'pid'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '备注',
		   'user', @currentuser, 'table', 't_pm_fb_bidpick', 'column', 'remark'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '流程状态：
		   
		   1 通过
		   
		   2 未通过
		   
		   3 评审中
		   
		   4 ',
		   'user', @currentuser, 'table', 't_pm_fb_bidpick', 'column', 'flowstatus'
		go
	...
	-----


4. 数据库系统对象的访问 

select *
		   from dbo.sysreferences r join dbo.sysobjects o on (o.id = r.constid and o.type = 'F')
		   where r.fkeyid = object_id('t_pm_fb_bidpicksub') and o.name = 'fk_t_pm_fb_pickdetail_reference_t_pm_fb_pick'


5. 给发送流程设置默认流程名称
* 在action的发起流程方法 toSendCheck 里加上下面代码 （具体名称自定义）
			//流程标题
			String title=plandetail.getBidorgname()+"【"+contract.getPrjname()+"】"+"开标审批流程";
			request.setAttribute("title",title);
* 在发起流程页面 tosendcheck***.jsp 加上：
			  <jsp:include page="/erp/oa/oaflow/notoasendheader.jsp">
				<jsp:param name="title" value='<%=request.getAttribute("title")%>'/>
			  </jsp:include>
ok

6. 高级删除 相关联的数据删除问题，基础数据会被多地方引用到。？ 

	高级删除就是能删除流程通过后不允许修改的记录，可以共用删除逻辑，但在操作这个功能上加上权限控制。

7. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day163 2011年4月9日

1. 分包合同角色权限配置

	subcontractsyndiclist.jsp 分包合同评审
	contractunderwritelist.jsp 签订
	subcontractdeliverlist.jsp 交底
	subcontractalterlist.jsp 变更
	subcontractpaymentlist.jsp 付款申请
	subcontractclosinglist.jsp 结算


	<eb:right id="" />
2.  供应商管理 ，分包管理部分表和数据字典整理：

	* 表整理
	* 字典
		1) 分包方式 ：	PM-FB-FBFS 

		2) 供应商 供应类别字典 
			PM-GYS-SHEBEI	设备类别
			PM-GYS-CAILIAO	 材料类别



3. 分包商数据导入 

	如何导 ？取？

4. 基础数据(经常被引用)不提供简单删除功能，只放开高级删除功能 （不是随便说删就删的，关联的地方可能会很多）

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day164 2011年4月10日

1. 评价
	大项定义在数字字典，子项定义部分，可后续评价页自定义

2. no binding 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day164 2011年4月11日

1. 建字典数据 ，根据字典生成表格。

	评分标准模板定义在数据字典里，保存评分记录时，从字典拷贝到评分表里，后面的读取就不经过字典，这样可以
避免，评分评好了，但在后续的评分中字典数据（评分标准）变了，而导致以前的评分条目和结果的改变，也就是评分评
好了，就是历史了，不会因为后续的标准改变而去改变。
	从数据存储来说，就是字典数据拷贝到评分表里去，评分表的记录不依赖字典。评好后什么样就是什么样。

2. HibernateUtil.getSQL2DtoList  【事务多开启 事务嵌套】
	public List<Prepickproviderfb> getPrepickproviderfbListByPid(final String parentid){
		Object obj = new HibernateUtil().execute(new HibernateCallback(){
			@Override
			public Object doInHibernate(Session session) {
				String sql = "select o.*,a.name as providername from t_pm_fb_prepickproviderfb o left join t_pm_providerfb a on a.id = o.providerid where o.parentid = '"+parentid+"' ";
				
				return HibernateUtil.getSQL2DtoList(sql, Prepickproviderfb.class);
			}
		});
		
		return (List<Prepickproviderfb>)obj;
	}

上面事务嵌套了，也多开了事务 ，改为下面的代码：
	public List<Prepickproviderfb> getPrepickproviderfbListByPid(final String parentid){
		String sql = "select o.*,a.name as providername from t_pm_fb_prepickproviderfb o left join t_pm_providerfb a on a.id = o.providerid where o.parentid = '"+parentid+"' ";
		return HibernateUtil.getSQL2DtoList(sql, Prepickproviderfb.class);
	}

doInHibernate 本身就有事务的 ，HibernateUtil.getSQL2DtoList也带事务，两者不必重用。


3. 子表数据更新 【子表更新】
子表更新时，同时删除已经被删除的数据（比如子表是个列表，也许某条记录内容变了，也许某条已经被删除了）

4. 给几个表的唯一字段加上唯一约束

	create unique nonclustered index [idx_t_pm_providerinfo_uid] on t_pm_providerinfo
	(
		 license asc
	)

5. 注意 basedao里 
	addEntry(session ,data) 和 addEntry(data) 区别的用意，方便原子操作，和事务回滚。


6. hibernate的 criteria ，批量删除 效率较高 【学习】

	protected void deleteDetails(Session session, String id) {
		Criteria criteria = session.createCriteria(Bidpicksub.class);
		criteria.add(Expression.eq("pid",id));
		List<Bidpicksub> bidpickList = criteria.list();
		for(Bidpicksub bid : bidpickList){
			if(bid != null){
				session.delete(bid);
			}
		}
		
		
	}

	从 criteria ，同样的操作对于不同处理方式，各有各的招，选择了某个处理方式，就要用它最好的方式来实现你的目的。
这就要求你要有比较深入的掌握。


7. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day165 2011年4月12日


1. 弹出框，如果有特殊的筛选要求，比如预选分包商弹出框 getpreproviderfb.jsp ,最好重新建一个，不用通用的页面，方便定制
筛选条件。

2. 流程最后一个人的操作，逻辑处理 （分包商是否合格）—— 这个逻辑可以不要的，最后一个人填写不同意就是不合格，流程
就是这样设计的。
	比如：最后一个人，决定xxx是否合格之类的需求。
	
	SendarchivesAction 判断是否最后一个人签核
	archivecheckview.jsp
	t_pm_project_invitebidreviews_view.jsp


3. 使用DWR的异步请求 ，改为同步执行（某些需要异步判断才能提交的情况），参考下面：

	DWR请求异步改为同步
	文章分类:Web前端 
	   今天写CODE的时候,依靠DWR实现下拉框选择查询并分页显示.在遍历后台传回的LIST时,需要用到其他关联表信息(事实上可以依靠HIBERNATE实现关系查询的,由于本人OSIV配置不合理,OSIV没有设置/dwr/*路径过滤,所有DWR的不能正确解析PO,导致返回值的LIST里面各元素为NULL,不是LIST为NULL),所以再次调用另一个SERVICE从后台传回数据到前台. 但由于异步性,后台数据还未传回,页面元素已被更新.需要第二次SERVICE传回的数据值全部显示为NULL. 
	   查阅资料发现DWR可以通过配置将方法的调用有异步改为同步. 

	要设置全局同步机制： DWREngine.setAsync(true); 
	或者设置单次调用同步： 
	Service.method(params, { callback:function(data) { ... }, async:false }); 

		单次还可以这样设置 ：
			DWREngine.setAsync(true); 
				。。异步请求。..
			DWREngine.setAsync(false); 


			DWREngine.setAsync(true); 
				。。同步请求。..
			DWREngine.setAsync(false); 

4. 评分公用表
	t_pm_graderecord //打分表 detailid 引用明细表ID
	t_pm_gradetemplet //评分标准模板表

	加上各模块的独立 评分明细表 

	t_pm_pro_evaluation

	t_pm_pro_evaluationsub

//////////////////////////////////////////////
select * 
--delete
from t_pm_pro_evaluation

select * 
--delete
from t_pm_pro_evaluationsub

select *
--
from t_pm_graderecord

注：供应商评价 表关系
	t_pm_graderecord 和 t_pm_pro_evaluationsub 以detailid引用主表ID
	t_pm_pro_evaluationsub 和 t_pm_pro_evaluation 以pid引用主表ID
	t_pm_pro_evaluationsub 表内部以  parentid 区分父子关系

//////////////////////////////////////////////

	
5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day166 2011年4月13日

1. 取公用评分模板 - 供应商 评分

	type = 1 && parentid = "" or null 

	出来供应商模板列表，选择使用。
	用select就OK

	t_pm_pro_evaluationtemplet1.jsp

2. iframe 异步更新页面 异步加载页面 异步加载 iframe加载
	iframe与当前页面对象互访的问题，iframe的加载状态问题（事件：onreadystatechange），根据状态iframe改变
当前页面，或者当前页判断状态主动取子页面的数据去更新。

	例子：
		tosendcheckevaluation.jsp
		t_pm_pro_evaluationtemplet1.jsp

3. 用 iterator  去重复迭代一个集合时，status 还是原来的顺序，第二次迭代还是取了元素在迭代列表里的位置。因此，出现
第二次迭代不从 0 开始的误解。要重复根据条件迭代集合时，可以另外用个局部变量来表示迭代序号。
	status - 是迭代元素的索引，是多少就是多少，不因迭代而改变。

参考代码：

	t_pm_pro_evaluationtemplet1.jsp
	------
	...
		<s:set name="subnum" value="1"/>
		<s:iterator value="gradetitlesublist" status="subs" id="sub">
		<s:if test="#top.id == #sub.parentid">
			<tr>
				<td class="table_input_td"><input type="checkbox" name="ids"  value="<s:property value="id"/>" ></td>
				<td class="table_input_td"><s:property value="#subnum"/><s:hidden name="evaluationsublist[%{#ss.index}].detailid" value="id"/></td>
				<td class="table_input_td"><s:textfield name="gradetitlesublist[%{#subs.index}].name" cssStyle="width:95%;"/></td>
				<td class="table_input_td"><s:textfield name="gradetitlesublist[%{#subs.index}].standard" cssStyle="width:95%;"/></td>
				<td class="table_input_td"><s:textfield name="gradetitlesublist[%{#subs.index}].weighting"  cssStyle="width:95%;"/></td>
				<td class="table_input_td"><s:textfield name="subtract" value="" cssStyle="width:95%;"/></td>
				<td class="table_input_td"><s:textfield name="evaluationsublist[%{#subs.index}].name" readonly="true" cssStyle="width:95%;"/></td>
			</tr>
			<s:set name="subnum" value="#subnum+1"></s:set>
		</s:if>
		</s:iterator>
	...
	------

4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day167 2011年4月14日

1. 对象集合转换 ，标签嵌套，跳过标签嵌套，用OGNL表达式取想取的值 OGNL
	<s:textfield name="evaluationsublist[%{#subs.index}].standard" value="%{#sub.standard}" cssStyle="width:95%;"/>

# 取不是位于值栈里的对象

	%{ xxx} 告诉struts2，这里面的内容是要去运算的，不只是字符串 ，比如  ... value="${#obj.name}" 与 value="obj.name" 不一样的，前者
取出对象的值，后者只是字符串。
struts2的OGNL表达式。


2. gettemplet这个 js函数 是流程取流程模板用的，自己取函数名称时，不要重复了。

3. 评分表分值控制 分值逻辑 JS控制分值

	* 首先 权重控制在 100%，分数暂时按照100分，算上权重就是100分为总分，
	* 再控制好上面的总分
	* 再控制每个大项的分值分配，所有大项满分值的和等于总分，且都大于等于0
	* 再根据上面的大项的分，控制好其下面子项的分，要求同上。

	多个对象，对象又包含子对象，并且这些对象都要一次性保存，也就是还没有生成ID之前，就要区别出各个之间的父子关系。
本次的评分模块，可以利用【一次签核一个子项对应一个评分】记录的条件，在保存子项（评分记录保存与其同步）时，把返回
的ID做为其子表的parentid，来实现多父子关系的保存。
	还有一种方式，先迭代大项，在内部再迭代子项时，给子项赋个标识，标记是属于那个大项的，比如把大项的序号放到子项里，
这样，在保存时，就可以根据序号来给子项归类，在保存时设置parentid为大项的ID（session.save()过后就有id了）。



4. 带子表数据审批的模块，没有子表数据情况下，不允许审批。 ？业务

5. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day168 2011年4月15日

1. 评分发起后，在签核过程中评分标准不允许修改，根据发起人设计好的标准打分就OK。

2. struts2的自动装配，如果出严重装配错误，不会进入方法，拦截器拦截下来

	比如 表单名称重复 

3. 供应商评分步骤：
	* 发起人发起评分流程，选择评分模板，并进行必要的修改（模板是基础，但在发起时可以修改，后续打分时不允许变动），发起流程  -- 修改待实现
	* 后续签核人，开始对上述评分标准进行打分
	* 直到流程结束，得到统计分值
	*

 
4. hibernate的 session.createQuery 和 session.createSQLQuery  看清楚

	createQuery 是要mapping好的对象
	createSQLQuery 就是sql 语句

5. 找出日期最新的记录
	
	select id 
	from t_pm_pro_evaluation
	where senddate = (select max(senddate) 
				    from t_pm_pro_evaluation 
				    where providerid = '4028946a2ec75dbe012ec77831a60015'
				    )

ProviderinfoDao.java
	-------
	...

		public Page getListwithEvaluation(String where, int pageindex, int pagesize,int type) {
			StringBuffer sql = new StringBuffer("select o.*,c.name as cityname,e.minStates,e.maxStates,cast(stuff((select ','+name from t_sys_dictvalue where  charindex(id,o.supplytype,0)>0 FOR XML PATH('')),1,1,'') as varchar(8000)) as supplytypename from t_pm_providerinfo o ");
			sql.append(" left join ( select min(states) as minStates,max(states) as maxStates ,processid from t_oa_flowactivities group by processid) a on o.processid = a.processid ");
			sql.append(" left join t_sys_dictvalue c on o.city = c.id ");

			//得到供应商最新评价记录（日期最新）
			sql.append(" left join ( select * from t_pm_pro_evaluation where senddate in ( select max(senddate) from t_pm_pro_evaluation group by providerid ) ) d on d.providerid = o.id ");

			sql.append(" left join ( select min(states) as minStates,max(states) as maxStates ,processid from t_oa_flowactivities group by processid) e on e.processid = d.processid ");
				sql.append(" where o.type = 2 ");//集中
				sql.append(" and o.providerstatus <> 4 ");//去掉停用的
				sql.append(" and (a.minstates = a.maxstates and  a.maxstates = 2) ");
				sql.append("  ");//合作过
			sql.append(where);
			sql.append(" order by o.code asc ");
				return HibernateUtil.getSQL2MapPage(sql.toString(), pageindex, pagesize);
		}	

	...
	-------

7. 统计供应商评分


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day169 2011年4月18日

1. sql server 字符串匹配查询  / 小数点截取 转换

-- 劳保供应商   
select * 
from t_pm_providerinfo 
where charindex((select id 
				 from t_sys_dictvalue 
				 where dicttypecode = 'PM-GYS-CAILIAO' 
				 and name like '%劳保%'),supplytype)>0     


select userid,name,course,convert(numeric(8,2),round(code,2))as code from sc where....

2. js 算术运算 ，字符串转数字

	parseInt("1234blue");   //returns    1234    
	parseInt("0xA");   //returns    10    
	parseInt("22.5");   //returns    22    
	parseInt("blue");   //returns    NaN   

参考：http://apps.hi.baidu.com/share/detail/22231526


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day170 2011年4月19日

1. 历史平均分

历次合格的综合分的平均


2. 流程审批操作逻辑

	在 SendarchivesAction 的 docheck 方法里，这里可以加上流程评分保存操作（加上自己的分支（类似loadinfo方法的分支））。


3. 每次评价，有本次评价综合分，和历史评价综合分









+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day171 2011年4月20日

1. 每次评价流程记录本次流程的综合平均分，和本供应商历史评价平均分（评价通过）
	查看页面看的是本次评价流程信息，在供应商效果评价list页，星级按照评价表取统计（获得最终综合分和星级）。


	供应商评价最终综合分，取法为，取本供应商最新一次通过的评价记录，把这次评价的平均分和历次平均分（本次之前
通过流程的评价的综合分的平均）求个平均，即为最终得分，并根据得分划分星级。

	供应商评价业务 【评价 业务】

2. 供应商dto 加上 2 个新字段，保存评价信息，减少查询统计次数   【sql 修改】

	providerinfo.java

	1 star - 星级 int
	2 finalscore 最终得分 numeric(12,2)

	alter table t_pm_providerinfo add star varchar(40)
	alter table t_pm_providerinfo add finalscore numeric(12,2)

	-- -- alter table t_pm_providerinfo alter column star varchar(40)
	注意：mysql的alter语句  ，MySQL官方参考手册
		alter table account modify  column ACC_ID int

		Drop Column:

		alter table icecream drop column flavor ;

		Drop Column is used to remove an entire column and all its data from a table.
		Add Column:

		alter table icecream add column flavor varchar (20) ; 

		Add Column is used to add a column to your existing table.
		Change:

		alter table icecream change taste flavor varchar (10) ; 

		Change is used to change the column name. In our example it changes "taste" to be "flavor".
		Add Unique:

		alter table icecream add unique (quantity)

		Add unique adds a new column to your table only if it does not already exist.
		Modify:

		alter table icecream modify flavor VARCHAR(35) ; 

		Modify is used to change a column's size. In our example we increase the size of the "flavor" column to 35 characters.

		
	供应商评价通过后，会改变供应商表的字段，这个字段只有在下次评价通过后才会被刷新。 【星级 更新】


	修改为：每次删除评价流程时，将此次流程关联到的供应商的评价星级更新下，保证实时状态。


alter 其他操作： 【alter table】
	修改字段名：
	alter table tab_info rename column createname to thisname;

	修改字段属性：
	alter table tab_info alter column thisname varchar(200) not null;

	修改默认值
	alter table tabinfo add constraint df default('嘿嘿') for thisname;

	删除字段 
	alter table t_pm_providerinfo drop column companyid

	alter table t_pm_providerfb drop column companyid


3. 评价发起人不评价 ，逻辑加上
评价不合格，重发流程


4. ZHHX 系统 数据权限

select * from ebtemp..MyTempTable402881ed2196419c01219648603b0012 where id=o.prjdeptid

放在action的getquerywhere里构建，传入到list方法。

在baseaction里初始化：
	-------
	...

		/**
		 * add by 吕杨林
		 * 处理根据当前人orgid 取得查询业务数据的org的方法
		 * 所有列表控制权限都调用这个方法
		 */
		public String getQueryOrgId(String orgidStr){
			////	String where=" and ("+orgidStr+ "  in (select id from getDefultPerssionOrg('"+this.getLoginInfo().getOrgId()+"') ) or "+orgidStr+" in (select id from getPerssionOrg('"+this.getLoginInfo().getUserId()+"')))";
			//String where  = " and  exists (select 1 from ##MyTempTable"+this.getLoginInfo().getUserId()+" where id="+orgidStr+") " ;
			String where  = " and  exists (select 1 from ebtemp..MyTempTable"+this.getLoginInfo().getUserId()+" where id="+orgidStr+") " ;
			return  where;
		}
	...
	-------

	然后再action的 getquerywhere 方法里装配为where条件带入list页，用于数据权限控制。

	BidAction
	-------
	...
		private String getQuerywhere(String level)
		{
			String where= this.getQueryOrgId("o.orgid");
	...
	-------

5. zhhx 正式库 http://192.168.20.17

6.     <Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" URIEncoding="UTF-8"/>

    <Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443"/>



7. 系统 高级查询 配置 ，字典的数据都是以 name 来匹配的 ，配置时注意

	高级查询 在action的getquerywhere也要做相应的配置（特别是子查询时，需要查询某个父表的数据，要带上parentid）
	否则，高级查询会查出其他记录的子表记录。


8. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day172 2011年4月21日

1. 补全数据权限
	数据权限是根据机构来控制的，机构可见的权限 ---> 保存记录时，应该保存创建机构ID


	分包管理部分的数据权限继承于合同数据的权限，合同数据可见，后面分包引用合同的数据也就可见。

	zhhx系统数据权限的配置是到人的，每个用户都各自配置。【zhhx 数据权限 配置 权限配置】
	每个人配置有哪些机构权限点，在登录时，取出此次登录用户的数据权限数据保存到临时表中。后续的数据权限控制
依靠这张表匹配。
	
	临时表表名：ebtemp..MyTempTable

2. 模板权限公用配置 ？

	分包商模板管理页面 ，供应商也用这个，目前可以在分包商评价里加上修改模板的权限，从而供应商部分也有权限。



3. 利用sql server的客户端分析sql的执行效率，及其优化

	通过 sql server 的执行计划来分析sql瓶颈 ，比如：
	
	下面是sql server 计划对 T_OA_FLOWACTIVITIES 表提升效率的建议
	/*
	USE [zhhx_test]
	GO
	CREATE NONCLUSTERED INDEX [<Name of Missing Index, sysname,>]
	ON [dbo].[T_OA_FLOWACTIVITIES] ([processid])

	GO
	*/

4. 各个模块间数据的调用逻辑，本系统，写到对应的模块代码中（action，service）比较好，在权限控制和查询控制上，容易控制。
不会因为表顺序不一致，导致别名不统一(getquerywhere查询条件也只用以当前dto表为准。)

别名不统一的情况，可以改为能一致使用的状态。

	合同弹出框的方法，写到合同部分的代码中。引用到得地方直接调用其action或service即可。

注意：由于查询字段是公用的，引用的地方字段名改变的话，会影响自己这边的结果。【弹出框 引用 逻辑 位置】


5. SQL执行效率，sql语句优化，从 left join ,right join 看起 【sql优化 与 left join , right join】

例子：

	取流程通过的分包计划下面的计划明细记录：

		select c.minStates,c.maxStates,o.* 
		from t_pm_fb_subcontractplandetail o 
		right join t_pm_fb_subcontractplan a on a.id = o.parentid
		join ( select min(isnull(states,0)) as minStates,max(isnull(states,0)) as maxStates,processid from t_oa_flowactivities group by processid  ) c on c.processid = a.processid 
		where (c.minStates = 2 and c.maxStates = 2)
  

	以那张表为准要取好，这里是根据计划表来取明细，取那些计划流程通过的对应计划下面的计划明细数据。

6. 测试时，注意配置了数据权限的模块页面显示的内容和数据库的内容不一定一致（有些数据权限限制了）

7. 弹出框的数据权限 

	1）第一次打开弹出框时，从 CommonldialogAction 进入，在哪里给列表方法加上数据权限  getQueryOrgId("a.prjdeptid") ，
	2）然后是后续的查询从action里走，由action的getquerywhere配置的数据权限来控制。


8. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day173 2011年4月22日

1. 供应商是否也要根据机构来设置可见及操作权限，根据所属机构等字段。


2. struts2的OGNL表达式进行方法运算时，首先要取到对象，比如下面要调用string类得indexOf方法，首先取到string对象，
再对对象调用其方法：

	%{#aclstring}.indexOf('str') ，而不是 #aclstring.indexOf('str') (后面这个是取aclsting的值，再和后面的拼接)

			<s:if test="%{#aclstring}.indexOf('5.2.4.1.4')>=0">
				<a href="#" onclick="templet();">维护评价标准模板</a>
			</s:if>
			<s:else>
				<span style="color:gray;" title="没有权限">维护评价标准模板</span>
			</s:else>


3. 历史综合分与删除掉的评价记录关系，评价过了，即使删除其评价分值也应统计在内，现实中，如何处理作废的统计。【评价 业务】



4. 评价的js控制 发起时控制 100 分 ，打分时控制在满分值之内即可。 打分js验证

5.  js调用样式，js控制样式  js操作样式

看下面：

	background-color Attribute | backgroundColor Property  Internet Development Index 

	--------------------------------------------------------------------------------

	Sets or retrieves the color behind the content of the object. 

	Syntax

	HTML { background-color : sColor }   // html的调用方式 
	Scripting object.style.backgroundColor [ = sColor ]    // 脚本调用的方式


例子：
	function checkisvalidvalue(gotscoreobj,standardscorefieldname){
		alert(document.all(standardscorefieldname)+"_"+document.all(standardscorefieldname).value);
		if(gotscoreobj != null && gotscoreobj != "undefined"){
			var gotscore = gotscoreobj.value;
			standardscoreobj = document.all(standardscorefieldname);
			if(standardscoreobj != null){
				var standardscore = standardscoreobj.value;
				standardscore = parseFloat(standardscore);
				if(gotscore >=0 && gotscore <= standardscore){
					gotscoreobj.style = "";
					return true;
				}else{
					alert("分值范围为: 0 - "+standardscore+" ");
					gotscoreobj.style.backgroundColor = "red"; // js这样调用 和html标签调用区别
					return false;
				}
			}else{
				return false;
			}
		}else{
			return false;
		}
	}


6. js 删除node child removeChild removeNode 找到自身并删除 【js 节点删除 dom 节点删除】

	gotscoreobj.parentNode.getElementsByTagName("span")[0].removeNode(this); //找到自身节点，删除自己这个节点。




7. id  name  行，列标签是没有name属性的，要标识它们可以用 id 来标识。

8. js 的用document.all(id) 根据id取值时注意  【js 根据id取对象 document.all(id)】

	var inputs = document.all(titleid);

如果有多个对象为同一ID，则返回一个集合，如果只有一个则返回的是对象。

也就是 inputs.length 在document.all(id) 只返回一个对象是，调用就是错误的，它只是个对象而不是集合。


9. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day174 2011年4月23日

1. 测试

供应商删除companyid字段， sql 修改
-- 删除分包商companyid
alter table t_pm_providerfb drop column companyid

2. 分配权限

PM_市场经营_查看  
 PM_市场经营_增删改  
 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day175 2011年4月24日

1. 需求变动 

分包商增加字段 通讯地址 address  sql 修改

	alter table t_pm_providerfb add address varchar(200) 



2. 处理招标文件预选分包商是重复的情况    —— 根据预选分包商表ID，取到分包商ID

标书发放也重复。

通过存与选分包商表的主键ID，做为标识即可 prepickid ,存入到招标文件发放表以及后面的，询标明细表，定标明细表

通过取到 prepickid ，再去取providerid，解决providerid可以重复选，但预选列表和招标文件评审的预选列表一致（不是全部分包商出来）。

以标书发放为例先实现。

标书发放表 t_pm_fb_invitebiddistribute 的 partbidorgid 存 prepickid



修改 询标明细表 ，定标明细表字段   sql 修改

providerid 修改为 prepickid 

	
	EXEC sp_rename 't_pm_fb_bidinquirysub.[providerid]', 'prepickid', 'COLUMN'	
	EXEC sp_rename 't_pm_fb_bidpicksub.[providerid]', 'prepickid', 'COLUMN'	

a

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day176 2011年4月25日

1. sql 语句的where条件里，用了 or 的话，需要用括号标识范围，

比如 ：

（1）
    where
        o.type = 2  
        and a.maxStates = 3  
        or o.providerstatus = 4  
        or o.star = 7   
        and o.name like '%test%' 
（2）
    where
        o.type = 2  
        and ( a.maxStates = 3  
        or o.providerstatus = 4  
        or o.star = 7  )
        and o.name like '%test%' 
上面在 or 的后面要再加and的话，需要把or的条件括好，否则结果就不准确。 或条件 匹配

2. 供应商，分包商，根据年份生成流水号编码，取得本次录入年份的最大号加1


3. 把分包商的合格分包商与合作过项目挂上联系 供应商业绩
	评审通过且合作过进入合格分包商

材料业绩：

	项目名称、供货周期（第一次供货时间及最后一次供货时间）、结算金总额、合同份数，这几个字段的信息来源于材料管理子系统，
【供货周期计算方法：材料管理中的入库日期，第一次以最早入库时间和最后一次入库时间计算】

t_pm_Materialcontract 



设备业绩:

	设备类业绩字段清单：采购单位、采购数量、采购金额、采购时间，该模块中的信息从设备系统中的设备采购信息模块中读取。

设备采购信息表 
	t_pm_equipment_purchase
设备采购信息详细表 
	t_pm_equipment_purchasesub




4. IDE debug 

debug模式出bug可能是ide的问题，重启下，再不行，就重新部署应用（大小写之类都可能导致bug）

还有一种情况，那就是服务器出问题了，比如tomcat，文件更新进去了，但访问时返回的却是旧页面内容。



5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day177 2011年4月26日

1. 材料部分业务

	材料合同签订 -> 入库 -> 产生入库单 -> 进行合同结算

2. 供应商培训

3. 事务并发 测试   【流程 覆盖】

案例1：
	通过debug方式，把处理停留在 一个事务过程中，看另一个同样处理的事务是否会更新数据库？


案例2：流程严重问题   【并发 问题 从这里就要解决掉】
	描述：2个用户，都点开同一个供应商A的发情审批页面，都填写好流程主题，设置好流程，此时用户1点击发起流程，提交流程，
此时用户1可以到待处理流程里看到他刚发起的流程，此时用户2点击发起流程，发起好后，用户2也能看到待处理流程列表里看到自己刚
发起的流程，此时用户1再去看自己刚发起的流程时，数据（用户1发起的流程）就丢失了。此时，只有用户2发起的流程通过了，供应商A
的审批状态才会显示流程通过，用户1发起的流程就是垃圾数据了。


	原因：用户2发起流程操作的逻辑里覆盖了用户1发起流程逻辑操作的记录，
		    最初始的原因在，发起流程操作的逻辑里，具体可以看下面部分代码：

		    ------
		    ...
		    1. 发起新流程

			/**
			 * 发起新的流程
			 */
			public String sendCheckProcess()
			{
				Flowtemplet flowtemplet = new Flowtemplet();
				String id = flowprocess.getTempletid();
				flowtemplet =  new FlowtempletService().loadFlowtemplet(id);
				flowtemplet.setFlowxl(flowprocess.getFlowxml());
				//new FlowtempletService().updateFlowtemplet(flowtemplet);
				
				flowprocess.setCreatedate(new Date());
				flowprocess.setLastdatetime(new Date());
				flowprocess.setStates("1");
				flowprocess.setOperationid("0"); //0:流程流转;1:收发文管理;
				flowprocess.setLastemployeeid(getLoginInfo().getEmployeeId());
				flowprocess.setCompanyid(getLoginInfo().getCompanyId());
				flowprocess.setTablename(flowtemplet.getTablename());
				flowprocess.setTempletid(flowtemplet.getId());
				flowprocess.setCode(new FlowprocessService().getNewCode());

				new ProviderinfoService().sendprocess(request,flowprocess,providerinfo);//   看下面

				return SUCCESS;
			}


		    2. service层处理发起流程逻辑
			/**
			 * 保存流程 节点   和修改
			 */
			public String sendprocess(final HttpServletRequest request,
					final Flowprocess flowprocess, final Providerinfo providerinfo) {
				return (String) new HibernateUtil().execute(new HibernateCallback() {
					public Object doInHibernate(Session session) {
						String processid = new FlowprocessService().doAddOrSendProcess( //看下面
								session, request, flowprocess);
						providerinfo.setProcessid(processid);
						if (ConvertUtil.isNotEmpty(providerinfo.getId())) {
							providerinfoDao.updateEntry(session, providerinfo);
						} else {
							providerinfoDao.addEntry(session, providerinfo);
						}
						return null;
					}
				});
			}


			3. 流程处理公用代码 FlowprocessService.java

			/**
			 * OA以外模块中使用
			 * @param session
			 * @param request
			 * @param flowprocess
			 * @return
			 */
			public String doAddOrSendProcess(Session session,HttpServletRequest request, Flowprocess flowprocess) {
				String table_name = request.getParameter("table_name");
				updatestatus(table_name,flowprocess.getId(),"3"); ///重新审批修改状态为正在签核
				String username="";		//定义签核人
				if (ConvertUtil.isNotEmpty(flowprocess.getId())) { // ------------------ 看这里：问题出在这个 if 语句里
					delFlowactivities(session, flowprocess.getId()); // ----------------- 根据上面的案例2，这行代码覆盖了用户1发起的流程信息。本段逻辑需要修改
					new FlowprocessService().updateFlowprocess(flowprocess);			
				} else {
					new FlowprocessService().addFlowprocess(flowprocess);
				}
		    ...
		    ------

	在发起审批页面里，点击发起流程时，里面的处理逻辑需要修改，部分代码如下：

4. 


	
sql 修改  其他地方修改补充

	alter table t_pm_providerfb alter column isvalid varchar(10)




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day178 2011年4月27日

1. 分包管理培训

	合格分包商为通过初评并合作过，只出现在合格分包商列表，不再新引进中出现。




2. input 页面，输入页面 ，左边窄了点，是因为附件表单撑开了页面。

在 uploadfiledetail.jsp 把文件表单域的宽度改为 75% ，以适应各种分辨率查看。

3. 角色权限配置 高级修改 功能 配置了 action 的input 方法导致的问题，

input被配置了权限，导致点击增加时没有权限，可以把高级修改的方法改为 doupdate方法。

4. 公用无事务删除流程记录方法 流程删除

	FlowprocessService.java

	// OA以外模块中使用
	public void doDelProcess(Session session, String processid) {
		delFlowactivities(session, processid);
		flowprocessDao.delEntry(session, processid, Flowprocess.class);

	}

	其他流程地方，要手动删除流程，可以调用这个方法，包括到自己的业务事务中。

5. 多表查询 效率 左连接 右连接 left join 效率 right join 效率 联合查询 效率 sql 优化
（1）
////
select * 
from t_user a 
where exists(select 1 from t_id b where a.iid = b.id)
////
（2）
比较下面2个sql语句

a.
	--------
	...
		    select
			top 15 o.*,
			f.name as qyformname,
			c.name as cityname,
			cast(stuff((select
			    ','+name 
			from
			    t_sys_dictvalue 
			where
			    charindex(id,o.supplytype,0)>0 FOR XML PATH('')),
			1,
			1,
			'') as varchar(8000)) as supplytypename 
		    from
			t_pm_providerinfo o  
		    left join
			(
			    select
				min(states) as minStates,
				max(states) as maxStates ,
				processid 
			    from
				t_oa_flowactivities 
			    group by
				processid
			    
			) a 
			    on o.processid = a.processid  
		    left join
			t_sys_dictvalue c 
			    on o.city = c.id  

			left join
			    t_sys_dictvalue f 
				on f.id = o.qyform  
			where
			    (
				a.minstates =  a.maxstates --  ----------------------这里的where条件表达方式，和下面比效率很低，下面是变量和常量比，这里是变量和变量比
				and  a.maxstates = 2
			    )  
			    and (
				o.type = 2  
				and o.providerstatus <> 4  
				and o.star <> 7  
				and o.star <> 8 
			    )     
			order by
			    o.code asc
	...
	----------
b.
	----------
	...
			    select
				top 15 o.*,
				f.name as qyformname,
				c.name as cityname,
				cast(stuff((select
				    ','+name 
				from
				    t_sys_dictvalue 
				where
				    charindex(id,o.supplytype,0)>0 FOR XML PATH('')),
				1,
				1,
				'') as varchar(8000)) as supplytypename 
			    from
				t_pm_providerinfo o  
			    left join
				(
				    select
					min(states) as minStates,
					max(states) as maxStates ,
					processid 
				    from
					t_oa_flowactivities 
				    group by
					processid
				    
				) a 
				    on o.processid = a.processid  
			    left join
				t_sys_dictvalue c 
				    on o.city = c.id  

				left join
				    t_sys_dictvalue f 
					on f.id = o.qyform  
				where
				    (
					a.minstates = 2
					and  a.maxstates = 2
				    )  
				    and (
					o.type = 2  
					and o.providerstatus <> 4  
					and o.star <> 7  
					and o.star <> 8 
				    )     
				order by
				    o.code asc
	...
	----------
	上面的例子，涉及到 where 子句的优化，



6. js 动态绑定方法 

innHTML 与动态方法绑定

	----
	...
	//选择个人或企业
	function checkprotype(obj){
		var objs = document.all("lxtype");
		var span1 = document.getElementById("span1");
		var span2 = document.getElementById("span2");
		
		var licname1 = "营业执照注册号:<font color='red'>*</font>";
		var licfield1 = "<input name='providerinfo.license' class='inputcss' />";
		var licname2 = "身份证号:<font color='red'>*</font>";
		var licfield2 = "<input name='providerinfo.contactmanoneidcard' class='inputcss'/>";
		if(objs[0].checked == true){//选择身份证号
			var licobj = document.all("providerinfo.license");
			if(licobj != null){
				licobj.value = "";
			}
			span1.innerHTML = licname2;
			span2.innerHTML = licfield2;
			document.all("providerinfo.contactmanoneidcard").attachEvent("onblur", checkIdCard);
		}else{
			var cardobj = document.all("providerinfo.contactmanoneidcard");
			if(cardobj != null){
				cardobj.value = "";
			}
			span1.innerHTML = licname1;
			span2.innerHTML = licfield1;
			document.all("providerinfo.license").attachEvent("onblur", checklicense);
		}
	}
	...
	-----

7. 流程的过程逻辑可以看看 flowprocessservice 这个类
	原子操作
8. 手机号正则验证 ，这个一般不验证为好，规则是在变的 （或者必须即时维护）

	Mobile : /^((13[0-9])|(15[^4,\\D])|(18[0,5-9]))\d{8}$/



9. 并发 并发处理 sql server 并发 

	非常严格的情况采用悲观锁，常用的方法是乐观锁

1）悲观锁，正如其名，它指的是对数据被外界（包括本系统当前的其他事务，以及来自外部系统的事务处理）修改持保守态度，因此，
	在整个数据处理过程中，将数据处于锁定状态。悲观锁的实现，往往依靠数据库提供的锁机制（也只有数据库层提供的锁机制才能真正
保证数据访问的排他性，否则，即使在本系统中实现了加锁机制，也无法保证外部系 
统不会修改数据）。
2）乐观锁（ Optimistic Locking ） 
	相对悲观锁而言，乐观锁机制采取了更加宽松的加锁机制。悲观锁大多数情况下依靠数据库的锁机制实现，以保证操作最大程度的独占性。
但随之而来的就是数据库性能的大量开销，特别是对长事务而言，这样的开销往往无法承受。
而乐观锁机制在一定程度上解决了这个问题。乐观锁，大多是基于数据版本（ Version ）记录机制实现。何谓数据版本？即为数据增加
一个版本标识，在基于数据库表的版本解决方案中，一般是通过为数据库表增加一个 “version” 字段来实现。读取出数据时，将此版本号
一同读出，之后更新时，对此版本号加一。此时，将提交数据的版本数据与数据库表对应记录的当前版本信息进行比对，如果提交的
数据版本号大于数据库表当前版本号，则予以更新，否则认为是过期数据。







+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day179 2011年4月29日

1. 系统角色权限控制 

2. 










+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day180 2011年5月3日

1. innerHTML 操作，丢失原来里面对象的引用 引用丢失

	theinput.parentElement.innerHTML = theinput.parentElement.innerHTML + alertstr;

	注：上面这个执行好后， theinput.parentElement 对象就无效，丢失了。

2. 声明式事务 系统如果采用声明式事务，就可以避免事务嵌套问题

	利用spring的事务管理，实现多个操作的原子性。

参考：

Spring 通过AOP技术可以让我们在脱离EJB的情况下享受声明式事务的丰盛大餐，脱离Java EE应用服务器使用声明式事务的道路已经畅通无阻。但是很大部分人都还认为脱离Java EE应用服务器就无法使用JTA事务，这是一个误解。其实，通过配合使用ObjectWeb的JOTM开源项目，不需要Java EE应用服务器，Spring也可以提供JTA事务。 

 正因为AOP让Spring拥有了脱离EJB容器的声明式事务能力，而JOTM让我们在脱离Java EE应用服务器下拥有JTA事务能力。所以，人们将AOP和JOTM称为Java软件开发的两个圣杯。




3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day181 2011年5月5日

1. 系统返回功能控制 ，qlevel = 1 与 qlevel =2 的情况   返回页面为空问题 

	下面的方法，是被弹出框调用的，属于二级列表 要传递 2 进去，否则跳转时url不正确，

		/**
		 * 选择工程弹出框
		 * (分包管理-分包计划)
		 * @return
		 */
		public String getContractListFb(){
			if (new BackPage().exec(request,response,2)){
				String qlevel=request.getParameter("qlevel");
				page = new ContractService().getContractListFb(getQuerywhere(qlevel), getPageIndex().intValue(), Constant.PAGE_SIZE);
				page.setUrl(request.getRequestURI());
			}
			return CONTRACTLISTFB;
		}

补充：（系统返回功能类）
	--------
	...
		public class BackPage {
			Log log = LogFactory.getLog(BaseAction.class);

			/**
			 * level是列表的级别，是第一层列表还是第二层
			 * 
			 * @param request
			 * @param level
			 */
			public boolean exec(HttpServletRequest request, HttpServletResponse response,
					int level) {
				log.info("返回功能设置值----");
				HttpSession session=request.getSession();
				String back = request.getParameter("back");//从查看页面等按返回按钮的标志
				String redirect = request.getParameter("redirect");//返回后页面强制跳转的标志
				
				
				if (back != null && "1".equals(back)) //单击返回按钮后，从session取值，并跳转页面
				{
					try 
					{
						String url=(level==1?(String)session.getAttribute("back1"):(String)session.getAttribute("back2"));

						response.sendRedirect(url);
						return false;
					} catch (Exception e) {
					}
				}else //不是返回的时候，把参数连接成字符串，放到session里
				{
					Enumeration qnames = request.getParameterNames();
					String qstring = "";
					while (qnames.hasMoreElements()) {
						String qname = (String) qnames.nextElement();
						String[] qvalues = request.getParameterValues(qname);
						for (int j = 0; j < qvalues.length; j++) {
							qstring = qstring + java.net.URLEncoder.encode(qname) + "="
									+ java.net.URLEncoder.encode(qvalues[j]) + "&";
					
						}
					}
					String backurl = request.getRequestURI() + "?" + qstring;
					if (level==1)
					{
						session.setAttribute("back1",backurl);
					}else
					{
						session.setAttribute("back2",backurl);
					}
				}
				return true;
			}
	...
	---------

	注：前面根据 level 来判断是第一层还是第二层列表，并分别保存url



2. 修改 材料招标 T_RM_BIDDINGSTOCK 的paytype字段 sql 修改

	alter table T_RM_BIDDINGSTOCK alter column paytype varchar(5000)

	
3. 修改 分包结算 加新字段
	
	t_pm_fb_subcontractclosing --分包合同结算表 

	送审金额(元)		submitmoney numeric(16,2)
	送审日期		submitdate
	审核金额(元)		verifymoney
	审批日期		verifydate
	承建单位(组织机构)		contractorgid
	审核单位(组织机构)		verifyorgid


	alter table t_pm_fb_subcontractclosing add submitmoney numeric(16,2)
	alter table t_pm_fb_subcontractclosing add submitdate datetime
	alter table t_pm_fb_subcontractclosing add verifymoney numeric(16,2)
	alter table t_pm_fb_subcontractclosing add verifydate datetime
	alter table t_pm_fb_subcontractclosing add contractorgid varchar(40)
	alter table t_pm_fb_subcontractclosing add verifyorgid varchar(40)

	tip：用培训班里通过jdbc驱动与数据库交互的工具例子，进行操作，sql server 2005 不能访问 2008 的

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day182 2011年5月6日

1. 看这边物资部分（项目管理-物资管理）的问题

	1）材料招标-比价表-比价表：在比价表中进行“行操作”，当增加一行时，会在其他表中增加行，且增加的行不同于该表中行的样式。
	页面：
		biddingstockpriceinput.jsp  比价表jsp页

		手填即可

	2）材料合同 明细列表下出现debug信息 

	3）材料合同-合同内容 - 选择材料 弹出框材料页面排版 
		materialcontractinputs.jsp	合同内容input页
		materialdetaillselect.jsp 材料弹出框页
	4）需求计划-期间需求计划
		问题：6.	在“材料源”中选择材料时，如果在首页以外（不是点开的页面，比如下一页，或者搜索结果页）进行全选，会出现如下错误 （js错误）


2. 从源代码级别，用debug方式，走一遍strutus2的处理过程，后面再走容器的处理过程。 【框架 源码 源代码】

	* 先找到strus的源码
	* 找到servlet容器的源码



3. 框架里如果有些公用功能用了什么插件之类，一定要有个简易的说明（最好带个例子），比如弹出框，标签页，方便后续的
维护。

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day183 2011年5月9日

1. 材料选择框查询问题 
 问题：查询或换页不能全选
	     下一页没有按类别出结果（没有按照类别筛选）
	     查询结果不明确（导致结果更多）- sortid

	T_PM_MaterialSort 材料类别表
	T_PM_MaterialDetail 材料明细表
	T_PM_MaterialAllRequire 材料需求总预算表

	T_PM_MaterialSettle 合同结算表 
		增加备注字段  sql 修改

		alter table T_PM_MaterialSettle add remark varchar(8000)

		

2. 材料里 
 需求预算 ，材料合同的 ，view 和flowview方法，先判断processid的对象是否存在再调用，，类似

 				 flowprocess = new FlowprocessService().loadFlowprocess(materialcontract.getProcessid());
				 if(flowprocess != null){
					 flowview();
				 }


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day184 2011年5月10日

1. 物资问题

....见打印本

	采购入库，查看页面入库详细的内容只显示复检为“是的”记录


* 物资部分 类似 数量 * 单价 = 金额 的情况，把金额改为可手动写入 （迭代块和templet块都要改）

	materialallrequireinput.jsp 需求总预算
	materialtimeplan.jsp 期间需求计划
	materialallpurchaseinput.jsp 采购计划
	materialpurchasetimeplaninput.jsp 期间采购计划
	materialcontractinputs.jsp - materialcontractinfo.jsp合同内容
	materialsettleinput.jsp 合同结算
	materialstockinstockinput.jsp 采购入库
	materialstockinhireinput.jsp 租赁入库
	materialstockinallotinput.jsp 调拨入库
	materialJstockinstockinput.jsp 甲供入库
	materialotherinstockinput.jsp 其他入库
	materialstockoutdrawinput.jsp 领料出库
	materialstockbackinput.jsp 材料退库
	materialstockhirebackinput.jsp 材料退库
	materialstockoutallotinput.jsp 调拨出库

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 185 2011年5月11日

1. 物资，成本

类似物资，成本的 数量*单价 = 金额 中的金额也修改为可手动调整值。

	成本测算  costbudgetinput.jsp
			  人工费 costbudgetinput.jsp
			  材料费 costmaterialfeeinput.jsp
			  机械费 costmachinefeeinput.jsp
			  分包费 costspecsubinput.jsp

	期间目标成本  costincomeinput.jsp
			  人工费 worksubcheckinput.jsp
			  材料费 materialfeecheckinput.jsp
			  机械费 machinefeecheckinput.jsp
			  分包费 specsubcheckinput.jsp

	期间实际成本 costfactinput.jsp
			  人工费 factworksubinput.jsp
			  材料费 factmatinput.jsp
			  机械费 factmacinput.jsp
			  分包费 factspecsubinput.jsp


2. ...



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day186 2011年5月12日

1. 物资 -  统计数据有误

	成本测算 costbudgetinput.jsp 
		汇总 costworksubinput.jsp
	期间目标成本  costincomeinput.jsp
		汇总 incollectinput.jsp
	期间实际成本 costfactinput.jsp CostfactAction 
		汇总 factincolinput.jsp
	期间实际成本 costfactinput.jsp CostfactAction incolinput
		汇总 


	小节 都是在各自的 statistic(incolhms) 方法，做了类似*2的运算

2. js 根据name取对象（ js 的用document.all(id) 根据id取值）时，如果多个对象返回的是集合，如果只有一个返回的是对象，而不是集合，
这点注意   【js name js 取对象 checkbox取值 一个值】 【系统 多选 js 】

参考 day173 第8条 
	
	这个是材料弹出框的一个js方法  materialdetaillselect.jsp
	------
	...
	function selectpid(){
		for (var i=0;i<pgform.ids.length;i++){
			if(pgform.ids[i].checked==true){ 
				id=pgform.ids[i].value;
				if(id == "" || id == undefined){
					continue;
				} 
				change(id); 
			} 
		}
	}
	...
	------

		上面 pgform.ids 取的是pgform这个表单下所有name属性为ids的对象的一个集合，如果有多个name="ids"的对象返回的是一个集合，
	但，如果只有一个它返回的则是对象自身，而不是一个集合；和用js 的document.all(id) 根据id取值一样，如果有多个对象都是一样的id则返回
	对象集合，如果只有一个则是对象自身。
		所以，在处理时，要考虑到这个取法可能返回的只是一个对象的情况。

	所以，上面代码修改为，
	------
	...
	function selectpid(){
		if(pgform.ids != null && pgform.ids.length >0){
			for (var i=0;i<pgform.ids.length;i++){
				if(pgform.ids[i].checked==true){ 
					id=pgform.ids[i].value;
					if(id == "" || id == undefined){
						continue;
					} 
					change(id); 
				} 
			}
		}else if(pgform.ids != null){
			if(pgform.ids.checked==true){ 
				id=pgform.ids.value;
				change(id); 
			} 			
		}
	}
	...
	------

3. 材料入库 input 页 详细里面的 数量字段类型改为 保留小数点后四位

	表 T_PM_MaterialStockInStockDetail

	alter table T_PM_MaterialStockInStockDetail alter column quantity numeric(16,4)


其他地方：  待
	 总预算 
		


4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day187 2011年5月13日

1.  物资出入库对比





2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day188 2011年5月16日

1. 系统里少用sesion来存东西，并在存入后要有清楚的逻辑，否则session会逐渐庞大，影响性能。
一个用户登录，存入session，临时表等公用位置的内容有哪些，是否进行了垃圾清理？
	比如：用户登录信息，查询条件 等都存于session中。



2. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day189 2011年5月17日

1.  分包商管理变更

	加字段 引入单位（创建单位，所属单位） 

	sql 修改

	alter table t_pm_providerfb add createorgid varchar(40) 
	alter table t_pm_providerfb add parentid varchar(40) 



2. 系统部分模块功能删除dto时，同时删除附件。

3. T_Sys_DocDownNum 下载记录表 ，删除文件时，同时删除下载记录，可以调用公用的

	FileManager.delUploadFiles(ids, null);

4. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 190 2011年5月18日

1.  分包管理变更 - 分包付款申请
	
	t_pm_fb_subcontractpayment (分包付款申请表) 增加字段:变更金额(元) ,从分包合同变更里自动计算过来
		
	t_pm_fb_subcontractalter (分包合同变更表)

	_getsublist.jsp 合同弹出框页面
	

	sql 修改
	alter table t_pm_fb_subcontractpayment add changemoney numeric(16,2)


2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day191 2011年5月19日

1. 
	 employeeservice 的 getEmployeenameByEmpId 方法在ID找不到员工时会报null 注意下。

2. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day192 2011年5月20日

1. 评分模板 增加停用功能

	gradetempletlist.jsp

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day193 2011年5月24日

1.供应商变更


2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day194 2011年5月24日

1.供应商变更

flowstatus 1 通过
		2 未通过
		3 处理中
		4 待发起


2. 高级修改，更新等操作，需要单独的方法并配置相应的权限。【系统 权限 】
		doupdate 是修改操作的方法，已经配置了权限，对应高级修改可以再定义一个新方法比如 superupdate ，相应的配置权限，
	这样不会导致权限交叉。


3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day195 2011年5月25日

1. 系统性能

（1） No configuration found for the specified action 问题 （struts2会自动加上.action后缀，所以不用手动加，否则就冲突了）

	struts2配置有命名空间的Action: 解决No configuration found for the specified action错误  


	view sourceprint?
	 <!--struts2配置--> 

	   

	 <package name="default" namespace="/login"  extends="struts-default">  

	     <action name="myLogin" class="test.action.LoginAction">  

		  <result name="input">/index.jsp</result>  

		 <result name="success">/welcome.jsp</result>  

	      </action>  

	  </package>  

	     

	  <!--前台--> 

	     

		

	     <s:form  action="myLogin" method="post" namespace="/login"  >  

		 <s:textfield name="username" label="login.username"></s:textfield>  

		 <s:textfield name="password" label="login.password"></s:textfield>  

		 <s:submit label="login.submit"></s:submit>  

	     </s:form>  

	     

	  不需要添加.action后缀 

（2） 数据库访问不慢，在jsp渲染时，
	jsp处理的效率问题。



（3）


2. 机构树 权限 

	getOrgWorker3('subcontractclosing.verifyorgid','subcontractclosing.verifyorgname') - 带权限机构树

	getOrg('yearplanmain.orgid','yearplanmain.orgname') - 不带权限

3. 流程监控的查看页面，动态根据tablename返回相应的view页面。

	--------
	...
		<input type="hidden" name="table_name" value="<%=tablename %>"/>
		<jsp:include flush="true" page="<%=url_table %>">
			<jsp:param name="isend" value="false"/>
		</jsp:include>
	...
	---------

4. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day196 2011年5月26日

1. 系统建议 人性化

对于网速慢，需要等待的情况，可以做个通用的 等待图标 作为提醒。表示，操作正在进行，操作完成 的标志。


2. web测试 安全 负载 性能 等方面的测试



3. 取登录用户的上级机构 id
 
	getLoginInfo().getFilialeId()

4.  hashtable 是线程安全的的讨论 

首先方法是同步的，然后这个类里面的对象也是线程安全的 比如 Enumeration （Iterator 不是线程安全的，所以hashtable里选择了Enumeration）



5. 系统 账号初始胡问题

	系统账号表里保存了样式信息，有些账号的theme是null的倒置第一次登录时，样式图片等都无法显示。

6. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day197 2011年5月27日

1. 即时通信 IM (Instance Message)

	jabber httpbind 

	系统的 org.jabber.JabberHTTPBind 包

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day198 2011年5月28日

1. 分包管理变更
	subcontractclosinginput.jsp 分包结算

	

	signtype - 字段 结算类型
	operatorid - 经办人
	signcontent - 结算内容
	isclosed - 是否关闭分包合同 1 关闭；2不关闭



2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 199 2011年5月29日

1. 分包管理变更
	
	tosendchecksubcontractclosinginput.jsp 发起流程页


	 对表加字段，并改相关地方

	 t_pm_fb_subcontractclosing 分包合同结算表
	
	sql 修改

	alter table t_pm_fb_subcontractclosing add signtype varchar(2)  -- signtype = 1 总结算；2 分部结算
	alter table t_pm_fb_subcontractclosing add operatorid varchar(40) -- 经办人
	alter table t_pm_fb_subcontractclosing add signcontent varchar(5000) -- 结算内容 
	alter table t_pm_fb_subcontractclosing add isclosed varchar(2) -- 是否关闭
	alter table t_pm_fb_subcontractclosing add changemoney varchar(2) -- 是否关闭

	_getcontractclosingList.jsp 弹出框

	zhhx ,zhhx_test 

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day200 2011年5月30日

1. 分包付款 

	subcontractpaymentinput.jsp 

	_getsublist.jsp

	tosendchecksub.jsp

	t_pm_fb_subcontractpayment

	增加字段: 
		分包商申请金额/本期完成造价
		、已累计完成造价(不含本期)
		、其它扣款 otherdeductmoney
		、预付款返回 moneyback
		、本次净支付
		、付款说明

		已累计完成造价(不含本期): applymoneytotal 计算
		累计批准支付金额(元 不含本期):
	
	alter table t_pm_fb_subcontractpayment add otherdeductmoney numeric(12,2)
	alter table t_pm_fb_subcontractpayment add moneyback numeric(12,2)	


2. 分包合同签订 

	t_pm_fb_contractunderwrite

	保修金字段 改为 String 类型 depositratio
	
	alter table t_pm_fb_contractunderwrite alter column depositratio varchar(200)  - sql 修改


	
3. js 禁用radio


	-----
	...
			for(var i=0;i<isclosedobjs.length;i++){
				if(isclosedobjs[i].value == "1"){
					isclosedobjs[i].checked = "checked";
				}
				isclosedobjs[i].disabled = "disabled";
			}
			isclosedobjs.value = 1;
		}else{
			tempinput.value = "";
			span2.removeChild(tempinput);
			span2.removeChild(imgobj);
			span1.style.display = "none";
			span2.style.display = "none";
			//
			for(var i=0;i<isclosedobjs.length;i++){
				isclosedobjs[i].disabled = "";
			}
		}
	...
	------

	禁用需要每个都设置disabled属性。

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day201 2011年5月31日

1. js 创建对象 创建html对象 input对象

	-----
	...
		var factendateinput;
		function initinput(){
			factendateinput = document.createElement("input");
			factendateinput.setAttribute("name","subcontractclosing.factenddate");
			factendateinput.setAttribute("readonly",true);
			factendateinput.setAttribute("class","inputcss");
			factendateinput.setAttribute("style","displany:block");
		}
	...
	-----
	
	浏览器兼容 ：IE 不支持 setAttribute("name",xxx); 如何解决？
可以用 obj.innerHTML = "xx"; 方式来动态加入对象。


js 动态改变样式 etc

		balancemoney.readOnly = false;	
		balancemoney.className = "inputcss";


2. 原型 

原型 http://218.94.159.38:8888/zhhxpmv_demo/login.jsp  zhhx/666666 

http://218.94.159.38:8888/zhhxpmv_demo


3. 保修金累计值sql修改



4. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day202 2011年6月1日

1. 单位，查询丰富些


2. html标签 width属性

	用input的width属性和和style来控制对象的宽度，

	style="width:5em;"  有些情况比如浏览器兼容，width属性不好控制宽度时，可以用 style 来自定义宽度。

3. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day203 2011年6月2日

1. 分包评价


2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day204 2011年6月7日

1. 分包评价


2. 一个请求过来，服务器接收到请求到返回数据的整个过程，根据相应的源代码debug跟踪下，一个请求从发出到得到响应
经历了那些过程，那些部分的代码。

例如：从一个报错看流程

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day205 2011年6月8日

1. 本系统部分js功能，用jquery框架来实现

	选择器找到对象并进行操作

2. 
LW-2011-00220 评价条目重复 orgid重复left join时导致重复

	源头是对同一个分包商2个人以上进行评价发起操作，并发的问题。

	分包商评价是，先建立评价记录，在发起评价流程，新建的评价纪录只能发一次评价流程的，但2个过程分开了导致并发问题的
出现，对同一条评价记录，多人进行了发起流程的操作。

3. 用struts2的actionsupport提供的公用错误提示方法，提示action级别或者field级别的错误

jsp页面：
	<s:if test="getActionErrors().size > 0 ">
				有错误！
	</s:if>

java代码：
	public String list() {
		if (new BackPage().exec(request,response,1)){
			String qlevel=request.getParameter("qlevel");
			page = new BidpickService().getBidpickList(getQuerywhere(qlevel), getPageIndex().intValue(),Constant.PAGE_SIZE);
			page.setUrl(request.getRequestURI());
			addActionError("流程已发起，请勿重发！");
			return LIST;
		}
		
	    return null;
	}

或者，出错后，直接定位到出错页面去。




	if(ConvertUtil.isNotEmpty(obj.getProcessid())){
		throw new MyException("流程已被发起，请不要重复发起流程...");
	}
	// 抛出自定义异常后，定向到错误页面，报错。

	根据报错跳转页面的struts配置，如下：  【系统 异常处理 公用异常配置】

		<global-results>
			<result name="login" type="redirect">/login.jsp?timeout=1</result>
			<result name="error">/common/error.jsp</result>
		</global-results>

		<global-exception-mappings>
			<exception-mapping	exception="com.frame.exception.MyException" result="error" />
		</global-exception-mappings>
		
		// 全局异常定向 ，这样，可以手动抛出这个异常，定向到配置页面显示。

struts2 定义全局异常和局部异常

	<package name="logon" extends="struts-default">  
	      <!-- global-exception-mappings必需在action的上面 -->  
	       <!-- 全局异常 -->
	       <global-exception-mappings>  
	            <exception-mapping result="all" exception="java.lang.Exception">  
	                </exception-mapping>  
	        </global-exception-mappings>  

	        <action name="logon" class="com.LogonAction">  
	            <result name="succee">/logon/welcome.jsp</result>  
	            <result name="error">/logon/error.jsp</result>  

		    <!-- 局部异常 -->
	            <exception-mapping result="sql" exception="java.sql.SQLException"/></exception-mapping>  
	            <exception-mapping result="nullPoint" exception="java.lang.NullPointerException"></exception-mapping>  

	            <result name="nullPoint">/logon/nullpoint.jsp</result>  
	            <result name="sql">/logon/sql.jsp</result>  
	             <result name="all">/logon/all.jsp</result>  
	        </action>  
	    </package>  
系统 发起流程操作 并发控制：

	参考分包商效果评价，已发起流程的记录提示不能再次发起流程，在发起处理逻辑里判断

	在 baseService类里写个公用的根据 processid 取得状态的方法：



	在action 的发起流程方法里加上类似下面的语句，即可处理发起流程并发问题：

		------
		...
			//是否已发过流程,处理并发情况 by cs
			ProvidergradeService gradeservice = new ProvidergradeService();
			Providergrade obj = gradeservice.loadProvidergrade(providergrade.getId());
			if(ConvertUtil.isNotEmpty(obj.getProcessid())){
				int flowstatus = gradeservice.getFlowstatusByProcessid(obj.getProcessid());
				if(flowstatus == 1 || flowstatus == 3 || flowstatus == 5){//不能重复发起流程
					throw new MyException("流程已被发起，请不要重复发起流程...");
				}else{
					//处理重发评价流程(删除未通过的评价流程信息) -- 此处处理自己的逻辑，比如流程再次发起一些数据需要重置等
					String[] ids = {providergrade.getId()};
					gradeservice.updateProvidergradeAndReord(ids);
				}
			}
		...
		-------
		
		BaseService 
		------
		...
			/**
			 * 根据流程ID,取得流程的签核状态参数，用以判断流程的状态（刚发起，处理中，还是通过，不通过等）
			 * 用于需要知道某个流程的状态信息的地方<br/>
			 * by cs
			 * @param processid 流程ID
			 * @return 1-流程通过；2-未通过；3-处理中；4-待发起；5-已发起，未签核；6-流程撤回
			 */
			public int getFlowstatusByProcessid(String processid){
				int state = 0;
				Map<String,String> map = new FlowprocessService().getDtoFlowstatusByProcessid(processid);
				if(map != null){
					String minStates = map.get("minStates");
					String maxStates = map.get("maxStates");
					if("2".equals(minStates) && "2".equals(maxStates)){
						state = 1;
					}else if("3".equals(maxStates)){
						state = 2;
					}else if("4".equals(maxStates)){
						state = 6;
					}else if(minStates == null){
						state = 4;
					}else if("0".equals(minStates) || "1".equals(minStates)){
						if("1".equals(maxStates)){
							state = 5;
						}else if("2".equals(maxStates)){
							state = 3;
						}
					}
				}
				return state;
			}
		...
		------

	上面流程并发处理可以改进为下面的方式：参考分包效果评价发起流程控制：

		//是否已发过流程,处理并发情况 by cs
		ProvidergradeService gradeservice = new ProvidergradeService();
		Providergrade obj = gradeservice.loadProvidergrade(providergrade.getId());
		if(ConvertUtil.isNotEmpty(obj.getProcessid())){
			String flowstatus = gradeservice.getFlowstatusByProcessid(obj.getProcessid());
			if(flowstatus == 1 || flowstatus == 3 || flowstatus == 5){//不能重复发起流程
				throw new MyException("流程已被发起，请不要重复发起流程...");
			}else{
				//处理重发评价流程(删除未通过的评价流程信息)
				String[] ids = {providergrade.getId()};
				gradeservice.updateProvidergradeAndReord(ids);
			}
		}		
		
		调用baseservice里的 getFlowstatusByProcessid 方法，判断此流程ID的状态。

	再修改下，在action的sendcheckprocess方法里加入 ，下面代码 参考分包效果评价 流程

		ProviderfbAction.java

		---------
		...
			//是否已发过流程,处理并发情况 by cs
			ProviderfbService s = new ProviderfbService();
			Providerfb obj = s.loadProviderfb(providerfb.getId());
			if(ConvertUtil.isNotEmpty(obj.getProcessid())){
				String flowstatus = s.getFlowstatusByProcessid(obj.getProcessid());
				if(Constant.FLOWSUCCESS.equals(flowstatus) || Constant.FLOWROCESSING.equals(flowstatus) || Constant.FLOWJUSTSEND.equals(flowstatus)){//不能重复发起流程
					throw new MyException("流程已被发起，请不要重复发起流程...");
				}else{
					//处理重发流程(删除未通过的流程信息)
					s.delFlowAndResetStatusByDtoId(providerfb.getId());
					flowprocess.setId(null);
					providerfb.setFlowstatus(null);//后面有更新的逻辑，这里需要重置先
				}
			}
		...
		---------

		delFlowAndResetStatusByDtoId 方法需要各自的service层做业务类的修改，即可 ；
		参考 SubcontractplanService

		----------
		...
			/**
			 * 根据业务表ID,删除对应的流程信息，并重置流程相关字段
			 * 比如，删除流程，重发流程时用到，若有其他处理，可以扩展
			 * 
			 * 其他模块，可以参照修改，业务内容修改为所用模块的逻辑
			 */
			public void delFlowAndResetStatusByDtoId(final String id){
				new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
					@Override
					public void doInHibernate(Session session) {
						Subcontractplan o = (Subcontractplan)session.get(Subcontractplan.class, id);
						if(o != null && ConvertUtil.isNotEmpty(o.getProcessid())){
							//删除流程信息
							new FlowprocessService().doDelProcess(session, o.getProcessid());
	
							//更新dto的流程状态
							o.setProcessid("");
							o.setFlowstatus(null);
							session.update(o);
						}
					}
				});
			}
		...
		----------
4. 

fbno20110091



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day206 2011年6月9日

1. 分包评价 & 竣工


2. 硬编码

	if("3".equals(obj.getProcessid())){//流程未通过，被打回等，再次发起时删除流程记录
		//处理重发评价流程(删除未通过的评价流程信息)
		String[] ids = {providergrade.getId()};
		gradeservice.updateProvidergradeAndReord(ids);
	}else{
		throw new MyException("流程已被发起，请不要重复发起流程...");
	}

	//比如上面：
	判断流程状态，就是硬编码，如果把这些常量统一定义在配置文件里，或者定义为在一个公用的类的静态常量
	这样这里就直接调用，可以统一管理。

	系统中，比如数据字典等的定义，基本上都是硬编码，如果抽取为一个公用类得常量，则可以避免。比如系统中，
	现有的类 Constant.java ，就是用来定义常量的。只是，设计时，哪些常量一开始就没有把他放到这个类里去的习惯罢了（系统最初设计时，是考虑到的）。
	比如流程状态，现在有1,2,3,4 四个状态，就可以定义在这个类里，在编码时，直接调用名称即可，即使后面代表意思改变了
	只要在这个类里去改变就行（根据变量名总能找到正确的值）。【系统 硬编码 建议 少硬编码 多配置 多灵活性】

3. 分包商评价 重发流程时，重置模板，先置空 


4. struts2的OGNL表达式 ，可以将action的值，动态注入到配置文件中 ，如下：  配置文件使用OGNL
	-----
	...
		<action class="com.erp.sys.action.DictvalueAction" method="{1}"
			name="Dictvaluebdx_*">
			<result name="view">/erp/sys/dictvalueviewbdx.jsp</result>
			<result name="input">/erp/sys/dictvalueinputbdx.jsp</result>
			<result name="list">/erp/sys/dictvaluelistbdx.jsp</result>
			<result name="viewdic">/erp/sys/dictvalueviewdicbdx.jsp</result>
			<result name="inputdic">/erp/sys/dictvalueinputdicbdx.jsp</result>
			<result name="listdic">/common/selectdialog/_getdictbdx.jsp</result>
			<result type="redirect-action">
				Dictvaluebdx_list?dicttypecode=${dictvalue.dicttypecode}&amp;back=1
			</result>
		</action>
	...
	------
	// ${dictvalue.dicttypecode} 就是在返回result时，把action里的 dictvalue.dicttypecode 值取到作为重定向URL的一部分。
	（这些配置文件信息在系统启动时，存放在内存中的，在使用时，根据表达式替换相应的内容）



5. 分包商评价，数据丢失，有得分，没分项，等 由于选错了评分模板，比如 劳务分包商选择了专业分包评价模板。
	在增加评分记录时，由于 type 取错了表 ，应该去分包商表，而不是分包计划表

	LW-2011-00008

6. 中国核工业芜湖
	FBNO20110087


7.  表单对象内部取值  form 取值 elements
	elements Collection  Internet Development Index 

	--------------------------------------------------------------------------------

	Retrieves a collection, in source order, of all controls in a given form. input type=image objects are excluded from the collection.

	Syntax

	[ oColl = ] FORM.elements 
	[ oObject = ] FORM.elements(vIndex [, iSubIndex]) 

	Possible Values

	oColl Array of button, input, select, and textArea objects.  
	oObject Reference to an individual item in the array of elements contained by the object. 
	vIndex Required. Integer or string that specifies the element or collection to retrieve. If this parameter is an integer, the method returns the element in
the collection at the given position, where the first element has value 0, the second has 1, and so on. If this parameter is a string and there is more than one 
element with the name or id property equal to the string, the method returns a collection of matching elements. 
	iSubIndex Optional. Position of an element to retrieve. This parameter is used when vIndex is a string. The method uses the string to construct a collection
of all elements that have a name or id property equal to the string, and then retrieves from this collection the element at the position specified by iSubIndex. 


	form对象有个 elements 集合对象 ，比如取某个 select 的值 可以：form.elements["selectfieldname"].value 



8. bigdecimal 运算 不能连写，需要赋值，不要和stringbuffer混淆

	注意的是，bigdecimal的方法是返回值，不能类似 StringBuffer那样连着写的，bigdecimal运算后，结果需要赋值给一个变量才能保存下来。
	sum2 = new BigDecimal("0");
	sum2.add(providergrade.getSumscore());// sum2 还是 0 
	sum2 = sum2.add(new BigDecimal("1,2"));// 这时 sum2 才是1.2 

9. 
lw-2011=00186

川省环宇建筑劳务有限公司

	由于业务改变，结算改为多次结算，导致原来的一对一成为现在的一对多，故left join 时重复了 ，加入条件限定为一对一即可。

10. 左连接数据重复 left join 

	使用左连接查询时，有时候有重复的行，是因为后面连接的表对应左边有重复的记录，这时在 on 条件里要注意写好，保证一一对应即可。

	public Page getContractunderwriteList(String where, int pageindex,int pagesize) {
		StringBuilder sql = new StringBuilder();
        sql.append(" select p.code as providercode,p.name as providername,p.type,o.id as pid,o.subcode,o.subname,t.content,");
        sql.append(" b.bidpickmoney,c.prjname,org.name as prjdeptname,o.factstartdate,g.factenddate,p.id as providerid");
        sql.append(" from t_pm_fb_contractunderwrite o");
        sql.append(" left join t_pm_fb_subcontractclosing g on g.pid = o.id"); // 这张表对应上面表会有多条记录，故不能这样写（可以group by 下）
        sql.append(" left join t_pm_fb_subcontractsyndic s on s.id = o.pid");
        sql.append(" left join t_pm_fb_bidpicksub b on s.pid = b.id");
        sql.append(" left join t_pm_fb_prepickproviderfb j on j.id = b.prepickid");
        sql.append(" left join t_pm_fb_bidpick k on b.pid = k.id");
        sql.append(" left join t_pm_providerfb p on j.providerid = p.id");
        sql.append(" left join t_pm_fb_invitebid i on i.id = k.pid");
        sql.append(" left join t_pm_fb_subcontractplandetail t on i.pid = t.id");
        sql.append(" left join t_pm_fb_subcontractplan r on r.id = t.parentid");
        sql.append(" left join t_pm_contract c on c.id = r.prjid");
        sql.append(" left join t_hr_org org on org.id = c.prjdeptid");
        sql.append(" where 1=1 and o.flowstatus = '1'");
        sql.append(where);
		return HibernateUtil.getSQL2MapPage(sql.toString(), pageindex, pagesize);
	}




11. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day207 2011年6月10日

1. 分包付款 - 累计批准支付金额 字段目前根据申请时间自动计算，这种方式下，前面的值改变会影响这个值，不能保存时间点的
状态。

	历史数据问题的处理

subcontractpayment.summoney 

summoney 改为自动根据申请时间计算，需要修改的地方有：
	input
	view
	tosendcheck...
	流程签核页
	//list页 - list没这列暂不处理

	//在这个summoney值返回到视图前，都要按时间点计算得出

	proposerdate 申请日期

	factmoney 累计

2. 字符串转日期 
	java.sql.Date date=java.sql.Date.valueOf("yyyy-mm-dd hh:mm:ss"); 

	yyyy-mm-dd hh:mm:ss 12小时

	yyyy-mm-dd HH:mm:ss 24小时

3. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day208 2011年6月11日

1. 分包付款 - 累计保修金
	
	改为根据 申请时间 自动计算：累计保修金 = 分包付款里填写的保修金（针对某个合同）的和（除了付款类型是
	保修金的记录） - 除了付款类型是保修金的记录(对应此合同)

	即，保修金总额是变化的，随付款变化


2. 系统分页 与 order by 语句

	分页的结果集与order by语句有关系的，order by 会影响分页。

	



3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day209 2011年6月13日


1. 测试的重要性

	即使，很确定修改是正确的，在提交之前还是要做测试，避免大意。

	if(ConvertUtil.isNotEmpty(obj.getProcessid()) && !Constant.FLOWFAILE.equals(obj.getFlowstatus())){

	if(ConvertUtil.isNotEmpty(obj.getProcessid()) && !Constant.FLOWFAILE.equals(obj.getProcessid())){// need test

2. 结算总金额不能保存


3. 

	1) 分包商评价的申请日期
	2) 分包结算里累计分包付款
	3) 分包付款里的已累计完成造价（和分包商申请金额区别开-两个部门的不要叫法）这个造价只对某个部门有用
			分包商申请金额/本期完成造价:*   已累计完成造价(不含本期):  按时间点向前统计

		applymoneytotal
		subcontractpayment.summaintain 累计保修金
		subcontractpayment.maintain 保修金


	4) 

4. 分包商评价/效果评价 - 在评价流程结束后，才进行分包商星级状态的更新。原来逻辑也是这样，只是缺少判断，在流程不通过时，不去改变状态
	
	统计分数时，可能由于浏览器的原因导致分值统计不对。

	isvalid Y N

	doing

	t_pm_fb_providergrade
	SendarchivesAction.java

	测试： 连云港市泽隆土石方建筑工程有限公司


5. 系统发起流程操作的 sendCheckProcess() 方法，在更新dto时，可能会丢失原来数据库dto的属性（比如某个属性并没有在发起流程页面出现，则
更新时，就丢掉了）

	new ProviderfbService().updateProviderfb(providerfb);

	系统发起流程时，有些模块可以修改此流程对应的dto，但没有考虑到一些隐藏字段的保存，导致一些字段在更新时丢失。暂改为
发起流程页，不能修改dto（附件可以上传）。

注意 ：系统流程处理代码，里面的某些update方法所更新的对象，不少都有上面的问题  【系统 流程处理 逻辑 问题】



6. service层里使用一个回调来实现多事务的逻辑，在这个事务代码里，去调用相应的处理逻辑，并把session带过去，保证操作的原子性。

比如：某个service类的dowork方法

	doword(xxx){
		new hibernateutil().execute( new hibernatecallback(){
			xxdoinhibernate(){
				method1();
				method2();
				method3();
			}
		});
		
	}

	// 这里 execute 方法是一个带事务的方法，这里就是回调模式应用。hibernatecallback 是一个接口，看本文档有详细代码


7. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day210 2011年6月14日

1. 竣工管理问题 打印文档 20110608

	（1）竣工管理-过程验收  input页得工程选择框，出不来已经竣工的工程，为适应补录数据，先放开限制，能出现已经竣工的工程

	Management_getProjelist - 工程弹出框 form

		
		ManagementAction

		/* 先注释掉 筛选掉竣工工程的逻辑，为补录数据，补录过后，这里要放开 */
		/*
		where.append(" and id not in (select prjid from t_pm_project_over)"); //去掉竣工工程
		*/	





2. ANT  本系统有多个实例，可以用ant简化来部署
 ANT 的概念：ANT 是著名Java 开源组织 Apache 的一个项目，是一个基于 java 的build
工具。它可以使你通过 ant 脚本语言，自动你的项目拷贝到某个目录，发布项目，或者生成
一些代码，执行 SQL 语言。总之它可以帮助你完成项目开发中除了开发代码以外的大部分辅
助性工作。 
¾  ANT 的作用：当一个代码项目大了以后，每次重新编译，打包，测试等都会变得非常复
杂而且重复。JAVA 使用 ANT（一种流程脚本引擎） ，用于自动化调用程序完成项目的编译，
打包，测试等工作。每个 ANT 脚本（缺省叫 build.xml）中设置了一系列任务(target)。 
9.3.2 ANT 在 GWAP 中的使用


3. 分包商评价，统计分值的问题，

	有的记录，分值统计不完整，有些分值没统计上去，导致评价结果错误。	

	评分页面 ：t_pm_fb_providergrade_view.jsp




4. left join 左连接

	在多表连接查询，并统计数值时，可能会出现某列的字段为null的情况，这样列间运算时，需要对null的列，进行处理，
使计算正确。



5. 
_getsublist.jsp 

tosendchecksub.jsp

已累计完成造价(不含本期):  - 是否包含付款用途为保修金的记录 ？




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day211 2011年6月15日

1. 参考 day7第4条 line 1427 ，给分包管理部分模块加上 中间树 
	
	doing

	以分包计划为例子，加中间树，根据合同的prjid对应的合同的机构划分来划分筛选。
	

	
2. 系统流程并行处理的问题 

	系统流程并行处理，在进行评分时，要考虑到同时再打分的情况。

	并发，并行问题，在后台需要处理下。

3. 用hibernate的话，数据操作用HQL语言来实现，这样查询语句可以夸关系数据库。

4. 


累计保修金？计算

-----
    select
  a.subname,      
	(sum(maintain)-isnull(b.maintainpaid,0)) as maintainneedtopay ,
sum(maintain)  as tt1,
isnull(b.maintainpaid,0) as tt2
    from
        t_pm_fb_subcontractpayment o  
    left join
        t_pm_fb_contractunderwrite a 
            on a.id = o.pid  
    left join
        (
            select
                oo.pid,
                sum(isnull(oo.factmoney,
                0)-isnull(oo.otherdeductmoney,
                0)-isnull(oo.moneyback,
                0)) as maintainpaid     
            from
                t_pm_fb_subcontractpayment oo     
            left join
                t_pm_fb_contractunderwrite aa 
                    on aa.id = oo.pid     
            right join
                t_sys_dictvalue bb 
                    on (
                        bb.id = oo.paypurpose 
                        and bb.dicttypecode = 'paypurpose' 
                        and bb.name like '%保修金%'
                    )     
            where
                oo.proposerdate < '2011-06-15 00:00:00'     
               -- and aa.providerfbid = '402894912fc3320e012fc3cba3bb1d96'     
                and oo.flowstatus = '1'     
            group by
                oo.pid     
           -- having
              --  oo.pid = '402894a2305ddf42013061b5d3b13c23'    
        ) b 
            on o.pid = b.pid  
    where
        o.proposerdate < '2011-06-15 00:00:00'  
        --and a.providerfbid = '402894912fc3320e012fc3cba3bb1d96'  
        and o.flowstatus = '1'  
    group by
        o.pid,
        b.maintainpaid ,
a.subname 
   -- having
       -- o.pid = '402894a2305ddf42013061b5d3b13c23' 
-----


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day212 2011年6月16日


1. 继续分包模块加树
		系统管理-员工信息 
		Employee_index.action

		中间树的主页面，设计是公用的 common/frame.jsp ，系统部分是新建自己的frame（直接把src写在frame.jsp里，
	不通过action的index方法来构造）

	公用的有问题，新建 ，设置为此模块公用

	<result name="index">/common/frame.jsp</result>
	filialeid=<s:property value="filialeid"/>&
	<s:hidden name="filialeid"/>
	menupm-config.xml

	treeaction 返回树的数据的方法，要跳过装饰器（sitemash）否则，可能导致js错误，导致页面的js运行错误，页面显示不正常。
	
	【js错误 导致页面显示不正常 无显示 情况】比如用js动态构造页面，js出错的话，页面就显示异常。

	    //员工信息里，机构筛选sql
	    select
		top 15 o.*,
		b.name postnames 
	    from
		T_HR_Employee o ,
		t_hr_orgbak b 
	    where
		o.orgid=b.id 
		and   o.orgid in (
		    select
			id   
		    from
			f_org('702') 
		)

		// 上面 ，用 f_org(orgid) 来匹配是否是此机构的数据。
		
		action的 getQueryWhere() 方法里，对于字典数据查询的配置 。
		//中间树机构ID
			if(ConvertUtil.isNotEmpty(filialeid)){
				list.add(new Query(QConstant.T_ORG,"a.prjdeptid",QConstant.OP_IN,filialeid));
			}

	系统 构造查询条件代码 ：部分如下  【系统 查询 构造查询 查询实现 查询模块】
	QueryUtil.java 查询工具类，根据参数生成查询字符串，查询条件
	Query.java - 查询基本dto


	加中间树，要保证 机构参数的传递，要在相关页面加上 <s:hidden name="filialeid"/> 
	
	/*
	在 baseaction里设置 filialeid 属性并提供get /SET方法，然后在需要传递的地方带上 filialeid ，list页面设置隐藏字段，增删改操作，不是通过
	form提交需要吧filialeid作为get方法的参数，保证filialeid不丢失。
	*/
	// 结合系统公用的返回功能（保存上一次访问的url——其中修改，查看操作并不处理在内，即进入修改页面时的url是不保存的），就
	只需要在2级的list的返回url上加上filialeid即可（list - list 的跳转）。

	list ----> list(这个页面的返回要带上参数filialeid) -----> input / mod /view （这些页面由系统的返回功能都能准确回到上级list）
	
	原理很简单：就是保存上次list请求的url(其他请求不保存)。
	
	返回的地方，要加上参数 back=2或者2，这样就能返回到刚才的页面，比如跳转都某一页操作，进入其子页面，返回时应该还是这一页。

	list方法里要传递的参数带上就ok。

	list - list（这个list要查询也需要<s:hidden name="filialeid"/>一个宗旨，对应本系统的返回功能list方法执行时要带上需要的参数） -标签的情况 标签上带上参数即可 (struts的自动封装很方便，不论通过post或者get方式，都会自动封装，方便调用) 参考 分包计划里面
	的跳转方式。

	中间树添加，简单步骤：
		
		* action 提供 index 方法，设置好 几个值，供视图调用
		* men*-config.xml里配置菜单的url方法为index
		* 配置action的index返回的视图指向公用frame.jsp
		* treeaction里提供得到机构树数据的方法（构造好url），可以公用
		* 业务list页面加上 <s:hidden name="filialeid"/> ，以供查询，高级查询时保证机构筛选
		* list里再套list时，通过get方式，把 filialeid 传到 子list页，构造出子list页的返回url ，子list页也加上<s:hidden name="filialeid"/>保证查询


2.  待 分包商效果评价，加上 评定时间高级修改功能。



3. 滚动条

	<!-- 
	 	<td align="left" valign="top" style="width: 200px" id="lefttd">
			<iframe style="width: 100%; height: 100%;" id="iframe_left"
				name="iframe_left" frameborder="0"
				src="<%=request.getContextPath()%>/common/Tree_<%=treeName==null?"filialetree":treeName%>.action?decorator=layoutin&linkName=<%=actionName%>_<%=listName==null?"list":listName%>&type=<%=type%>"
				noresize marginwidth="0" marginheight="0" frameBorder=NO
				scrolling="auto">
			</iframe>
		</td>
	  -->
	  
        <td style="width: 157px" align="left" valign="top" id="lefttd"><!-- 157px -->
            <iframe style="width: 100%; height: 100%;" id="iframe_left" name="iframe_left" frameborder="0"
                src="<%=request.getContextPath()%>/common/Tree_<%=treeName==null?"filialetree":treeName%>.action?decorator=layoutin&linkName=<%=actionName%>_<%=listName==null?"list":listName%>&type=<%=type%>"
                noresize marginwidth="0" marginheight="0" frameBorder=NO scrolling="auto">
            </iframe>
        </td>


	width: 157px 页面内部重复出现滚动条，设置为200后 ，只出现外部滚动条  ？

	样式



4. 隐藏字段在form里面，提交时，会被服务端接收，注意到这个情况。



5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day213 2011年6月17日

1. 弹出框直接下一页，和点了查询后再点下一页list数据可能有出入。
	由于弹出框最开始的数据由comm*action处理的，在组装where条件时，需要带上。

2. 分包其他树的添加

	<result name="index">/erp/pm/subcontractfb/frame.jsp</result>
	filialeid=<s:property value="filialeid"/>&
	<s:hidden name="filialeid"/>
	menupm-config.xml	

	//中间树机构ID
	if(ConvertUtil.isNotEmpty(filialeid)){
		list.add(new Query(QConstant.T_ORG,"f.prjdeptid",QConstant.OP_IN,filialeid));
	}

	/**
	 * 中间树，配置
	 */
	public String index(){
		request.setAttribute("titleName", "分包合同交底");
		request.setAttribute("actionName", "/pmmk/Subcontractdeliver");
		request.setAttribute("listName", "list");
		request.setAttribute("treeName", "filialetreesubcontract");//配置要显示的树 ，在treeaction里定义
		//request.setAttribute("type", "");
		return INDEX;
	}

3. 中间机构树 ，带全新与否

	/**
	 * 分包管理 机构树
	 * @param linkName  URL
	 */
	public List getTreelistForSubcontract(String userorgid,String userid,String linkName){
		
		/*带权限机构树，只能看到本机构及其下面的数据*/
		List treelist = new QploseService().getOrgList(userorgid, userid);
		
		/* 不带权限的机构树，显示所有机构 
		List treelist = new OrgService().getOrgList2("", 1, -1).getList();
		*/
		
		return constructTree(linkName, treelist);
	}




4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day214 2011年6月20日


1. 供应商



2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day215 2011年6月21日

1. 分包商评价是否根据平均值改变状态？ 当前是根据本次分改变状态，改为根据历史平均分改变状态。
	t_pm_fb_providergrade
	

	测试：  ZY-2011-00163  核工业南京建设集团有限公司

2. 数据库某些字段设置为非null ，在后续的判断时就不要处理null的情况了，null的话，判断时要注意处理的

	数据库 字段不为null ，字段为null时的条件判断要注意  
	
	【系统 数据库 null 字段默认为null 在判断时就需要判断是否为null，否则结果集可能不对】


	比如：

	A. select * from t_pm_providerfb where ( isvalid is null and isvalid <> 'N' )  and name like '%滨海县蔡桥镇胜强工程服务部%' 
	B. select * from t_pm_providerfb where  isvalid <> 'N' and name like '%滨海县蔡桥镇胜强工程服务部%' 

	注：上面 A,B两条sql语句，如果 isvalid字段为null的话，B语句 isvalid 为null的行是出不来的（null值和'N'无法比较），null需要单独判断。

	参考：

	SQL NULL 值
	如果表中的某个列是可选的，那么我们可以在不向该列添加值的情况下插入新纪录或更新已有的记录。这意味着该字段将以 NULL 值保存。
	NULL 值的处理方式与其他值不同。
	NULL 用作未知的或不适用的值的占位符。
	注释：无法比较 NULL 和 0；它们是不等价的。

	那么我们如何测试 NULL 值呢？
		无法使用比较运算符来测试 NULL 值，比如 =, <, 或者 <>。2011-6-21
		我们必须使用 IS NULL 和 IS NOT NULL 操作符。

	微软的 ISNULL() 函数用于规定如何处理 NULL 值。
	NVL(), IFNULL() 和 COALESCE() 函数也可以达到相同的结果。
	Oracle 没有 ISNULL() 函数。不过，我们可以使用 NVL() 函数达到相同的结果
	
	MySQL 也拥有类似 ISNULL() 的函数。不过它的工作方式与微软的 ISNULL() 函数有点不同。
	在 MySQL 中，我们可以使用 IFNULL() 函数，就像这样

	或者我们可以使用 COALESCE() 函数，就像这样：

	SELECT ProductName,UnitPrice*(UnitsInStock+COALESCE(UnitsOnOrder,0))
	FROM Products




3. 分包结算 - 结算总金额(元 含本期): 按照审批日期自动计算 ，2个日期必填

	以后，如果要保存这个值，对于历史自动计算的数据，可以通过 数据库从后台统一按照时间更新下即可，后续的保存这个值就行。

	【系统 自动计算】


	其中，进度结算类型，根据审批日期自动计算；竣工结算不自动计算；

	SubcontractclosingService closingservice = new SubcontractclosingService();
	subcontractclosing = closingservice.loadSubcontractclosing(id);
	//自动计算结算总金额
	subcontractclosing.setBalancemoney(new BigDecimal(closingservice.getTotalByConID(subcontractclosing.getPid(), closingservice.dateToString(subcontractclosing.getVerifydate()), 1)));
	
	含本期，就不好自动计算了？按时间自动算，由于只能精确到天，同一天只有一次结算，才能正常计算，否则一天内的顺序不能表达。
	解决就是日期为同一天的，精确到时，或分，时间跨度上区分开就ok。

4. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day216 2011年6月22日

1. 处理供应商问题 



2.  系统评价部分js在360浏览器中的兼容性，

	测试 ：

	大连世纪长兴建筑工程有限公司 中国核工业华兴建设公司红沿河核电项目部生活营地二期工程


3. 系统部分地方list页，进行查询后，进入查询结果的查看页面，再返回时，list记录为空了（正确情况应该是还是刚才查询条件下的
记录） ，原因之一是编码问题（汉字出现了乱码）

	-----------
	...
		where
		    1=1     
		    and  exists (
			select
			    1 
			from
			    ebtemp..MyTempTable402881ed2196419c01219648603b0012 
			where
			    id=f.prjdeptid
		    )  
		    and m.subname like '%1a子项厂区吊顶钢架及地面伸缩缝盖板、墙架专业分包合同%' 
		    and  f.prjdeptid  in  (
			select
			    id 
			from
			    F_ORG('10434')
		    )  
		-- 查询时，汉子编码正确的
	...
	...
		where
		    1=1     
		    and  exists (
			select
			    1 
			from
			    ebtemp..MyTempTable402881ed2196419c01219648603b0012 
			where
			    id=f.prjdeptid
		    )  
		    and m.subname like '%1a×????§???????????°?????ì??·ì??°???????×¨??·?°ü????%' 
		    and  f.prjdeptid  in  (
			select
			    id 
			from
			    F_ORG('1')
		    ) 	

		    -- （服务端）跳转后，出现乱码问题 【系统 返回功能 乱码】
		    -- 在把请求的url存为session中时，此时汉字字符串就已经是乱码了。
	...
	-----------


	跳转部分代码如下：

		在 BackPage.java 中

	待？

4.  上海大众汽车有限公司仪征新建油漆车间工程 - 在分包商效果中 ，把原来按照创建单位划分，改为根据主工程所属机构划分



5.  



6. 系统里的webservice    -- 档案归档 部分

	包 com.erp.synch.*

	WEB-INF\services.xml ,内容如下：

		-------
		...
			<beans xmlns="http://xfire.codehaus.org/config/1.0">
				<service>
					<name>docService</name>
					<namespace>http://www.ebuilds.net</namespace>
					<serviceClass>com.erp.synch.doc.service.IDocumentService</serviceClass>
					<implementationClass>com.erp.synch.doc.service.impl.DocumentService</implementationClass>
					<inHandlers>
						<handler handlerClass="com.erp.synch.handlers.CheckInHandlers"></handler>
					</inHandlers>
				</service>
			</beans>
		...
		-------

	web.xml里的xfire配置：

		-------
		...
			<servlet>
				<servlet-name>XFireServlet</servlet-name>
				<servlet-class>
					org.codehaus.xfire.transport.http.XFireConfigurableServlet
				</servlet-class>
				<init-param>
					<param-name>config</param-name>
					<param-value>services.xml</param-value>
				</init-param>
				<load-on-startup>0</load-on-startup>
			</servlet>

			<servlet-mapping>
				<servlet-name>XFireServlet</servlet-name>
				<url-pattern>/synch/*</url-pattern>
			</servlet-mapping>
		...
		-------

	查看web 服务描述：
		http://localhost:8080/zhhxpm/synch?wsdl

7. 系统启动 初始化工作 ，
	比如：
	把 init.properties 配置文件加载到内存中等等。





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day217 2011年6月23日

1. 
	【上海启虹建筑材料有限公司】2011-06-23 供应商效果评价审批流程 aatest
	
	t_pm_pro_evaluation

2. 系统查询中带汉字时，会导致返回功能失败，原因在于 编码问题  系统重定向 乱码 重定向 乱码

	系统在保留带汉字的查询的请求URL时，是以utf-8格式编码的，但默认tomcat的
	
	保存url的语句：
	qstring = qstring + java.net.URLEncoder.encode(qname) + "="
							+ java.net.URLEncoder.encode(qvalues[j]) + "&";  //这个按照默认编码进行编码的，不推荐，应用
	指定编码的方式，显式指定编码格式
	qstring = qstring + java.net.URLEncoder.encode(qname) + "="
							+ java.net.URLEncoder.encode(qvalues[j],"UTF-8") + "&"; 


	server.xml里这样定义的：

	    <Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" />

	 加上编码配置：
	    <Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" URIEncoding="UTF-8" />
	 这样，在执行重定向时，就会把url按照utf-8格式编码，这样服务器接受到时，也这样解码，解决乱码问题。

	 配置tomcat的server.xml文件 ,保证系统编码格式和解码格式一致。

	补充：
		乱码问题，只要保持编码和解码的一致性即可。  【系统 乱码】

	
	问题延伸： 表单请求（会自动把汉字编码） 和 重定向请求（如何方式编码）的url编码方式的区别？


	目前，系统url编码是gb2312 ，故server.xml里也需配置为gb2312。



3. 分包商评价中 数据处理

	（1） 对于模板被删除的数据，查看评价页面时，评价表是空的


	-- 删除分分包商评价模板被删除导致的错误数据sql语句
	delete from t_pm_fb_providergrade where id in (

		select o.id from t_pm_fb_providergrade o 
		left join t_pm_gradetemplet a on a.id = o.gradeid
		left join t_pm_fb_contractunderwrite b on b.id = o.pid
		where ( o.gradeid is not null and o.gradeid <> '')
		and (a.name is null or a.name = '')        

	    )	

	（2） 对于由于并发操作，同时打分引起的数据重复录入问题，查看评价时会报错，记录大于一条之类
	



4. 竣工归档 组卷  
	
	组卷：
		业务需求 —— 
	*   一个工程，会有各类竣工资料，可以根据资料类别存起来；组卷就是对于这些一份份的资料，进行
“打包”，成为一卷文件，
	*  当然，之前要定义好这个卷的信息，
	*  建立好卷后，对应这个卷有个组卷按钮（功能），
	*  进去后，	是在被组到这个卷里的一份份资料，
	*  每份资料又提供取消组卷按钮（功能），可以脱离这个卷（当然，这时，这份资料的	是否组卷状态此时就是未组卷了）
	
	其实，也就是建立好卷类别，然后对资料进行归类。



	天津市诚开工贸有限公司厂房工程 

	核电： 广西防城港核电工程临时办公楼室外工程 


	目前，组卷分 民用 和 核电 ，可以共用的有 ：

		表：
			竣工资料表  t_pm_project_over_finishdata
			卷信息表   t_pm_project_over_finishdatasub 
			厂房部位表  t_pm_project_over_workshopparttype
			类目名称表  t_pm_project_over_finishdatatype
			卷与卷内的资料信息（一对多）关系字表 

		类文件：
			组卷action FinishdatasubAction 


		实现：先建立好每个工程的各自的卷信息，通过更新竣工资料表里的某些字段，来设置这些资料的组卷信息（资料被组于那个卷中）和状态。
	同时，每组（或者取消组卷）一次竣工资料到卷中时，都要即时更新此卷的信息（总页数，文件起始日期，文件终止日期），同时也要更新资料
	的组卷状态信息。


	dictframe.jsp - 民用index页
	hddictframe.jsp - 核电index页


5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day218 2011年6月24日

1. 

2. 竣工组卷




/erp/pm/finishdata/dictframe.jsp


	self.location.href="/zhhxpm/pm/Finishdata_index.action?type=1&prjid=402894912eddf0e9012ee5b11b4e4bb6";

	self.location.href="/zhhxpm/pm/Finishdata_index.action?type=2&prjid=402894912eddf0e9012ee5b11b4e4bb6";



	commonldialog_zn.js   getParttypelist( ) 厂房(部位)  getPrjtypedatalist( ) 类目名称

	核电组卷input页  finishdatasubinput.jsp

	 finishdatalist.jsp

	组卷list finishdatasublist.jsp

	index.jsp 的url getPrjtypedatalist.jsp?type=getPrjtypedatalist

	dottype = getPrjtypedatalist
	
	类目名称选择页面：
		getPrjtypedatalist.jsp

		_getPrjtypedatalist.jsp 内容页，也是请求数据页

	这个弹出框comm*dia*action并不返回数据，而是通过iframe的src请求获得数据。

	getPrjtypedatalist.jsp


	通过dynatreeservlet 这个treeservelet来处理请求树的数据的。

	ChooseFindatetypeTree （Dtree接口的实现类）

	FinishdatatypeDao.java 核电类别树 getDdMapList ( )

	dictvaluedao.java 字典dao

	组卷明细list页  finishdatagrouplist.jsp 

	&type=<s:property value="#request.type"/>

	t_pm_project_over_finishdata  -  竣工资料表   ------ 弹出被选择的竣工

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day219 2011年6月27日

1. go on day218 2


	FinishdatasubAction

		/**
		 * 功能：组卷明细弹出框，选择需要组卷数据
		 * @author cyshen
	     * @version V1.0
	     * @date 2011-03-17
		 */
		
		public String getZujuanList(){


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day220 2011年6月28日

1. <s:if test="#request.type != 1">



2. 系统list页请求时，会保存访问的url，再对这个list结果的修改，查看，删除等非list操作的返回时，取刚才的list的url作为
返回url，这样保存了当时的工作状态，方便操作，减少检索操作。 【系统 返回功能】

	具体：（比如删除操作）action的result就return SUCCESS ，根据配置会由back=1参数，知道当前是返回到历史list的url路径。

3. 处理民用竣工资料一些问题



4. 
	hibernate.cfg.xml 
		----
		...
			<!-- Enable Hibernate's automatic session context management -->
			<property name="current_session_context_class">thread</property>
		...
		-----
	配置hibernate字段管理session，对于同一个处理线程，用 SessionFactory的getCurrentSession()获取本线程使用的唯一session。

	SessionFactoryImpl.java
		-----
		...
			private CurrentSessionContext buildCurrentSessionContext() {
			String impl = properties.getProperty( Environment.CURRENT_SESSION_CONTEXT_CLASS );
		...
		...
		
		根据不同配置，获取对应session的方式，这里体现hibernate和其他框架的集成，比如上面如果配置了JTA，则这里session交由JTA来管理。

			private CurrentSessionContext buildCurrentSessionContext() {
				String impl = properties.getProperty( Environment.CURRENT_SESSION_CONTEXT_CLASS );
				// for backward-compatability
				if ( impl == null && transactionManager != null ) {
					impl = "jta";
				}

				if ( impl == null ) {
					return null;
				}
				else if ( "jta".equals( impl ) ) {
					if ( settings.getTransactionFactory().areCallbacksLocalToHibernateTransactions() ) {
						log.warn( "JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()" );
					}
					return new JTASessionContext( this );
				}
				else if ( "thread".equals( impl ) ) {
					return new ThreadLocalSessionContext( this );
				}
				else if ( "managed".equals( impl ) ) {
					return new ManagedSessionContext( this );
				}
				else {
					try {
						Class implClass = ReflectHelper.classForName( impl );
						return ( CurrentSessionContext ) implClass
								.getConstructor( new Class[] { SessionFactoryImplementor.class } )
								.newInstance( new Object[] { this } );
					}
					catch( Throwable t ) {
						log.error( "Unable to construct current session context [" + impl + "]", t );
						return null;
					}
				}
			}
		...
		------
	
	根据hibernate的配置文件来获取session。上面定义的是 thread 


5. 分包管理-内部分包 业务

	签订内部分包合同时，同时把内部分包的一些字段加上主合同一些字段作为内部分包合同乙方（也是本公司）的合同（在经营管理里），甲乙双方
	分别在主合同和分包合同处管理各自的合同。



6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day221 2011年6月29日

1. auqa data studio 在grid 结果查看方式下的中文乱码解决 ，跳转显示的字体即可


2. 竣工doc文档问题处理

（1）input页字段调整

	FinishdataAction
	finishdatainput.jsp 民用资料input页

	核电类目名称对话框调用： <img  id="imgid" class="table_input_img" src="<eb:img file='img_lookup.gif'/>" width="15" height="15" border="0" style="cursor:hand" 
						onClick="getDictname('finishdata.dictid','tmpcode','typename','over_finishdata')" /> 
	
3. 系统数据字典公用弹出框

	commonldialog_zn.js
		-----
		...
			function getdict(dictid,code,dictname,dictcode) { 
				var url = path + "/common/selectdialog/index.jsp?type=getdict&page=getdict.jsp&dictcode="+dictcode+"&time=" + escape(new Date());
				var style = "dialogWidth:500px;dialogHeight:540px;status:no;help:no;resizable:no;scroll:no; ";
				var parm = new Array();
				parm.push(new Array("????????????"));
				parm.push(new Array(document.all(dictname).value, document.all(code).value));
				var val = window.showModalDialog(url, parm, style);
				if (val == null) {
					return false;
				}
				if (val[0] != null) {
					if (document.all(dictid) != null) {
						document.all(dictid).value = val[0][0];
					}		
					if (document.all(code) != null) {
						document.all(code).value = val[0][1];
					}
					 
					if (document.all(dictname) != null) {
						document.all(dictname).value = val[0][2];
					}
					 
					return true;
				}
				return false;
			}
		...
		-----

4. 公用的js函数问题  js库 公用js 

		公用的js函数，设计的易于扩展，且代码健壮，最好还提供错误提示逻辑（比如对像找不到等错误的提示，不仅仅是处理错误，
	这样，在后续的调用扩展时，可以显式的看出调用是否正确，错在那里？）
		同样的java代码里，对于错误要有错误提示，日志等，否则不利于维护，调试。


	上面第3条的公用js代码里，设置返回值的逻辑：

				if (val[0] != null) {
					if (document.all(dictid) != null) {
						document.all(dictid).value = val[0][0];
					}		
					if (document.all(code) != null) {
						document.all(code).value = val[0][1];
					}
					 
					if (document.all(dictname) != null) {
						document.all(dictname).value = val[0][2];
					}
					 
					return true;
				}
				//上面这段逻辑，如果对象找不到只是屏蔽了错误，并没有提示，这样调用者不能很快看出是那里出了问题，改为下面的代码，

				if (val[0] != null) {
					if (document.all(dictid) != null) {
						document.all(dictid).value = val[0][0];
					}else{
						alert("对象 dictid 没有找到！");
					}		
					if (document.all(code) != null) {
						document.all(code).value = val[0][1];
					}else{
						alert("对象 code 没有找到！");
					}	
					 
					if (document.all(dictname) != null) {
						document.all(dictname).value = val[0][2];
					}else{
						alert("对象 dictname 没有找到！");
					}	
					 
					return true;
				}
				//这样就容易看出是参数错误

5. 分析 分包商 共用产生的问题，和供应商一样的问题

	比如，共用情况下如何控制其状态？

	要在充分调研的基础上设计业务流程！

	供应商基本信息公用 ，各个单位保留一份自己对供应商的个性信息。后面，从共用信息和各自的个性信息里去取得此供应商/分包商的信息。

	具体实现：
		效果评价后，保存本次评价部门，评价结果和对应供应商/分包商对应信息到中间表（同时统计各部门综合评分信息到供应商/分包商主表）
	然后，在选用此供应商/分包商时，把供应商/分包商基本信息表和中间表结合，判断是否使用此供应商/分包商。
		
		对于初评，

6. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day222 2011年6月30日

1. 内部分包
	处理，内部分包合同签订到主合同的对应关系 ，参考 day220 第5条 line 19153

	例子工程： 红沿河核电站四台机组核岛土建工程

2. 内部分包 合同 

	中核华誉工程有限责任公司 - 阳江核电一期土建工程牛腿、贯穿件安装施工专业分包合同

	结论 ：原始数据是空的，导致后续也是空的。

3. 分包商停/启用


4. 几种常用对话框 （HTML规范定义）

	html里的window对象下的几个对话框方法：

		alert 显示包含由应用程序自定义消息的对话框。 
		confirm 显示一个确认对话框，其中包含一个可选的消息和确定取消按钮。 
		prompt 显示一个提示对话框，其中带有一条消息和一个输入框。 

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day223 2011年7月1日

1. 


2. 

	查看页面，只显示内容，不显示表单 


3. 解决list页面由于显示列太多，撑开表格问题，把list内容表格和上面的操作表格及下面的分页表格都放到一个大表格中即可，

	具体：在输出list内容的表格第一行和最后一行分别再包含上诉2个表格

	这样3部分的表格都在同一个大表格中，再通过宽度属性 ，保证3个表格的宽度一致，避免某个表格撑开。

	<table width="100%" border="0" align="center" cellspacing="0" cellpadding="0">
		<tr>
			<td>
				...
				...//中间放原list页面里form及其所包含的内容，即用一个大表格把原来独立的表格放到一个单元格中，这样修改也方便
				   //用此段标签包含list页的form标签即可。
				...

			</td>
		</tr>
	</table>

	【系统 list页 撑开 表格撑开】

4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day224 2011年7月2日

1. 分包商评价状态对应机构中间表中，评价机构到公司/事业部，即在公司事业部层面大家都有自己对某个分包商的态度，其下面的
机构共享本事业部对此分包商的状态（合格，不合格），对于分包商的黑名单状态全公司共享。

	如何取到评价此分包商的公司或者事业部名称？

		分包，是对主合同签订中的合同的分包，可以在主合同信息里，找到此合同所属的事业部或专业公司（在这个机构层面大家对此分包商
	状态可以不一致）

	具体：从主合同找到 事业部或专业公司ID，和此次评价的分包商ID，加上需要的信息，存入状态中间表中。

	呈现方式 ：分包商列表(可以发起评价) -> 进入查看评价信息列表(对于各事业部对此分包商的评级,合格与否等相对事业部层面对此分包商的信息)  。

	评价时，只能对自己事业部的合同进行评价（机构权限已做控制-从主合同权限继承）。

	各部门要统计各自有哪些合格，不合格分包商时，可以通过两个查询条件实现 ：所查询的事业部  和 分包商状态（合格，不合格，黑名单）
	(注：黑名单是全公司共享的，所以在评价时，审批者要注意，避免误操作导致进入黑名单，一般签核时，最好看下主要内容，符合时，才
	通过，否则，不通过即可)  【操作 建议】

	分包商的多个分包合同一起评价，选择合同前，先选择事业部，然后列出此事业部下所有对应此分包商的合同。

	doing  
		
		（1） 先做评价相对事业部的逻辑，再做可以评价多个合同的情况。（评价通过时，找到事业部和分包商id，并计算分包商对应此事业部
	的综合分得出星级，存入中间表）
		历史数据，可以自动统计并放到中间表中。

		* 建立中间表1  t_pm_fb_providerfbstatus

		* 改造原来的评价表（适应一个分包商对应多个合同一起评价的情况） t_pm_fb_providergrade - 表中pid引用合同签订表ID，这个字段
		废弃，改为从中间表找到合同ID（实现一个分包商一次评价对应多个合同情况，此时要选择评价部门,选择事业部）。
			建立中间表2 t_pm_fb_providergradesub 
		
		（2） 再做可以评价多个合同的情况。

			选择评审机构（事业部）时，这个机构树是带权限的，只能选择自己所在的事业部，从而作为分包合同的限定条件之一。
		或者，这个评审机构不能修改，自动从主合同里带过来。

	机构权限控制，在 baseaction里有个 getQueryOrgId 方法，
		baseaction 
		------
		...
			public String getQueryOrgId(String orgidStr){
				String where  = " and  exists (select 1 from ebtemp..MyTempTable"+this.getLoginInfo().getUserId()+" where id="+orgidStr+") " ;
				return  where;
			}
		...
		------
		后面方法，根据传入的机构ID,得到此ID，可见的所以机构ID,以控制机构权限。


	String where = ""+getQueryOrgId("b.prjdeptid");

2. 关于部分分包商看不到的处理
	由于加了机构筛选，导致之前录入的数据由于没有引入机构的值的分包商不能显示出来，可以在打开新引进分包商的页面，直接查询，不能点中间的
	机构树，直接查询到然后修改即可。  【历史数据问题】


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day225 2011年7月4日

1. t_pm_fb_providergrade 表结构

 id								pid						 stargrade		   gradeid						  gradedate			   flowstatus     processid					         remark										  employee	  createdate            lastemployee     lastdate              sumscore     providerid                       
 --------------------------------			     --------------------------------		------------		  --------------------------------			---------------------	 -------------  --------------------------------			 -------------------------------------------------------------------------  -----------		    --------------------  ---------------  --------------------  -----------  -------------------------------- 
 4028946a30b099670130b0b9ebf20041  402894912fdf2689012fe1b852cd2700  合格            402894a13053c7f1013054416c7b0fb2  2011-6-21 上午12:00:00   1              4028946a30b099670130b0baafaf005a    aatest										系统管理员        2011-6-21 上午12:00:00  系统管理员            2011-6-21 下午1:46:22   74           402894912fc949dd012fc96816a00573 
 
	原本 ，pid字段是引用合同签订的ID，由于要评审多个合同，现在废弃这个字段。分包商ID(一) 对合同ID(多) 存入 t_pm_fb_providergradesub 表 
	加上评价部门字段 evaluateorgid 

	sql 修改

	alter table t_pm_fb_providergrade add evaluateorgid varchar(40)   (历史数据，可以用sql更新，属于某个事业部机构下的评价记录都更新为此事业部的机构ID)

	sql 修改

	-- 创建表 t_pm_fb_providergradesub
	
		if exists (select 1
		   from dbo.sysreferences r join dbo.sysobjects o on (o.id = r.constid and o.type = 'F')
		   where r.fkeyid = object_id('t_pm_fb_providergradesub') and o.name = 'fk_t_pm_fb__reference_t_pm_fb_')
		alter table t_pm_fb_providergradesub
		   drop constraint fk_t_pm_fb__reference_t_pm_fb_
		go

		if exists (select 1
			    from  sysobjects
			   where  id = object_id('t_pm_fb_providergradesub')
			    and   type = 'U')
		   drop table t_pm_fb_providergradesub
		go

		/*==============================================================*/
		/* Table: t_pm_fb_providergradesub                              */
		/*==============================================================*/
		create table t_pm_fb_providergradesub (
		   id                   varchar(40)          not null,
		   pid                  varchar(40)          null,
		   subconid             varchar(40)          null,
		   constraint pk_t_pm_fb_providergradesub primary key (id)
		)
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '分包商ID 对 分包合同ID',
		   'user', @currentuser, 'table', 't_pm_fb_providergradesub'
		go

		alter table t_pm_fb_providergradesub
		   add constraint fk_t_pm_fb__reference_t_pm_fb_ foreign key (pid)
		      references t_pm_fb_providergrade (id)
		go

	-- 建表 t_pm_fb_providerfbstatus

		if exists (select 1
			    from  sysindexes
			   where  id    = object_id('t_pm_fb_providerfbstatus')
			    and   name  = 'index_1'
			    and   indid > 0
			    and   indid < 255)
		   drop index t_pm_fb_providerfbstatus.index_1
		go

		if exists (select 1
			    from  sysobjects
			   where  id = object_id('t_pm_fb_providerfbstatus')
			    and   type = 'U')
		   drop table t_pm_fb_providerfbstatus
		go

		/*==============================================================*/
		/* Table: t_pm_fb_providerfbstatus                              */
		/*==============================================================*/
		create table t_pm_fb_providerfbstatus (
		   id                   varchar(40)          not null,
		   providerid           varchar(40)          null,
		   orgid                varchar(40)          null,
		   lastdate             datetime             null,
		   avgscore             numeric(5.2)         null,
		   avgstar              varchar(1)           null,
		   constraint pk_t_pm_fb_providerfbstatus primary key (id)
		)
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '事业部对分包商的评价状态',
		   'user', @currentuser, 'table', 't_pm_fb_providerfbstatus'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '机构ID(事业部层)',
		   'user', @currentuser, 'table', 't_pm_fb_providerfbstatus', 'column', 'orgid'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '最后修改日期',
		   'user', @currentuser, 'table', 't_pm_fb_providerfbstatus', 'column', 'lastdate'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '本机构综合平均分',
		   'user', @currentuser, 'table', 't_pm_fb_providerfbstatus', 'column', 'avgscore'
		go

		declare @currentuser sysname
		select @currentuser = user_name()
		execute sp_addextendedproperty 'MS_Description', 
		   '本机构平均星级:
		   5 - 五星
		   4
		   3
		   2
		   1 - 一星
		   
		   6 - 合格
		   7 - 不合格
		   8 - 黑名单
		   ',
		   'user', @currentuser, 'table', 't_pm_fb_providerfbstatus', 'column', 'avgstar'
		go

	加入联合唯一约束：（机构ID,分包商ID联合唯一），同一个机构对同一个分包商的状态只有一个

	sql 修改：
		
		alter table t_pm_fb_providerfbstatus add constraint providerid_orgid_unique_key unique (providerid,orgid)


	方式 ： 注释掉原来的java代码 和 jsp代码，待测试通过后删除以前逻辑。

	参考：物资管理 - 材料入库 - 采购入库 的多选弹出框
	
		MaterialstockinstockAction
		input页 materialstockinstockinput.jsp （系统文件命名都是可以根据数据库表名组合而来的）
	带类别的多选弹出框设置步骤：
		* 拷贝input页的，列表部分代码（显示部分+模板部分）
		* 弹出框方法 （修改里面的参数）
		* 在common/selectdialog 目录下创建 弹出框jsp 及其内容jsp（名称和前面相同，名称开头加上"_"）
		* js请求到action后，返回到上面2个jsp页面，其中第2个jsp才是请求数据的页面（页面A）
		* A页面有左右2个frame的src，各自请求相应的数据，并返回相应的页面；构成带类别的弹出框内容页面（也可以把左边的类别树frame注释掉）
		* 


2. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day225 2011年7月5日


1. 分包管理 多级分包的业务需求 

	一个计划对应一个分包合同，此分包合同再继续分包的情况。
	
	结算之类的业务，只和合同有关。

		满足上面的业务，在做分包计划时，显示主合同同时也显示内部分包的合同，这样即可对内部分包合同进行再
	分包。
	
2. 系统数据检查 方法之一 ，再list页面，列出必填字段 ，看到空的就进去更新即可 【补数据 检查数据】


3. 
	getcontractunderwriteist.jsp

	contractunderwritelistselect.jsp 评价选择分包合同弹出框内容页面



4. sql 批量更新 sql循环更新	  动态更新

	update table1 as t1
	set (field1,field2) = ( select field21,field22
					from table2 t2
					inner join table3 t3 on t3.field31 = t2.field23
					inner join table4 t4 on t3.field32 = t4.field41
					where t2.field24 >= ''
					and t1.fid = t4.fid
					)


5. 







分包合同名称 - 广西防城港核电厂一期工程BOP建安工程第二合同包安装工程施工专业分包合同


中核华誉工程有限责任公司

分包内容 - 广西防城港核电厂一期BOP建安工程第二合同包安装工程

6. 带权限的机构树弹出框，目前只显示到所属机构及其下级机构，应该也能显示其直接上级机构，以方便选择事业部。？

7. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day226 2011年7月6日

1.  用 hibernate 框架做持久层的系统，dao里的数据库数据尽量用HQL来实现，这样利于数据库移植，它是完全的O/R映射，

补充：

		1）. Hibernate优点

		(1) 对象/关系数据库映射(ORM)

		它使用时只需要操纵对象，使开发更对象化，抛弃了数据库中心的思想，完全的面向对象思想

		(2) 透明持久化(persistent)

		带有持久化状态的、具有业务功能的单线程对象，此对象生存期很短。这些对象可能是普通的JavaBeans/POJO，这个对象没有实现第三方框架或者接口，唯一特殊的是他们正与（仅仅一个）Session相关联。一旦这个Session被关闭，这些对象就会脱离持久化状态，这样就可被应用程序的任何层自由使用。（例如，用作跟表示层打交道的数据传输对象。）            

		(3) 事务Transaction(org.hibernate.Transaction)

		 应用程序用来指定原子操作单元范围的对象，它是单线程的，生命周期很短。它通过抽象将应用从底层具体的JDBC、JTA以及CORBA事务隔离开。某些情况下，一个Session之内可能包含多个Transaction对象。尽管是否使用该对象是可选的，但无论是使用底层的API还是使用Transaction对象，事务边界的开启与关闭是必不可少的。 

		(4) 它没有侵入性，即所谓的轻量级框架

		(5) 移植性会很好

		(6) 缓存机制，提供一级缓存和二级缓存

		(7) 简洁的HQL编程

		 

		2）. Hibernate缺点

		(1)  Hibernate在批量数据处理时有弱势

		(2) 针对单一对象简单的增删查改，适合于Hibernate,而对于批量的修改，删除，不适合用Hibernate,这也是OR框架的弱点；要使用数据库的特定优化机制的时候，不适合用Hibernate

例子：
	-----
	...
		/**
		 * 根据hql语句更新,传入HQL，及参数
		 * 同事务 (方便删除子表数据)
		 * by cs
		 * @param session
		 * @param hql
		 * @param where
		 */
		public static void hqldel(Session session,String hql, HashMap where) {
				Query q = session.createQuery(hql);
				if (where != null) {
					Iterator it = where.keySet().iterator();
					while (it.hasNext()) {
						String key = (String) it.next();
						q.setParameter(key, where.get(key));
					}
				}
				q.executeUpdate();
		}
	...
	------

	hibernate 批量删除 ，利用 HQL 语句执行批量操作，在大数据量时效率高，不需要加载到内存。


2. 解决 列表下再访问列表，在2级列表页面返回时，返回到一级列表原来所在的页 （弹出框list页，只要在list方法里传入 qlevel = 2即可）

	方式：在一级list页的url后带上页码参数 比如 his ，在2级list页面的action的list方法里，接收这个参数并保存到request对象中，并设置到
2级list页的返回url的参数里，ok

	设置为公用：

		在所有业务 action 的父类 BaseAction 里加上 hisPageIndex 成员变量，以自动封装一级list页面的页码，供调用。

		使用：只要在访问2级list页面的url后面加上 hisPageIndex=<s:property value="page.getPageIndex()"/> ，然后在2级list页的返回url后，带上
		pageIndex即可：
		例子：

			function back() {
				document.location="<%=request.getContextPath()%>/pm/Providerfb_listWithEvaluation.action?pageIndex=<s:property value="hisPageIndex"/>";
			}
		
		实现功能：从2级iist页，返回到1级list页的原来页码位置。

	【返回问题 list返回】
	
	？ 查询的状态页码，如何保存？

	把1级list页的url直接作为2级list页的返回url 。

	注：上面方式已废弃，改为下面的方式 参看 day231 第二条

3. 类似材料，多选弹出框，在更新时，弹出框的js可能会卡死 ？ 待处理
	

4.  继续 

	发起流程页  tosendcheckprovidergrade.jsp
	签核页 t_pm_fb_providergrade_view.jsp
	查看页 

5. struts标签嵌套 ognl 

	<span title="<s:property value='providergradesubs[#s.index].subconname'/>>
		<s:property value="providergradesubs[%{#s.index}].subconname"/> -- 错误：在struts标签里 value会去计算，不需要再用 %{...}
		<s:property value='providergradesubs[#s.index].subconname'/>  -- 正确
		<s:textfield name="providergradesubs[%{#s.index}].subconname"  /> name不会自动计算，故需要ognl表达式，告诉服务器这个要计算处理的
	</span>

	
	用id来表示迭代中的每个对象。

	<s:iterator value="#request.providergradesubs" status="s" id="z"> 
		<tr >
			<td>
				<s:property value="#z.subconcode"/>
			</td>
		</tr>
	</s:iterator>
	
6. 取表格中的对象 object.all() 用html对象的all方法来方便取得特定对象。

	/* 检测是否选择了待评价合同，至少选一条 */
	function checksubfield(){
		var tb = document.getElementById("tbl");
		var arr = tb.all("subconcode");
		alert(arr.length);
		var flag = false;
		if(arr != null && arr != "undefined"){
			if(arr.length > 0){
				for(var i=0;i<arr.length;i++){
					
					if(arr[i].value != ""){
						flag = true;
					}
				}
			}else{
				if(arr.value != ""){
					flag = true;
				}
			}
		}
		return flag;
	}

补充：
	all Collection 

	Returns a reference to the collection of elements contained by the object.

	Syntax

	[ collAll = ] object.all 
	[ oObject = ] object.all(vIndex [, iSubIndex]) 

	Possible Values

	collAll - Array of elements contained by the object.  

	oObject - Reference to an individual item in the array of elements contained by the object. 

	vIndex   - Required. Integer or string that specifies the element or collection to retrieve. If this parameter is an integer, the method returns the element in
			the collection at the given position, where the first element has value 0, the second has 1, and so on. If this parameter is a string and there is
			more than 	one element with the name or id property equal to the string, the method returns a collection of matching elements. 

	iSubIndex - Optional. Position of an element to retrieve. This parameter is used when vIndex is a string. The method uses the string to construct a 
			collection of all elements that have a name or id property equal to the string, and then retrieves from this collection the element at the position
			specified by iSubIndex. 

	本例传入的是 vIndex ，是个id。

7. js 注意 ,数字和字符，js还是要区分的 呵呵

	var sn = 0; 
	
	var sn = '0'; 

	—— 排查，无处不在

8. 在 SendarchivesAction line5082 
	处理分值，状态，


9. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day227 2011年7月7日

1. 数据库缓存池插件 对数据库运行时断开后自动重新获取连接的配置。



2. 合格，不合格分包商列表的显示方式为：

	第一次进去时，根据登录用户所在的事业部来显示对于这个事业部的合格分包商。后续，可以从机构树中选择机构，来查看
其他事业部的合格分包商。
	不合格分包商列表同上。

	实现：在list页加上一个隐藏字段保存所在的事业部ID 
	<s:hidden name=""

3. 选用分包商时，排除本事业部不合格和黑名单的数据。

	用户可以选用没有被本部门评定为不合格的分包商及黑名单里的分包商。

	合格分包商 / 不合格分包商 显示逻辑 ：

		* 排除本部门（所在事业部）评定为不合格的和黑名单的分包商。其他都可见。

		* 停用，启用也是针对本部门。

		实现：

		通过改变 

4. IE8 ,在同一个窗口的不同标签页里，登录不同的用户，系统会混淆。？问题


	比如：取登录信息 getloginfo 对象里的值时，后一个登录的用户会覆盖前一个的机构ID（orgid），即使是不同的账号
		分别在IE6 和 IE8 上登录时，不会干扰。 

		


5. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day228 2011年7月8日

1. 拦截器做横切性的验证，比如下面的角色权限验证 ，将用户请求的URI(比如：/pm/Providerfb_reuse.action)，和角色权限配置的uri对比，以判断是否有权限。

public class LoginInterceptor extends AbstractInterceptor {
	...
   		if (logininfo == null || logininfo.getUserId() == null) {
			return "login";
		} else if (logininfo.getEstopUrl() !=null && logininfo.getEstopUrl().indexOf(resourcePath)>=0) {
			throw new MyException("你无权操作此功能："+resourcePath);
		}
	...

2. 问题 

	哪些由于字段变更导致的，历史数据关键字段为空，在筛选时可能就被筛选掉

	比如：分包商回来加了录入机构字段，当按照机构显示时，历史数据由于没有录入机构就无法显示。

	可以根据创建人单位更新录入单位。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day229 2011年7月11日

1. 变更


2. 供应商评价查看 ，能看每个人的打分


3. 分包评价数据调整问题



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day230 2011年7月12日

1. 调整分包评价数据 

	sql 修改

	目的：把历史的评价记录更新到现有的新评价记录表中
	、
	* 评定部门：根据历史数据的分包合同所在事业部机构确定 
	【sql 批量更新】
		-- 评定的事业部ID
		update t_pm_fb_providergrade  set evaluateorgid = t2.orgid from (
		    select o.id,c.orgid from t_pm_fb_providergrade o
		    left join t_pm_fb_contractunderwrite a on a.id = o.pid
		    left join t_pm_contract c on c.id = a.contractid
		    left join t_hr_org d on d.id = c.orgid
		    inner join t_pm_fb_providergrade e on e.id = o.id
		    where o.pid <> ''
		    ) t2
		where t_pm_fb_providergrade.id = t2.id
		and t_pm_fb_providergrade.pid <> ''


		-- 定标明细的分包内容为空，自动从计划明细里更新
		update t_pm_fb_bidpicksub set newcontent = t2.content from (
		    select o.id,c.content
		    from t_pm_fb_bidpicksub o
		    left join t_pm_fb_bidpick a on a.id = o.pid
		    left join t_pm_fb_invitebid b on b.id = a.pid
		    inner join t_pm_fb_subcontractplandetail c on c.id = b.pid
		    where o.newcontent = '' or o.newcontent is null
		    ) t2
		where t_pm_fb_bidpicksub.id = t2.id
		and t_pm_fb_bidpicksub.newcontent= ''	

	* 合同信息 ：根据历史数据选择的分包合同信息确定
		t_pm_fb_providergrade 表里的pid为合同id存为新表 t_pm_fb_providergradesub的subconid

		insert into t_pm_fb_providergradesub 

	表  t_pm_fb_providergrade
	到新表  t_pm_fb_providerfbstatus ,t_pm_fb_providergradesub




2. 分包商有劳务，专业合一的情况处理，签合同只能是选一种类型，同样评价也是一种类型。

	对于这种情况，使用时，再选择类型。





3. 在 service层写方法，处理历史数据 

例如：
	-------
	...
		/**
		 *  处理历史数据(临时用)
		 */
		public void updateHistoryData(){

			new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
				@Override
				public void doInHibernate(Session session) {
					String sql = " select id,pid from t_pm_fb_providergrade where pid <> '' ";
					Query q = session.createSQLQuery(sql);
					List list = q.list();
					for (Object object : list) {
						Providergradesub sub = new Providergradesub();
						sub.setPid(((Object[])object)[0].toString());
						sub.setSubconid(((Object[])object)[1].toString());
						String hql = "from Providergradesub as t where t.subconid = '"+sub.getSubconid()+"' and t.pid = '"+sub.getPid()+"'";;
						Query q2 = session.createQuery(hql);
						List list2 = q2.list();
						if(list2.size()<=0){
							session.save(sub);
						}
					}
					
					
				}
			});
		}
		
		public static void main(String[] args) {
			ProvidergradeService s = new ProvidergradeService();
			s.updateHistoryData();
		}
	...
	-------


4. 之前 ，根据登录用户机构ID,找到对应2级单位id的 sql函数 getupOrgid() 传入的参数要用引号 ' ' 扩起来，否则在参数包含字母时
会报错。

5. 子list页跳转回父list页面时，保证回到之前进入子list页前的状态，页面，查询条件

	关键在于session中 where 条件的分别处理，不能共用。
	再结合，子list页的level = 2

	 子list页的返回js：
					function back() {
						document.location="<%=request.getContextPath()%>/pm/Providerfb_listWithEvaluation.action?back=1";
					}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day231 2011年7月13日

1. 

2. 系统 导航跳转 返回功能 多级页面跳转  【返回功能 设计 记忆跳转 多级列表页 多级list】

	list页的请求，保存请求路径 url （根据请求的页面级别1级list页，还是2级list页，还是更多的子list页）

	人为在action的各个list方法中，传递list页所在的级数(level)给公用的保存请求历史url的 BackPage.java 类，此类专为返回功能设计。
扩展这个类，可以实现多级页面的记忆跳转。

	部分代码如下（扩展到可以在3层list页间记忆跳转）：
		-------
		...
			public class BackPage {
				Log log = LogFactory.getLog(BaseAction.class);
				/**
				 * level是列表的级别，是第一层列表还是第二层还是第三层
				 * @param request
				 * @param level
				 */
				public boolean exec(HttpServletRequest request, HttpServletResponse response,
						int level) {
					log.info("返回功能设置值----");
					HttpSession session=request.getSession();
					String back = request.getParameter("back");//从查看页面等按返回按钮的标志
					String redirect = request.getParameter("redirect");//返回后页面强制跳转的标志
					
					if (back != null && "1".equals(back)) //单击返回按钮后，从session取值，并跳转页面
					{
						try 
						{
							String url="";
							if(level == 1){
								url = (String)session.getAttribute("back1");
							}else if(level == 2){
								url = (String)session.getAttribute("back2");
							}else{
								url = (String)session.getAttribute("back3");
							}

							response.sendRedirect(url);
							return false;
						} catch (Exception e) {
						}
					}else //不是返回的时候，把参数连接成字符串，放到session里
					{
						Enumeration qnames = request.getParameterNames();
						String qstring = "";
						while (qnames.hasMoreElements()) {
							String qname = (String) qnames.nextElement();
							String[] qvalues = request.getParameterValues(qname);
							for (int j = 0; j < qvalues.length; j++) {
								qstring = qstring + java.net.URLEncoder.encode(qname) + "="
										+ java.net.URLEncoder.encode(qvalues[j]) + "&";
						
							}
						}
						if(qstring.length()>0){
							qstring = qstring.substring(0, qstring.length()-1);
						}
						String backurl = request.getRequestURI() + "?" + qstring;
						if (level==1)
						{
							session.setAttribute("back1",backurl);
						}else if(level == 2)
						{
							session.setAttribute("back2",backurl);
						}else{
							session.setAttribute("back3",backurl);
						}
					}
					return true;
				}
			}
		...
		-------

	返回功能设计：
		* 在每个请求list页面的方法前，都先执行这个 BackPage 类，如果是非list页请求(传递back=1)则从session里取得之前的list页的url作为
	返回；如果是list请求，根据请求的级别(1级，2级...list页面)把请求的url保存到对应的session范围中。
		* 这样，在请求各自action的list方法方法时，会去取对应自己级别的历史list页url，避开冲突。
		* 有个问题，就是每个action会将一些查询条件 以where名称保存到session中，当在不同的action间跳转时where条件会冲突，只要把
	下级的action的where名称改为其他名称即可。
		* 设计思路 - 以list页请求的url为基础，进行前后记忆跳转。【设计】
	
	例子：
		保存操作（删除操作等）跳转配置如下(传递了back=1)：
			<result type="redirect-action">Providerfb_list?back=1</result>

		查看页面，修改页面，等返回按钮：
			function back() {
				document.location="<%=request.getContextPath()%>/pm/Invitebid_list.action?back=1";
			}
	

3. 系统问题 刚发起流程的记录，这条记录还可以删除，删除时又没有同时删除对应的流程记录，导致查看流程时，找不到数据。 【刚发起 被删除 系统 问题】



4. 流程状态 flowstatus ；

	定义在Constant类中：

		//系统流程状态定义
		public final static String FLOWSUCCESS = "1";//通过
		public final static String FLOWFAILE = "2";//未通过
		public final static String FLOWROCESSING = "3";//处理中，签核中
		public final static String FLOWNOTSEND = "4";//待发起评审，未发起评审
		public final static String FLOWJUSTSEND = "5";//已发起，待签核
		public final static String FLOWBACK = "6";//撤回

	上面这个状态中，某些没有实时更新，可以用 minStates 和 maxStates 2个值来准确判断流程状态。

	例如：
		-------
		...
			 <s:if test="minStates == 1 || minStates == 0">		
				 <s:if test="maxStates == 1"><font color="red">待审批</font></s:if>
				 <s:if test="maxStates == 2">处理中</s:if> 
			</s:if>

			<s:if test="minStates == 2 ">
				<s:if test="maxStates == 2">
					审批通过
				</s:if>
			</s:if>

			<s:if test="maxStates == 3">
				未通过&nbsp; ||&nbsp;<a href="Providerfb_toSendCheck.action?id=<s:property value="id"/>">重新审批</a>
			 </s:if>

			<s:if test="maxStates == 4">
				已撤回流程  ||&nbsp;<a href="Providerfb_toSendCheck.action?id=<s:property value="id"/>">重新审批</a>
			</s:if>

			 <s:if test="minStates == null ">
				<font color="blue"><a href="Providerfb_toSendCheck.action?id=<s:property value="id"/>">发起审批</a></font>
			 </s:if>
		...
		-------

		根据 minStates ,maxStates判断流程状态，取得这两个状态的sql为：

			select min(states) as minStates,max(states) as maxStates
			from T_OA_FLOWACTIVITIES
			group by processid
			having processid = 'ID'			
			
		* 待发起流程		minStates == null 
		* 已发起流程		minStates == 1 || minStates == 0 （同时 maxStates == 1时，没有任何签核；maxStates == 2时，处理中）
		* 流程通过		minStates == 2 && maxStates == 2
		* 流程未通过		maxStates == 3
		* 流程被打回		maxStates ==4 


	已撤回的流程，在流程监控里会列出。

5. 关于 事务控制代码
	在dao里都传递session，在service层才提供事务。这样调用service的方法不需要提供session，调用dao层代码时，可以传递session进去。、

6. 效果评价分包商找不到问题 
	

	江苏中核华兴机械化工程有限公司
	扬州长城建筑工程有限公司

	list方法用了分包商主表的状态 isvalid ，由于变更这个字段只表示黑名单。
	修改sql即可。


7. 系统公用处理事务的回调函数的问题：

	public  Object execute(HibernateCallback action)  {    
		Session session = null;
		try {
			session = HibernateUtil.openSession();
			session.beginTransaction();
		    Object result = action.doInHibernate(session);        
			session.getTransaction().commit();
			return result; 
		} catch (JDBCException ex) {
			if (session != null) {
				session.getTransaction().rollback();
			}
			throw new MyException(ex.getSQLException());
		}finally {
			if (session != null && session.isOpen()) {
				session.close();
			}
		}
    }	

	上面这个回调方法，在拦截异常时，只拦截了 JDBCException 异常，也就是 HibernateCallback 这个类抛出的其他不
包含在这个异常内的其他异常，都不能捕获也就不会进到 rollback 代码段，导致事务不能正确回滚 ？

	是否，把异常拦截在放大。？

8. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day232 2011年7月14日

1. 对于分包商挂号的情况，某些字段要和挂号的一致，可以把主分包商的字段存入挂在其下面的这些分包商，主分包商更新时，也同时更新
其下分包商公用字段。

	现有需要同步的字段：法人代表  providerfb.artificalperson
						专业类型  providerfb.subcontracttype
						资质等级  providerfb.qualificationgrade
						// 再加
						企业性质 providerfb.qyform

						

	sql 更新 数据处理 批量更新

	-- 批量更新挂号单位上面的三个字段和主单位一致

		update t_pm_providerfb 
		    set artificalperson = t1.artificalperson,
			subcontracttype = t1.subcontracttype,
			qualificationgrade = t1.qualificationgrade
		    from (
			select id,parentid,artificalperson,subcontracttype,qualificationgrade
			from t_pm_providerfb
			where (parentid is null or parentid = '') ) t1
		where  t_pm_providerfb.parentid = t1.id
		-- and t_pm_providerfb.name like '%aatest%' -- for test



2. 删除约束  drop语句 alter语句 删除列，删除索引，添加索引，增加索引
	
	sql 修改：

	alter table t_pm_providerfb drop constraint DF__t_pm_prov__statu__33F57C80
	alter table t_pm_providerfb drop column status

	删除索引： drop index t_pm_fb_providerfbstatus.index1 -- 格式 drop index 表名.索引名
	创建索引：
			create index idx_pm_providerinfo_of_qyform on t_pm_providerinfo (
				qyform
			)

3. 更新一条记录的多列 更新多列

	update t_pm_providerfb set artificalperson='2',subcontracttype='2',qualificationgrade='2'  where name like 'aatest'


4. java注释

* @deprecated 分包商状态各自管理 
	 * 替代方法为 {@link #setProviderfbIsValidById(String, String, String)}
	 */


5. 分包商 既是劳务又是专业的情况，在使用时，只能是其中一种

			sql 修改：

	alter table t_pm_fb_providergrade add subcontracttype varchar(1)

	劳务及专业 分包评价  【业务 劳务及专业】

		这种类型的，在评价时选择劳务或专业一种（以subcontracttype字段存于评价主表中），然后选相应合同，
	后续评价，查看等页面显示发起评价时选择的类型。
	

	苏静林 专业分包 402894a13053c7f101306ea9ea824744
	暂时改为 type = 3测试

6. 分包评价 - 选择合同 - 合同根据机构权限来控制
	登录用户可见机构的合同。在 list 方法的 where 条件里带上机构权限 ，已有。


7. 弹出框传递参数 注意 aaa.jsp 和 _aaa.jsp 这两个页面的参数传递。


8.  效果评价历史数据处理
	把历史评价结果更新到现在的状态表 t_pm_fb_providerfbstatus  中

	【sql group by 查询 分组查询】

	select o.evaluateorgid,o.providerid,count(o.providerid) 
	from t_pm_fb_providergrade o
	where o.flowstatus = '1'
	group by o.evaluateorgid,o.providerid
	
	-- 上面，将效果评价记录，先按照评价机构ID分组，再在这个组里面按照分包商ID分组；结果集就是机构ID和分包商ID联合唯一的记录
	count(o.providerid)就是统计此机构对此分包商评价了多少次。

	先用where条件在小范围测试，然后批量执行。
	比如：
	对机构ID/分包商ID 分别为：104		402894912f9eabe0012f9ebe8e4603b4	9 的情况测试


	-- 统计所有效果评价的统计 ：事业部 对 分包商 状态
	select a.evaluateorgid ,a.providerid,b.name as '分包商名称',c.name as '评价部门',a.score as '部门平均分'
	from (
	select o.evaluateorgid,o.providerid,count(o.providerid) as eva_num,avg(o.sumscore) as score  from t_pm_fb_providergrade o
	where o.flowstatus = '1'
	group by o.evaluateorgid,o.providerid
	-- having o.evaluateorgid = '104' and o.providerid = '402894912f9eabe0012f9ebe8e4603b4'
	) a
	left join t_pm_providerfb b on b.id = a.providerid
	left join t_hr_org c on c.id = a.evaluateorgid
	order by a.score asc

	--  根据上面的统计，结果为，各个事业部对分包商的评价次数，以及平均分，对于不正确的数据需要处理，比如删除评价流程。

	select avg(o.sumscore) as num from t_pm_fb_providergrade o
	where o.flowstatus = '1'
	group by o.evaluateorgid,o.providerid
	order by num asc

9. 签核 保存 ，签核 更新 流程中 保存  ，签核 更新 ，在签核时更新数据，在 send*arch*action的docheck方法，加上处理逻辑即可。
	参考分包商效果评价签核页面

	在 SendarchivesAction 里加上 t_pm_fb_invitebid 的处理逻辑。

	签核页面 更新 ，加入表格操作 ，引入表格jsp页面，加入表格相关方法，模板table等，参考招标文件评审流程。
	done

10. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day233 2011年7月16日

1. 分包商引入单位 

	历史数据为空的，根据创建人的机构更新。


	sql 修改：


	update t_pm_providerfb set createorgid = t1.orgid from (

	    select o.id,c.id as orgid
	    from t_pm_providerfb o
	    left join T_HR_Employee a on a.id = o.employee
	    left join t_hr_org b on b.id = a.orgid
	    left join t_hr_org c on c.id = b.parentid
	) t1

	where 
	t_pm_providerfb.id = t1.id
	and (t_pm_providerfb.createorgid is null or t_pm_providerfb.createorgid = '')
	-- and t_pm_providerfb.id = '402894912f968239012f96c0c3110438' -- for test

2. 异常处理、【异常处理 异常捕获 异常机制 异常原则 异常控制】
	
	异常如果在公用底层代码里都处理掉了，上层逻辑想知道异常如何解决。

	所以异常处理原则：
		谁抛出的谁处理，处理不了的继续抛。

	flowprocessservice 类里的方法：

	// OA以外模块中使用
	public void doDelProcess(Session session, String processid) {
		delFlowactivities(session, processid);
		flowprocessDao.delEntry(session, processid, Flowprocess.class);

	}

	public void delEntry(Session session, String id, Class C) {
		try {
			Object o = session.get(C, id);
			session.delete(o);
		} catch (JDBCException ex) {
			throw new MyException(ex.getSQLException());
		}
	}

		如果，这个procesid存在，但是流程已经删除，则上面的 delEntry 方法就会报异常（不能删除空对象）。
	这个在删除前判断对象是否存在的判断。是使用的地方自己先判断好，or这里统一处理(对象不存在在不执行 session.delete(o))。
		
	注意：
		用到 .doDelProcess(session, g.getProcessid()); 这个删除流程记录的方法的地方，都要判断下，流程是否还存在（在流程监控里删除流程）
	有时候 dto的processid还是存在的。

3. hibernate 的 get 与 load 方法的区别

	看 session接口里的说明：
		-------
		...
			/**
			 * Return the persistent instance of the given entity class with the given identifier,
			 * or null if there is no such persistent instance. (If the instance, or a proxy for the
			 * instance, is already associated with the session, return that instance or proxy.)
			 *
			 * @param clazz a persistent class
			 * @param id an identifier
			 * @return a persistent instance or null
			 * @throws HibernateException
			 */
			public Object get(Class clazz, Serializable id) throws HibernateException;
		...
		...
			/**
			 * Return the persistent instance of the given entity class with the given identifier,
			 * assuming that the instance exists.
			 * <br><br>
			 * You should not use this method to determine if an instance exists (use <tt>get()</tt>
			 * instead). Use this only to retrieve an instance that you assume exists, where non-existence
			 * would be an actual error.
			 *
			 * @param theClass a persistent class
			 * @param id a valid identifier of an existing persistent instance of the class
			 * @return the persistent instance or proxy
			 * @throws HibernateException
			 */
			public Object load(Class theClass, Serializable id) throws HibernateException;
		...
		-------

		根据上面说明：如果想根据ID，判断一个dto在数据库是否存在应该用get方法，不能用load方法

	测试 ：删除流程后，再删除dto用例。

4. 分包评价的子项根据序号排列

5. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day234 2011年7月18日

1. 样式添加 防重复提交样式



2. 供应商评价，显示详细打分信息

	在最后一列后，再加一列显示打分详细
	
3. sql 查询 sql  行转列，列转行 行拼接

参考：
	http://www.cnblogs.com/kerrycode/archive/2010/07/28/1786547.html
	

	=- 一个评分项，统计每个人的打分信息（成为一行）

	SELECT
		o.detailsid,
		STUFF(
		(
		SELECT
		  ','+sub.employee+':'+cast(sub.score as varchar(13))
	FROM
		t_pm_graderecord sub
	WHERE
		sub.detailsid = o.detailsid
		FOR XML PATH('')
		),
		1, 1, '') AS record
	FROM
		t_pm_graderecord o
	GROUP BY
		o.detailsid

	-- result 

	detailsid							打分记录

	402894a1302046de013020c460e31201	于华秋:8.5,王建禄:0.0
	402894a13053c7f101305855ee03567a	潘红:1.0
	402894a13053c7f10130586959705865	潘红:3.0
	402894a13053c7f101305cda19d94a18	孙宏建:6.0

4. 供应商效果评价列表

	安宁立方新型建材有限公司
	
	有合作，但没通过流程，评价里不会出现。

	材料合同：
	    select
		o.* 
	    from
		T_PM_MaterialContract o 
	    where
		o.prjid = 'EB2009080312492820242411954589888'

5. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day235 2011年7月19日

1. 供应商评价列表条件修改  调整
	签订合同就算合作，去掉必须流程通过的条件。


2. 供应商部分历史数据导入的问题
 
3. 在分页的js方法里触发，等待的图标，告知用户请求正在进行 人性化
	
	利用系统现有的防止重复提交的js逻辑，实现分页的等待提醒功能

	修改 common\pagebar.jsp 的：

	function goto(pageindex) {
		var f=document.getElementById("pgform");
		f.action="<s:property value="page.getUrl()"/>?pageIndex="+pageindex+"&txtseq=<%=txtseq%>&id=<%=request.getParameter("id")%>&decorator=<%=request.getParameter("decorator")%>";

		f.submit();
		getloadsubmit();//加上这句话，同时，在操作按钮后加上等待的图标，提示请求正在进行
	}	
	
	具体步骤，看文档头部的信息。

4. 
常用转义字符

HTML特殊转义字符列表
最常用的字符实体
Character Entities
显示 说明 实体名称 实体编号 
显示 说明 实体名称 实体编号 
 半方大的空白 &ensp; &#8194; 

 全方大的空白 &emsp; &#8195; 

 不断行的空白格 &nbsp; &#160; 
< 小于 &lt; &#60; 
> 大于 &gt; &#62; 
& &符号 &amp; &#38; 
" 双引号 &quot; &#34; 
© 版权 &copy; &#169; 
® 已注册商标 &reg; &#174; 
™ 商标（美国） ™ &#8482; 

× 乘号 &times; &#215; 
÷ 除号 &divide; &#247; 



5. 主list页面操作后，进入到子list页面显示，
	比如：在分包商列表中，发起评价保存后，进入这个分包商的评价list页面

	实现：通过动态配置struts的result来实现

	部分代码：

	<action class="com.erp.pm.provider.action.EvaluationAction" method="{1}" name="Evaluation_*">
		<result name="view">/erp/pm/provider/evaluationview.jsp</result>
		<result name="input">/erp/oa/table/t_pm_pro_evaluationtemplet1.jsp</result>
		<result name="list">/erp/pm/provider/evaluationlist.jsp</result>
		<result name="toSendCheck">/erp/pm/provider/tosendcheckevaluation.jsp</result>

		<!-- 评价发起后，转发到请求评价list的方法，同时把请求的参数动态带入 -->
		<result name="success_list" type="redirect-action">Evaluation_list?pid=${pid}</result>

		<result type="redirect-action">Evaluation_list?back=1</result>
	</action>

	具体应用：
		1. 供应商评价后，从供应商列表list页进入此供应商的评价list页
		2. 分包评价新发起后，从分包商list页进入此分包商的评价list页

	tip:只要重定向到请求list的url并带上参数即可。配置时，注意是 type="redirect-action"

	注意的地方：Evaluation_list?back=1这种写法是重定向时struts才会截取请求url，并指向到对应的action，如果是内部转发 


	【list页间相互跳转，带条件跳转 配置文件 动态注入 动态生成result 动态result】
6. 

		

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day236 2011年7月20日

1. 概况

	- 分包新报表
	- 原来的报表多提供查询等的调整
	- 竣工数据的抽取，如何抽取（主要是根据什么来归类的问题）
	- 分包，供应商等时间的调整


2.报表工具 finereport 
	采用了java来开发，适应多种流行的操作系统（windows，unix等）
	工具 ，通过自己来访问数据库，工具自定义的数据集来构成一张张的报表，免去了用jsp、php等页面技术来呈现（难以维护）
；附有详细的文档说明。学习成本降低。

	此工具，分为报表模板开发端，和服务器端；
		* 客户端就是一个具有通过jdbc访问数据库能力以及各种编辑能力的应用程序；
		* 服务器端就是一个servlet容器 ，把开发好的模板放到服务端的目录下，即可访问；此	服务端可以独自在servlet容器里运行，
	也可和现有的项目集成到一起，类似插件，只要在web.xml里配置参数即可。自带的是嵌入式的jetty服务器。用于服务器界面很简洁
	服务器情况，可以查看日志。

	具体，可查阅finereport帮助文档。


	例子：
		http://localhost:8075/WebReport/ReportServer?reportlet=WorkBook1.cpt


	补充：
		- 可以解决部分精确打印问题(用flash技术)。



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 237 2011年7月21日


1. 挂号分包商的部分数据是依附主分包商的 数据显示上可能就是空，还是如何显示？


2. 考核细则

	 * 分包商基本字段 ：分包商名称 ，分包专业，通讯地址，联系人，联系电话（2个字段一个不为空即可）

	 * 分供商基本字段：分供商名称，通讯地址，联系人，联系电话

3. 修改时间 

	创建时间要早于或者等于纸质的各种基准时间。






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 238 2011年7月22日

1. 供应商创建日期修改



2. 报表



3. 分包商评价，有管理部门（事业部层）和评价部门（管理部下各事业部）

	sql 修改
		alter table t_pm_fb_providergrade add evaluatesuborgid varchar(40)

	根据 evaluatesuborgid 确定评价的项目部 ，历史数据根据创建人确定项目部

	历史数据 employee存的是name，不好处理。？ 改为ID,否则创建人字段没什么用处。

		根据分包的合同找到主合同的施工项目部，一般就是这个项目部来评价。把历史数据的评价
	部门更新为对应的施工项目部。
	
	-- (1)历史数据（一个评价对应一个分包合同情况）

	update t_pm_fb_providergrade set evaluatesuborgid = t1.prjdeptid from (
		select o.id,b.prjdeptid,c.name from t_pm_fb_providergrade o 
		inner join t_pm_fb_contractunderwrite a on a.id = o.pid
		left join t_pm_contract b on b.id = a.contractid
		left join t_hr_org c on c.id  = b.prjdeptid
	) t1
	where t_pm_fb_providergrade.id = t1.id

	-- (2) 现有数据 （一个评价对应多个分包合同情况）

	    update t_pm_fb_providergrade set evaluatesuborgid = t1.prjdeptid from (
		    select o.id,b.prjdeptid,c.name from t_pm_fb_providergrade o 
		    left join ( select pid,max(subconid) as subconid from t_pm_fb_providergradesub group by pid) d on d.pid = o.id
		    inner join t_pm_fb_contractunderwrite a on a.id = d.subconid
		    left join t_pm_contract b on b.id = a.contractid
		    left join t_hr_org c on c.id  = b.prjdeptid
		    where o.pid is null or o.pid = ''
	    ) t1
	    where t_pm_fb_providergrade.id = t1.id

	-- 一个评价对多个合同情况

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 239 2011年7月25日

1. 分包变更 查看发起的流程时，找不到jsp页面 

	由于在最初配置流程模板时（tablelist.java）里 把 t_pm_fb_subcontractalter 写成了 t_pm_fb_Subcontractalter ,s字母的大小写
这个表名存入了模板表（T_OA_FLOWTEMPLATE）和流程主表（T_OA_FLOWPROCESS）里，导致后续根据表名得到jsp页面名
时错误。

	解决：在模板表和相关的流程表里把 字母改为小写。

		update T_OA_FLOWTEMPLATE set tablename = 't_pm_fb_subcontractalter' where id = '402894912f81f5e2012f8257caf70c6d'
		update T_OA_FLOWPROCESS set tablename = 't_pm_fb_subcontractalter' where tablename = 't_pm_fb_Subcontractalter'

2. 分包变更 删除时要删除流程信息 ？

	需要加上这个逻辑，否则只见流程记录不见内容。  
84

3. sql查询使用 union  要注意的地方

select d.name,c.firstdate,d.type from (
    select supplyerid,max(firstsupply) as firstdate from (
        select o.supplyerid,a.name,min(o.contractdate) as firstsupply  -- ,a.name
        from t_pm_equipment_purchase o
        inner join t_pm_providerinfo a on a.id = o.supplyerid
        group by o.supplyerid,a.name
        union 
        select c.secondparty as supplyerid,a.name,min(c.provdate) as firstsupply
        from t_pm_Materialcontract c
        inner join t_pm_providerinfo a on a.id = c.secondparty --and a.type = 1
        group by c.secondparty,a.name
    ) b -- 起别名
    group by supplyerid
) c
left join t_pm_providerinfo d on d.id = c.supplyerid


4. 
供应商创建日期 - 材料的按照招标里用到的日期算起

日期调整改为：
	统一到2009-1-8
	根据合同日期向前加28天作为创建日期
	再找出早于2009-1-8号的改为2009-1-8


	供应商日期调整 ：

		select createdate,* from t_pm_providerinfo where createdate < '2009-1-8'

		-- step1 全部更新到 2009-1-8
		update t_pm_providerinfo set createdate = '2009-1-8'

		-- step2 根据合同日期向前加28天
		update t_pm_providerinfo set createdate = (t1.firstdate-28) from (
		    select d.name,c.supplyerid,c.firstdate,d.createdate,d.type from (
			select supplyerid,max(firstsupply) as firstdate from (
			    select o.supplyerid,a.name,min(o.contractdate) as firstsupply  -- ,a.name
			    from t_pm_equipment_purchase o
			    inner join t_pm_providerinfo a on a.id = o.supplyerid
			    group by o.supplyerid,a.name
			    union 
			    select c.secondparty as supplyerid,a.name,min(c.provdate) as firstsupply
			    from t_pm_Materialcontract c
			    inner join t_pm_providerinfo a on a.id = c.secondparty --and a.type = 1
			    group by c.secondparty,a.name
			) b
			group by supplyerid
		    ) c
		    left join t_pm_providerinfo d on d.id = c.supplyerid
		    where c.firstdate is not null
		) t1
		where t1.supplyerid = t_pm_providerinfo.id
		-- and t_pm_providerinfo.id= '2551E319-0857-4480-8950-32B2889F3D13' -- test

		-- step3 小于2009-1-8都改为2009-1-8
		-- 全部更新到 2009-1-8
		update t_pm_providerinfo set createdate = '2009-1-8' where createdate < '2009-1-8'

5. 


3 27 
4 21
5 23
6 21
7 25



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day240 2011年7月26日

1. sql修改 供应商效果评价list页的显示速度
	-- 增加索引
	-- drop index t_pm_fb_providerfbstatus.index1 -- 格式 drop index 表名.索引名

	create index idx_pm_Materialcontract_of_secondparty on t_pm_Materialcontract (
		secondparty
	)

	create index idx_pm_equipment_purchase_of_supplyerid on t_pm_equipment_purchase (
		supplyerid
	)

2. 分析 竣工资料如何连接，哪些字段需要生成及如何生成，类别如何关联 ？竣工数据补录
	
	估计需求：
		竣工资料按工程来管理，管理工程下的各类竣工资料。部分竣工资料从工程过程中的数据中取读取连接，减少
	录入量。
		关键在于如何把竣工工程资料类别和过程中各模块的资料关联 ？找到这个关联就可以连接过来，重新生成竣工资料
	记录。

3. 对后面的需求，理出一一对应关系，并需要确认关系正确，然后根据这个关系做数据导入。
	主线是：
		以工程为主体，把各模块需要的资料按照工程及其子类别（合同，安全，质量等）自动把需要的数据生成到竣工资料对应的工程
	及其子类别中去。【业务 关键 竣工资料导入】

	同一个工程内部：竣工资料一级类别从哪里区分？（项目准备阶段，土建工程，等等）


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day241 2011年7月27日

1. 关于取模块的附件信息

	结合业务表 和 T_Sys_Doc 表，取到所以记录对应的附件信息。再结合其他需要的字段自动生成需要的记录。

	

2. 分析竣工资料自动生成 ，哪些字段可以自动生成及如何生成，定义自动生成的规则
	
	以民用竣工资料自动生成为例，下面的字段要自动取到和生成：

		* 类目名称 （竣工资料类别）
		* 工程ID（所属工程）
		* 案件题名 （生成规则：工程名 - 一级类别名 - 二级类别名） 这个在查看时动态生成，没有存入数据库（目前逻辑）
		* 文件标题 （附件的文件名称，如果有多个，）


	select count(id) from T_Sys_Doc dto等对应的附件记录表 数据 195340条

4. 整理分包管理创建日期修改sql 提供sql
	根据流程发起日期修改（前提，流程日期修改正确）

	-- 根据分包商流程发起日期，修改其创建日期(比流程发起提前2天，天数可以自定义)
	update t_pm_providerfb set createdate = (t1.flowcreatedate - 2) from (
	    select o.id,o.name,o.createdate,a.createdate as flowcreatedate
	    from t_pm_providerfb o 
	    left join T_OA_FLOWPROCESS a on a.id = o.processid
	    where a.createdate is not null and a.createdate <> ''
	) t1
	where t_pm_providerfb.id = t1.id

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day242 2011年7月28日

1. 竣工资料 自动生成 从其他模块抽取数据 需求 

	完成功能：
		（1） 数据抽取导入
		（2） 支持多次非覆盖式导入（原导入数据不用删除，只做更新）
		（3） 对于导入的竣工资料数据，可以修改基本信息，附件从其他模块读取（也从其他模块更新）

	* 自动生成的字段根据上面定的几个
	* 今天，定了下从哪些模块的点取数据 ，目前，生成的资料都归到土建 （其他一级类别不好划分）
生成后，去维护。
	* 多以多次导入，对已有的导入做附件更新（免去导入后修改过，再导入时又要修改的问题）
		这个功能实现方式：
			把原始数据的ID，存到竣工资料表A中，数据导入A表时判断此ID是否在A表已存在，如果不存在，
		执行新增操作，存在的话执行更新（把A表对应此ID的附件信息，先删除，再更新现在的附件信息）

	具体实现思路：
		* 在竣工资料表里增加列 ref_id 标识附件所在的业务表的ID
			根据上面ID即可找到对应的附件，相应执行附件信息新增插入或者更新操作。
				查看时，在页面传入 ref_id 即可显示对应的附件记录（本系统附件模块数据，只要知道业务表ID就
			能找到对应的附件信息，故只要把引用的业务表ID存入导入的竣工资料记录的ref_id中即可）。 

			【附件表设计 附件模块 设计】
				补充：
				//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					例子：
					
					providerfbview.jsp
						-------
						...
							<tr>
								<td align="right" valign="top" class="table_input_td">附件:</td>
								<td colspan=3 class="table_input_td">
								    <s:set name="id" value="providerfb.id"/>
									<jsp:include page="/common/uploadfileview.jsp">
										<jsp:param name="id" value="<s:property value='#id'/>"/>
										<jsp:param name="title" value="标题"/>
								    </jsp:include>
								</td>
								<td class="table_input_td">&nbsp;</td>
							</tr>
						...
						--------

					通用附件显示代码：/common/uploadfileview.jsp 
						--------
						...
							<%@ page contentType="text/html; charset=UTF-8" language="java"%>
							<%@ taglib prefix="s" uri="/struts-tags"%>
							<%@ taglib prefix="eb" uri="ebTag"%>
							<s:bean name="com.erp.sys.service.DocService" id="docService" />
							<table width="100%" id="attTbl">
								<s:iterator value="#docService.getDocList(#id)" status="index">
									<tr>
										<td align="left" width="40%">
											<img border='0' src="<eb:img file='attach.gif'/>">
											<a href='<%=request.getContextPath()%>/common/download.jsp?id=<s:property value="id"/>&path=<s:property value="seqname"/>' target="_parent"> 
												<font color="blue"><s:property value="name" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font> 
											</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
										</td>
									</tr>
								</s:iterator>
							</table>			
						...
						--------
							上面，传入记录的ID（只需传入ID即可，源于附件表对业务表是一对一的设计，在 t_sys_doc 表找到所有 refid 为传入的ID的记录即可），
						在附件表 t_sys_doc 里找对其对应的附件信息。
				//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		* 把不同的表，类别定义到数组里 ，循环数组执行导入操作。

	自动导入执行步骤：
		* 确定某个类别附件原始数据所在的表 ，确定这个表的附件对应竣工资料的类别（循环表和类别）
		* 根据上面信息 生成竣工资料基本字段 和 附件信息（业务表ID）
		* 把上面字段保存到竣工资料表
		* 完成

	对于导入的竣工资料后续修改和更新及多次导入的问题：
		* 由于是直接引用业务表ID来关联其附件，故业务表里附件更新，对应的竣工资料会自动取到最新的，不需要更新
		* 多次导入，只导入业务表ID没有被竣工资料表引用的记录
		* 业务表删除时，竣工资料里附件将同时丢失（它们是引用关系）

	具体步骤：
		* 在 providergradeservice 的历史数据处理代码里执行上面的操作
		* 在竣工资料表增加 ref_id 列
			sql 修改
			alter table t_pm_project_over_finishdata add ref_id varchar(40)
		* 整理业务表对应竣工资料类别（竣工资料字典代号：over_finishdata）
		* 
	
	注意：
		竣工资料的工程ID，是指 t_pm_project 表的ID ,但部分模块的工程ID，取的是 t_pm_contract 表的ID
	问题 合同表和工程表有什么联系？工程在先，合同为后 ，在经营管理中 合同签订是必须选择工程的。
	也就是，合同来自工程。但是 ，现有的表结构里，工程表里存了合同的ID,即

		工程信息 t_pm_project ，在项目管理-项目信息-工程基本信息 里维护
		合同信息 t_pm_contract ，在经营管理-合同签订里维护
	
		合同ID，找工程ID select  from * from t_pm_contract 



2. hibernate的session的结果集的再次封装，方便处理 作为数据访问工具类

将原来session返回的list转化为 map

	public static Map getUniqueMap(Session session,String sql, HashMap where) {
		Map map = null;
			Query q = session.createSQLQuery(sql);
			if (where != null) {
				Iterator it = where.keySet().iterator();
				while (it.hasNext()) {
					String key = (String) it.next();
					q.setParameter(key, where.get(key));
				}
			}
			q.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP); -- 结果集转换
			map = (Map) q.uniqueResult();
		return map;
	}

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day243 2011-7-29

1. 竣工资料导入 自动导入 自动抽取
	
	参考 武船双柳基地联合加工厂房工程  的数据格式

	文件标题格式：

	以附件名，作为文件标题，如果有多个附件，拼接到一起。

	测试 ：项目管理-安全管理-事故报告与处理-事故处理决定书 附件 的导入
	
	注：要除掉核电的项目，在竣工资料里 核电 和民用是分开管理的，list页的筛选条件如下：

	-- 去掉核电的工程数据，即为民用的工程
		and not exists (
				select
				    1 
				from
				    dbo.f_org('102') org  -- 102 是核电的机构ID
				where
				    org.id = o.prjdeptid 
			    ) 

	测试出现问题：
		(1) 竣工资料表(t_pm_project_over_finishdata)的 filetitle 字段长度不够 ，原来是 100 ，改为 200
			alter table t_pm_project_over_finishdata alter column filetitle varchar(200)

	参考： 

	最终部分代码如下：
		ConfigServlet.java
		--------
		...
			/**
			 * 自动抽取竣工资料，定时执行（每天，晚上12点）
			 */
			static{
				TimerTask task = new TimerTask(){
					@Override
					public void run() {
						FinishdataService s = new FinishdataService();
						s.updateHistoryData();
					}
				};
				Timer t = new Timer();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
				//设置当天晚上某个时间执行任务，然后设置的毫秒数重复执行
				t.scheduleAtFixedRate(task, Timestamp.valueOf(sdf.format(new Date())+" 23:59:59.999"), 24*60*60*1000);// 24*60*60*1000
			}
		...
		--------

		FinishdataService.java
		--------
		...
			/**
			 * 处理竣工资料数据从其他模块导入
			 */
			public void updateHistoryData(){
				
				new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
					@Override
					public void doInHibernate(Session session) {
						/**
						step 1 抽取的对应关系
						
						 - 竣工资料表: t_pm_project_over_finishdata
						 - 竣工资料类别字典代号: over_finishdata , 子类别用字典的数据编码来区分
						 - 在定义查询prjid的sql里筛选，去掉核电工程
						 
							业务位置 		——————————————————————————————————————————————————————————> 	竣工资料类别				字典编码
						 市场经营-开标工程-中标工程 附件(t_pm_project_succbid)							项目准备阶段-招投标、合同文件 	0105
						 项目管理-合同管理-合同信息-合同变更 附件(t_pm_contract_change)						项目准备阶段-招投标、合同文件 	0105
						 项目管理-合同管理-合同信息-合同信息 附件(t_pm_contract)							项目准备阶段-招投标、合同文件 	0105 doing
						 项目管理-安全管理-事故报告与处理-事故处理决定书 附件(t_pm_safenew_accdecision)		土建工程-施工记录 				0207
						 项目管理-质量管理-事故管理-事故处理 附件(t_pm_qualitynew_accidentdecision)			土建工程-施工记录 				0207
						 
						 
						 //...其他还需要加入的待补充
						 
						 */
						//step 2 定义要处理的业务表,根据表对应到的类别在这里定义，后面进行循环处理 ；定义：表名 - 类别编码 - 当前表取得对应工程ID(t_pm_project)的SQL
						List<String[]> tableInfo = new ArrayList<String[]>();
						tableInfo.add(new String[]{"t_pm_project_succbid","0105"," select c.id as prjid from t_pm_project_succbid a,t_pm_contract b,t_pm_project c where a.id = b.succbidid and c.contractid = b.id and isnull(c.parentid,'') = '' and isnull(b.parentid,'') = '' and not exists ( select 1 from dbo.f_org('102') org where org.id = c.prjdeptid ) and a.id = '"});//
						tableInfo.add(new String[]{"t_pm_contract_change","0105"," select c.id as prjid from t_pm_contract_change a,t_pm_contract b,t_pm_project c where a.pid = b.id and c.contractid = b.id and isnull(b.parentid,'') = '' and isnull(c.parentid,'') = '' and not exists ( select 1 from dbo.f_org('102') org where org.id = c.prjdeptid ) and a.id = '"});
						tableInfo.add(new String[]{"t_pm_contract","0105"," select b.id as prjid from t_pm_contract a,t_pm_project b where b.contractid = a.id and isnull(a.parentid,'') = '' and isnull(b.parentid,'') = '' and not exists ( select 1 from dbo.f_org('102') org where org.id = b.prjdeptid ) and a.id = '"});
						tableInfo.add(new String[]{"t_pm_safenew_accdecision","0207"," select c.prjid as prjid from t_pm_safenew_accdecision a ,t_pm_safenew_accsurvey b,t_pm_safenew_accreport c,t_pm_project d where a.surveyid = b.id and c.id = b.pid and c.prjid = d.id and not exists ( select 1 from dbo.f_org('102') org where org.id = d.prjdeptid ) and a.id = '"});
						tableInfo.add(new String[]{"t_pm_qualitynew_accidentdecision","0207"," select b.prjid as prjid from t_pm_qualitynew_accidentdecision a ,t_pm_qualitynew_accidentreport b ,t_pm_project c where a.reportid = b.id and b.prjid = c.id and not exists ( select 1 from dbo.f_org('102') org where org.id = c.prjdeptid )  and a.id = '"});
						//tableInfo.add("","","")
						//...添加导入模块待补充
						
						Map type = null;
						int num = 0;//当前导入第几条数据
						
						//循环业务表
						for(String[] infos : tableInfo) {
							//查询竣工资料类别ID，并用上面的字典编码
							String code = "";
							String sql = " select id from t_sys_dictvalue where dicttypecode = 'over_finishdata' and code = '";
							//根据step2的定义，得到此业务表对应的竣工资料的类别ID
							String typeId = "";//竣工资料的类别ID
							code = infos[1];//竣工资料类型字典编码
							sql = sql + code + "' ";
							type = (Map)session.createSQLQuery(sql).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).uniqueResult();
							if(type != null && type.get("id") != null){
								typeId = type.get("id").toString();
							}
							//找到此业务表所有带有附件记录的业务表ID，后面存入对应的竣工资料 ref_id 字段中
							String sql_parentids = " select id from "+infos[0]+" o where exists ( select 1 from t_sys_doc where refid = o.id )";
							List<String> parentids = session.createSQLQuery(sql_parentids).list();//数据抽取源，业务表ID集合
							
							DocService docservice = new DocService();
							//循环带附件的业务表ID，生成对应的竣工资料记录
							for (String ref_id : parentids) {
								//判断此业务表记录是否已被导入过
								String hql = " from Finishdata where ref_id = '"+ref_id+"' ";
								List results = session.createQuery(hql).list();
								if(results != null && results.size() > 0){
									continue;//已导入过，跳过
								}
								//得到所属工程ID
								Map prjidmap = HibernateUtil.getUniqueMap(session, infos[2]+ref_id+"' ");
								String prjid = (prjidmap == null || prjidmap.get("prjid") == null)?null:prjidmap.get("prjid").toString();
								if(!ConvertUtil.isNotEmpty(prjid)){
									continue;//找不到所属工程ID，跳过不进行导入
								}
								Finishdata f = new Finishdata();
								f.setRef_id(ref_id);
								f.setPrjid(prjid);//得到并设置所属工程
								f.setDictid(typeId);
								f.setCreatedate(new Timestamp(new Date().getTime()));
								f.setEmployee("");
								String filetitle = (String)docservice.loadDocsByRefid(session, ref_id).get("name");
								f.setFiletitle(filetitle == null?"":filetitle.substring(0, filetitle.lastIndexOf(".")));//文件标题 取第一个附件的名称
								f.setKeepterm("1");//保管期限 长期
								f.setType("1");//type=1 为民用竣工资料
								f.setIsgroup("2");
								session.save(f);
								num++;
								log.info("------------- 竣工资料导入 表名 "+infos[0]+" 第 "+num+" 条"+" ----------------");
								log.info(f.toString());
							}
						}
					}
				});
			}
		...
		--------


2. 分包商类型修改 庆安国东建筑工程有限公司 由专业改为劳务 后台修改 专业修改 修改类型 修改专业

	select * from t_pm_providerfb where ID = '4028949d2fdf276a012fe1c99c341c28'
	select max(code) from t_pm_providerfb where type = 1
	update t_pm_providerfb set type = 1,code = 'LW-2011-00465' where id = '4028949d2fdf276a012fe1c99c341c28'

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day244 2011年8月1日

1.  doc处理


2. 旧报表处理



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day245 2011年8月2日

1. 报表查询，机构树 FineReport 

	设置查询机构树时，选择下拉树表单，其中，实际值(列序号) ：表示此下拉框值对应的实际值
应在数据集中取那个列的值？（根据列序号来定） ；其他类推



2. 定时执行任务测试

	-------
	...
		public class TimerTest {

			static{
				
				TimerTask task = new TimerTask(){
					@Override
					public void run() {
						System.out.println("---- 定时任务执行 执行时间为："+new Timestamp(new Date().getTime()));
					}
				};
				
				Timer t = new Timer();
				Calendar cal = Calendar.getInstance();
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
				System.out.println(sdf.format(new Date())+" 14:51:59.999");
				//设置当天晚上某个时间执行任务，然后设置的毫秒数重复执行
				t.scheduleAtFixedRate(task, Timestamp.valueOf(sdf.format(new Date())+" 23:59:59.999"), 5*1000);
				
			}
			
			public static void main(String[] args) {
				new TimerTest();
			}
		}
	...
	-------

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day246 2011年8月3日

1. 分包商查看页面 添加签订的合同信息显示内容
	例子：
		扬州市安装防腐工程有限公司

2. 数据库表优化，对于那些引用其他表的字段，设置上索引 比如：pid ,parentid 等。

	sql 修改

	create index index_pid on t_pm_fb_contractunderwrite(
	    pid
	)
	create index index_subcontracttype on t_pm_providerfb(
	    subcontracttype
	)
	create index index_createorgid on t_pm_providerfb(
	    createorgid
	)
	create index index_createdate on t_pm_providerfb(
	    createdate
	)


补充：
	索引命名规则：
		索引命名要能反映该索引是建立在哪些字段上；其格式为：
		外键名称=前缀标志“INDEX_”+字段名称+”，多个字段之间用”_”分割；
		如在进度期间计划表（T_PM_LENPROCESS）上建立项目与期间索引，则名称为
		INDEX_pmid_lenid,其中pmid和lenid是表T_PM_LENPROCESS中的两个字段，分别代表项目ID 和期间ID;
	

sql 语句优化，补充：
	
	3. 书写优化性能建议
	  1、避免嵌套连接。例如：A = B and B = C and C = D 
	  2、where条件中尽量减少使用常量比较，改用主机变量
	  3、系统可能选择基于规则的优化器，所以将结果集返回数据量小的表作为驱动表（from后边最后一个表）。 
	  4、大量的排序*作影响系统性能，所以尽量减少order by和group by排序*作。 
	如必须使用排序*作，请遵循如下规则： 
	    (1) 排序尽量建立在有索引的列上。 
	    (2) 如结果集不需唯一，使用union all代替union。 
	5、索引的使用。
	    (1)尽量避免对索引列进行计算。如对索引列计算较多，请提请系统管理员建立函数索引。
	    (2)尽量注意比较值与索引列数据类型的一致性。
	    (3) 对于复合索引，SQL语句必须使用主索引列 
	    (4)索引中，尽量避免使用NULL。
	    (5)对于索引的比较，尽量避免使用NOT=（!=）
	     (6)查询列和排序列与索引列次序保持一致 
	 6、尽量避免相同语句由于书写格式的不同，而导致多次语法分析，尽量使用Bind变量。 
	 7、尽量使用共享的SQL语句。
	8、查询的WHERE过滤原则，应使过滤记录数最多的条件放在最前面。 
	9、任何对列的*作都将导致表扫描，它包括数据库函数、计算表达式等等，查询时要尽可能将*作移至等号右边。 
	10、in、or子句常会使用工作表，使索引失效；如果不产生大量重复值，可以考虑把子句拆开；拆开的子句中应该包含索引。
	4. 其他经验性规则 
	 1、尽量少用嵌套查询。如必须，请用not exist代替not in子句。如例（2） 
	  2、用多表连接代替EXISTS子句。如例（3）
	  3、少用DISTINCT，用EXISTS代替 如例（4） 
	  4、使用UNION ALL、MINUS、INTERSECT提高性能 
	  5、使用ROWID提高检索速度。对SELECT得到的单行记录，需进行DELETE、UPDATE*作时，使用ROWID将会使效率大大提高。 
	  6、使用优化线索机制进行访问路径控制。 
	  7、使用cursor时，显示光标优于隐式光标 

	来自 ebdoc 系统文档
 

3. FineReport 

参数查询 之 参数为空选全部值

	select * from stscore where 1=1 ${if(len(classno) == 0,"","and classno = '" + classno + "'")} ${if(len(sex)==0,nofilter,"and sex = '" + sex + "'" )}


4. 分包管理模块 加入快捷查询功能 ，在session里保存选择的工程，或者机构，list页结加上上面的条件筛选。

		设置到session中后，在baseaction中提供一个构造where子句的方法，各个调用的list方法，把相应的参数传递来，返回其相应的where
	子句，达到筛选目的。
	
	原来的功能，参考项目管理-项目信息list

	公用方法如下：
		----------
		...
			/**
			 * 构造快捷筛选条件功能，根据传递来的字段构造对应的where子句，
			 * 实现对list页结果在机构和工程条件上再次筛选功能，必选选择了一个项目后，list页只显示其下的数据
			 * @param orgIdField 所要筛选的机构字段 比如 o.deptid,a.orgid 等等
			 * @param projectIdField 所要筛选的工程字段 比如 o.id
			 */
			public String getLimitStrByFields(String orgIdField,String projectIdField){
				
				StringBuffer where = new StringBuffer();
				Project project=(Project)session.get(Constant.PROJECT);
				Org org=(Org)session.get(Constant.ORG);
			if(project!=null&&ConvertUtil.isNotEmpty(project.getId())&&ConvertUtil.isNotEmpty(projectIdField)){
				where.append(" and ").append(projectIdField).append(" = '").append(project.getId()).append("' ");
			}
			if(org!=null&&ConvertUtil.isNotEmpty(org.getId())&&ConvertUtil.isNotEmpty(orgIdField)){
				where.append(" and exists (select 1 from F_ORG('").append(org.getId()).append("') where id = ").append(orgIdField).append(" ) ");
			}
				return where.toString();
			}
		...
		----------
		然后再各自的list方法里，在where条件中附加上上面这个字符串就ok

		以 分包计划 为例：
			(1) sql中关联上工程表
			(2) 在list方法构造where条件的地方加上上面的方法返回的字符串

			page = new SubcontractplanService().getSubcontractplanList(getQuerywhere(qlevel)+getLimitWhereByFields("a.prjdeptid", "e.id"), getPageIndex().intValue(),
					Constant.PAGE_SIZE);
			//getLimitWhereByFields("a.prjdeptid", "e.id") 其中，字段名要根据此list的sql来决定

			ok


5. 分包管理中 工程表 与 合同表 关系 

    select
         o.*,
    from
        t_pm_fb_subcontractplan o  
    left join
        t_pm_contract a 
            on o.prjid = a.id  
    left join
        t_pm_project e 
            on e.contractid = a.id 
            and isnull(a.parentid,
        '') = '' 
        and isnull(e.parentid,
        '') = ''  

	2个表的parentid都为null或者空，得到唯一对应关系。


	合同表和工程表关联时，工程表里已没有了合同ID的存在，如何关联合同的工程？

	对这部分对应不上的数据，筛选为空？
		比如 ：工程名 含硫原油加工适应性改造及油品质量升级项目--凝结水回收站、除盐水站、空分/空压站
		在工程表里，可能已被删除。

6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day247 2011年8月4日

1. 根据day246第4条，把分包管理模块其他地方也加上快捷查询逻辑

有弹出框的，对应弹出框方法，也需加上筛选条件。（控制第一层list的筛选即可，其下的list条件根据上面的已做控制）
	类似：
	getQueryOrgId("o.prjdeptid") +getLimitWhereByFields("f.prjdeptid", "project.id")

	sql.append(" left join t_pm_project project on project.contractid = f.id and isnull(f.parentid,'') = '' and isnull(project.parentid,'') = '' ");//关联此表，用于快捷工程查询
	
	招标文件评审/弹出框	 关联工程表 list的where条件加上筛选条件 done
	开标/弹出框(A) done
	询标/ A done
	定标/A done
	分包合同评审/弹出框 done
	分包合同签订/弹出框 done
	分包合同交底/弹出框 done
	分包合同变更/弹出框 done
	分包合同付款/弹出框 done
	分包合同结算/弹出框 done
	ok



2. 竣工资料加上 施工合同导入部分 done

	项目管理-合同管理-合同信息-合同信息 附件(t_pm_contract)							项目准备阶段-招投标、合同文件 	0105 doing

	tableInfo.add(new String[]{"t_pm_contract","0105"," select b.id as prjid from t_pm_contract a,t_pm_project b where b.contractid = a.id and isnull(a.parentid,'') = '' and isnull(b.parentid,'') = '' and not exists ( select 1 from dbo.f_org('102') org where org.id = b.prjdeptid ) and a.id = '"});

	注：其他模块需要导入的，类似配置下即可。

3. 修改 分包合同变更 中的弹出框 数据重复
	由于，后面的分包合同可以多次付款的变更，此弹出框的sql没有处理，导致left join时产生 重复数据，把付款的链接分组下就ok
	此处注释掉付款表，并没有用到。

4. 全局的 工程和机构筛选 有利于提供操作效率，过滤掉了不必要的数据，提高了数据库读取速度，从而操作效率相对提升。

	通过条件，筛选出需要的数据来操作，达到操作的效率性
	
	【性能 操作】

5. 



	

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day248 2011年8月5日

1. 报表 劳务分包商评价统计

	得到模板

	    select
		o.*
	    from
		t_pm_gradetemplet o 
	    where
		1=1 
		and o.type='3' 
		and o.templettype='1' 
		and (
		    o.parentid is null  
		    or o.parentid = ''
		)


2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day249 2011年8月8日

1.  分包结算 审核金额，审批日期 在流程签核时填写。

	


2. 分包评价模板数据库修改重置 

	sql修改 zhhx
	
	update t_pm_gradetemplet set templettype = 1 where id = '402894162f81f86e012f82347c350c15'
	update t_pm_gradetemplet set templettype = 2 where id = '402894a13053c7f1013054416c7b0fb2'

	1 是劳务 ；2为专业 


3. 根据例子使用框架，工具等，那样上手来的快 

4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day250 2011年8月9日

1. 报表 国内分包结算汇总 

	问题：审核单位为空的情况 ？补填

	是国内事业部的报表。


2. 报表根据选择的机构层级显示不同的统计值

	* 可以通过，查询机构树时设置机构级别标识，以此来区分统计的级别。 【报表按不同层次统计】
	* 通过数据库函数，根据传入的参数返回不同的结果
	* 把所有结果都查询出来，再筛选显示

3. 竣工资料在 组卷明细里 提供明细的修改入口 ，方便修改卷内顺序等 ？
	目前，要回到资料列表去修改

4. 竣工资料 
	民用是单体工程，核电是厂房部位


5. 竣工修改 doc

6. sql 修改 
	是否归档 isfiled
	alter table t_pm_project_over_finishdata add isfiled varchar(2) -- 1-已归档；2-未归档

7. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day251 2011年8月10日

1. 竣工doc

	day231 多级list页跳转 

2. 分包模块图形报表

	参考 fushionchart文档 ：基于flash技术，xml数据格式的图标展现产品。


3. iframe , frame 跳回父级窗口
	框架窗口跳转 ，

	比如，由 某个窗口内部的iframe，或者frame窗口，跳回到父级窗口（改变父窗口的url）

	直接调用 parent 来引用父级窗口（上级窗口）

	例：
		-- 当前页面为某个窗口下一个iframe加载的窗口，现在它要改变父窗口的URL
		parent.location="<%=request.getContextPath()%>/pm/Finishdata_prjlist.action?type=1&back=1"; 

4. 查看页面在不同的地方调用，返回问题，返回到所在的list页 ？

	解决方法一：在各自的action添加方法，jsp页面共用 （方法独立，页面共用，这样就可以根据系统的返回功能
实现各自list的跳转）

5. 尽量不用session来存放变量，后期很难维护，能不用就不要用 
	比如竣工里 ，选择了工程，把工程存到了session里，可以存到request里，避免不同模块调用时，session值混乱。
	
		比如 ：民用选了工程，改变session里的工程ID，核电选了工程也去改变这个session变量，结果某此忘了改这个值
	导致ID错位。

	单体工程/厂房部位 数据错位就是上面的原因。
6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day251 2011年8月11日

1. 报表 

部分提交


2. 对象初始化一次，多次使用，避免多次加载 单例
	public class SubcontractfbChartService extends BaseService {

		private static SubcontractfbChartDao subcontractfbchartdao;
		
		public SubcontractfbChartService() {
			if(subcontractfbchartdao == null){
				subcontractfbchartdao = new SubcontractfbChartDao();
			}
		}
			
		
	}


3. sql 更新 供应商评价星级更新

	-- 把没有任何一条评价通过的供应商的星级状态由合格改为待评价
	update t_pm_providerinfo set star = '0' 
	where  star = '6'
	and not exists (

	    select 1
	    from t_pm_pro_evaluation o
	    left join
		(
		    select
			min(isnull(states,
			0)) as minStates,
			max(isnull(states,
			0)) as maxStates,
			processid 
		    from
			t_oa_flowactivities 
		    group by
			processid 
		) c on c.processid = o.processid
	    where o.providerid = t_pm_providerinfo.id
	    and c.minStates = '2'
	    and c.maxStates = '2'

	)


上面的数据，清楚一个问题：？？？
	评价流程通过了，会算入平均分，一但在后面把这个评价记录删除了，是否要更新平均分值？ 问题

		删除后更新状态比较实际 ，供应商评价星级实现自动更新，删除通过的评价流程，和新通过的评价都会
	更新到供应商星级中。 【业务 供应商评价 效果评价】

4. 事务过程中的查询，如果查询开启并提交了新事务 ？即查询操作和
	hibernate getCurrentSession

	sessionFactory.getCurrentSession(); //HibernateUtil.java

	hibernate保证同事务，
		* 可以通过session的传递；
		* 还有就是，通过都调用和当前线程绑定的session来创建的transaction来保证unit（单元）操作，即原子操作。

	补充：参看 resource\references\hibernate\getCurrentSession 与 openSession() 的区别 .txt

	回到本系统
		系统dao层的 loadEntry(String id) 方法，并没有传递session，但却和当前事务是同session的，都是用了
	getCurrentSession(),保证了同事务。也就不需要传递session了。

	这个 getCurrentSession() 以静态方法定义在工具类 HibernateUtil中，方便各层的调用。

		getCurrentSession() 获得的session随着后面的commit会被关闭，然后重新获取一个session再绑定到当前线程。
	这里，要注意同一个事务用getCurrentSession()要达到同事务，中间不能有提交过程，否则后面的session将不再是
	开启事务时的session。
		getCurrentSession() 会自动关闭。hibernate的opensessin()的session需要手动关闭。


	本系统事务错位问题：
		关键在于，用了 getCurrentSession() 来取和当前线程关联的session，却手动提交了 （比如loadenty方法，其他
	查询数据，操纵数据的方法），这样导致 getCurrentSession() 获得的session在同一个操作里是不同的，也就不能保证
	整个过程的事务一致性了。
		getCurrentSession() 获得的session是由hibernate自动管理的（开启，关闭），不需要手动提交，关闭（在好多情况下
	或者说，不能手动去关闭，比如本系统，会导致一个操作（比如加载一个dto）出现多个session）。

		【系统 事务 getCurrentSession() 同事务 手动关闭 自动关闭 自动管理】

		用 getCurrentSession() 取得session，就是把session的管理交给了hibernate框架，一般不要去手动提交关闭。如果用了
	spring框架，交由spring来管理。

		根据hibernate文档，getCurrentSession()获得的session在commit或者rollback后会自动关闭，再调用getCurrentSession() 获得的是
	新的session。

5. 报表 合格分包商名录 机构查询问题 查询机构及其下属机构的所属数据 ？ 待


6. 分包评价在流程监控，多个删除，导致卡 ？流程监控 流程删除 删除多个流程 卡事务 死锁

	以 苏静林 评价为例，同时删除两个评价流程，一个通过，一个未通过

	初步定为 ProvidergradeService 的 updateProvidergradeAndReord 方法的下面几个语句，第一次执行ok，第二次就卡死在那里 ?

				Providergrade p = loadProvidergrade(tableid[i],session);
				providergradeDao.DelGraderecord(session,p.getId()); // 这个语句内部的问题 （事务死锁）
				providergradeDao.delGradedetailsEntrys(session,p.getId());
	分析：
		
		改了上面的一个方法 ，如下 ，问题解决：
			-------
			...
				/**
				 * 功能：删除该分包商对应的评分记录
				 * @param session
				 * @param id
				 */
				public void DelGraderecord(Session session, String id) {
					StringBuilder sql = new StringBuilder();
					sql.append(" delete from t_pm_graderecord");
					sql.append(" where exists (select 1 from t_pm_gradedetails a where detailsid = a.id");
					sql.append(" and  exists (select 1 from t_pm_fb_providergrade p ");
					sql.append(" where p.id = a.pid and p.id='"+id+"') )");
			//		HibernateUtil.sqldel(sql.toString()); // -- 原来的代码，注释掉 （这个del需要开启事务，但是上面的逻辑开启的事务还没提交，导致死锁）
					SQLQuery query = session.createSQLQuery(sql.toString());
					query.executeUpdate();
				}
			...
			--------

			注意，被上面代码调用的下面的这个方法里，使用的session 和第一次使用的session不是同一个session
			---------
			...
				public static void sqldel(String sql, HashMap where) {
					Session session = null;
					try {
						session = HibernateUtil.getSession(); // -- 这个方法获得的session不能保证就是前面循环使用的session
						session.beginTransaction();
						Query q = session.createSQLQuery(sql);
						if (where != null) {
							Iterator it = where.keySet().iterator();
							while (it.hasNext()) {
								String key = (String) it.next();
								q.setParameter(key, where.get(key));
							}
						}
						q.executeUpdate();
						session.getTransaction().commit();
					} catch (JDBCException ex) {
						if (session != null) {
							session.getTransaction().rollback();
						}
						throw new MyException(ex.getSQLException());
					} finally {
						if (session != null && session.isOpen()) {
							session.close();
						}
					}
				}
			...
			---------
	原因：
		如上，2次以上的操作，第一次的事务还没提交，一个新的session是不允许进行更新操作的，导致死锁 。

	解决：如上面代码所示，使用同一个session来执行更新操作即可。【事务 死锁 同事务】


	？供应商是否有同样问题？2011-10-19

7. 根据配置流程的不同，其中一种是通过在 com/erp/oa/oaflow/util/Archivesutil.java 类里定义配置流程的部分信息。  配置流程 流程配置 流程删除
	比如 ：流程添加 ，更新 ，删除 等。

	上面这中配置方式 ，在流程的各种操作中就会调用 Archivesutil 类里定义的各自流程个性处理逻辑。

8. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day252 2011年8月12日

1. 分包报表调整 


2. 分包付款 显示风格调整

		合同列表 - 下面是 第一条的合同的付款列表（并做合计）- 点击一个合同就在下面显示其付款列表信息，- 再点付款列表某条
	去看付款查看页面。

	【业务】
	
	* 合同列表只列出有过付款的合同
	* 点击合同，在下方显示付款列表(只是查看)，点击付款列表的链接进入付款查看页面
	* 合同列表 给条记录提供 付款详细列表 链接 ，这里可以执行删除，查看 

	流程：取有付款记录的合同列表 - 取列表的第一天合同作为默认付款列表对应的合同


	ContractunderwriteAction		contractHavepaymentList()
	SubcontractpaymentAction
	subcontractpaymentlist.jsp
	subcontractpaymenttoplist.jsp
	templet_listbyconid.jsp 请求的数据页

	 t_pm_fb_subcontractpayment
	 t_pm_fb_contractunderwrite
	
	

	#f8f8f8

	注：样式改变后，有时出现显示不正常，在保证代码正确情况下，可以关闭浏览器再重新打开测试。

3. 分包图形报表

	分包管理图形报表开发内容:
		各年度分包总金额（公司级别）趋势分析(折线图)
		各事业部分包金额增长趋势分析(柱状图)
		各事业部分包金额分布图(饼图)	

	待

4. 分包管理，几个地方加进度状态提示 

	样式例子:
           <s:if test='station=="已投标"' >   
            <B class=processbar style="background-position:-90.0px"><s:property value="station"/></B>
            </s:if>
            <s:elseif test='station=="已中标"' >
            <B class=processbar style="BACKGROUND-POSITION:-70px"><s:property value="station"/></B>
            </s:elseif>
             <s:elseif test='station=="未中标"' >
            <B class=processbar style="background-position:-100.0px"><s:property value="station"/></B>
            </s:elseif>
             <s:elseif test='station=="已签合同"' >
            <B class=processbar style="background-position:-60.0px"><s:property value="station"/></B>
            </s:elseif>
             <s:elseif test='station=="已开工"' >
            <B class=processbar style="background-position:-40.0px"><s:property value="station"/></B>
            </s:elseif>
              <s:elseif test='station=="已竣工"' >
            <B class=processbar style="background-position:-20.0px"><s:property value="station"/></B>
            </s:elseif>
              <s:elseif test='station=="已结算"' >
            <B class=processbar style="background-position:-0.0px"><s:property value="station"/></B>
            </s:elseif>

	把  processbar 样式加入到公用style文件中

	1) 合同签订：done

	t_pm_fb_subcontractclosing 结算表 
	-- signtype = 1 结算类型为竣工；或者 isclosed = 1 合同结算已关闭； 则视为已结算

	进度状态，合同状态显示逻辑：

		标书已发放->已定标->已合同评审->已签合同->已结算 按照完成点来显示，如果没有完成，
	就判断流程是否通过，如果也没通过状态就是上一步的状态。

		比如：合同签订流程还未通过，则状态为 已合同评审

	<td>
		<s:if test="station == '已合同评审'">
			<b class="processbar" style="background-position:-100.0px"><s:property value="station"/></b>
		</s:if>
		<s:elseif test="station == '已签合同'">
			<b class="processbar" style="background-position:-50.0px"><s:property value="station"/></b>
		</s:elseif>
		<s:elseif test="station == '已结算'">
			<b class="processbar" style="background-position:-0.0px"><s:property value="station"/></b>
		</s:elseif>
	</td> 

	一个计划对应对个合同时的判断 ，分组后，根据最大值最小值判断一致性，按照这样把合同评审位置的状态根据计划ID进行分组

	2) 合同评审 done
	

	3）定标 合同评审关联定标明细 ，再根据定标明细分组

		-- 定标进度状态条sql
		select o.id,case when t2.station is not null then t2.station when isnull(o.flowstatus,'') <> '1' then '标书已发放' when o.flowstatus = '1' then '已定标' end station
		from t_pm_fb_bidpick o
		left join (
		    select picksub.pid as pickid,max(t1.station) as station
		    from t_pm_fb_bidpicksub picksub
		    left join (
			    select 
				syn.id,
				syn.pid,
				case 
				    when conclose.id is not null then '已结算'
				    when conwrite.id is not null then '已签合同'
				    else '已合同评审'
				end station
			    from t_pm_fb_subcontractsyndic syn
			    left join t_pm_fb_contractunderwrite conwrite on conwrite.pid = syn.id and conwrite.flowstatus = '1'
			    left join t_pm_fb_subcontractclosing conclose on (conclose.signtype = '1' or conclose.isclosed = '1') and conclose.pid = conwrite.id
			    where syn.flowstatus = '1'
		    ) t1 on t1.pid = picksub.id
		    group by picksub.pid -- 计划明细根据计划分组
		    having min(t1.station) = max(t1.station) -- 计划对应的所有明细的station都同步
		) t2 on t2.pickid = o.id

		3) 招标文件编审

			select o.id,case when t3.station is not null then t3.station when isnull(o.flowstatus,'') <> '1' then '待编审' when o.flowstatus = '1' then '已编审' end station
			from t_pm_fb_invitebid o
			left join (
			    select pick.pid,case when t2.station is not null then t2.station else '已定标' end station
			    from t_pm_fb_bidpick pick
			    left join (
				select picksub.pid as pickid,max(t1.station) as station
				from t_pm_fb_bidpicksub picksub
				left join (
					select 
					    syn.id,
					    syn.pid,
					    case 
						when conclose.id is not null then '已结算'
						when conwrite.id is not null then '已签合同'
						when syn.id is not null then '已合同评审'
					    end station
					from t_pm_fb_subcontractsyndic syn
					left join t_pm_fb_contractunderwrite conwrite on conwrite.pid = syn.id and conwrite.flowstatus = '1'
					left join t_pm_fb_subcontractclosing conclose on (conclose.signtype = '1' or conclose.isclosed = '1') and conclose.pid = conwrite.id
					where syn.flowstatus = '1'
				) t1 on t1.pid = picksub.id
				group by picksub.pid -- 计划明细根据计划分组
				having min(t1.station) = max(t1.station) -- 计划对应的所有明细的station都同步
			    ) t2 on t2.pickid = pick.id
			    where pick.flowstatus = '1'
			) t3 on t3.pid = o.id


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day253 2011年8月13日

1. 继续 day252 第4条 ，还有 定标 ，询标，招标文件评审  待


2. 处理分包管理所有list页的高级查询配置（加入更多关键字段查询）
	
	list页

	* 新引进分包商 
	* 合同分包商
	* 不合格分包商
	* 分包计划
	* 分包计划明细
	* 招标文件编审
	* 招标文件发放
	* 开标 
	* 询标
	* 询标明细
	* 定标
	* 定标明细
	* 分包合同评审查询
	* 分包合同签订查询
	* 分包合同交底查询 -
	* 分包合同交底条款查询
	* 分包合同变更查询
	* 分包付款申请查询 -
	* 分包结算查询
	* 分包商效果评价查询
	done

3. 流程注意 流程中使用 flowstatus 来判断状态时 ，比如 flowstatus = 1 表示流程通过 ，flowstatus = 2 流程不通过

	要用 flowstatus来筛选list（不用签核表的最大最小值）时，在 重发审批 等操作时，要及时更新 flowstatus 的值，否则
业务表的这条记录状态就矛盾了（比如 既是刚重发流程，却又是流程不通过状态 ）

	注意地方：1 重发流程时 重置flowstatus为null

4. 


四川水电建设工程集团有限公司 



5. 系统问题 ，并发问题 ，？

	假如 a 在对一条记录发起流程 ，b 在a还在填写数据准备发送之前，把这条记录删除了，此时如果不做判断，会报错。
	
	这些情况，都要处理到 。。 待

6. 删除 业务记录，同时删除流程记录 流程删除 

	例子：
		OpenbidService

		public void delOpenbids(final String[] ids) {	
			new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
				@Override
				public void doInHibernate(Session session) {
					FlowprocessService s = new FlowprocessService();
					for (String id : ids) {
						Openbid o = (Openbid)session.get(Openbid.class, id);
						if(o != null){
							if(ConvertUtil.isNotEmpty(o.getProcessid())){
								s.doDelProcess(session, o.getProcessid());
							}
							session.delete(o);
						}
					}
				}
			});
			FileManager.delUploadFiles(ids, null);//放到service层
		}

		上面这段代码，如果所有的dto都有个带processid的父类就可以抽取出来。

7. 继续 分包付款风格修改 day252 第2条 line 21824
	


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day254 2011年8月15日

1. 余下的状态条显示 

	合同签订重复问题的 统计及处理 

	得出重复引用评审，签订重复合同的数据

	
	select pid,max(subname),min(subname),count(id) from t_pm_fb_contractunderwrite group by pid having count(id)>1 

2. 分包商如果合作过的，删除其审批流程，根据现有逻辑就显示不出来了  ？ 

	新引进里筛选掉了合作过的，合格的又必须是流程通过的，他又不是不合格 呵呵

	按照现有的逻辑，除非把合作过的信息都删除，才会在新引进里出来。
	太复杂了，就不好用了

	
3. 完善 day252 第二条 
	合计
	done

4. 分包商状态表  t_pm_fb_providerfbstatus 加上 停用/启用 字段 suspend  (原来是引用评价的状态 6-合格 ；7-不合格)

	sql修改

	-- suspend 1-启用；2-停用
	alter table t_pm_fb_providerfbstatus add suspend varchar(1) not null default '1'

	suspend : 1- 启用 ；2-停用

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day255 2011年8月16日

1. 报表 分包计划执行明细表  
	
	“这个报表 展示整个分包管理的各部进度”

	类似，之前的进度状态


补充：、
	sql server ：plan 是关键字，不要做别名用

finereport  tip
	分组显示，字段按条件筛选时，要选好被筛选的字段。

报表开发：
	* 先用sql得到报表的数据，根据需要显示的格式的数据，然后设置显示条件，其中得到数据的sql设计好了，后面的显示就简单了

	比如此计划执行报表，得到每个工程下每个计划下每个明细的执行状态（其中在评审处还需对定标分组）

	例子:
		select con.id as conid,splan.id as planid,splan.prjid as parent_conid,detail.id as detailid,detail.parentid as parent_planid,con.code,con.prjname,splan.name as planname,detail.content,case when t2.station is not null then t2.station when pick.id is not null then '已定标' when invite.id is not null then '发标' else '未发标' end station
			    from t_pm_fb_subcontractplandetail detail
			    inner join t_pm_fb_subcontractplan splan on splan.id = detail.parentid
			    inner join t_pm_contract con on con.id = splan.prjid
			    left join t_pm_fb_invitebid invite on invite.pid = detail.id and invite.flowstatus = '1'
			    left join t_pm_fb_bidpick pick on pick.pid = invite.id and pick.flowstatus = '1'
			    left join (
				select picksub.pid as pickid,max(t1.station) as station
				from t_pm_fb_bidpicksub picksub
				left join (
					select 
					    syn.id,
					    syn.pid,
					    case 
						when conclose.id is not null then '已结算'
						when conwrite.id is not null then '已签合同'
						when syn.id is not null then '已合同评审'
					    end station
					from t_pm_fb_subcontractsyndic syn
					left join t_pm_fb_contractunderwrite conwrite on conwrite.pid = syn.id and conwrite.flowstatus = '1'
					left join t_pm_fb_subcontractclosing conclose on (conclose.signtype = '1' or conclose.isclosed = '1') and conclose.pid = conwrite.id
					where syn.flowstatus = '1'
				) t1 on t1.pid = picksub.id
				group by picksub.pid -- 计划明细根据计划分组
				having min(t1.station) = max(t1.station) -- 计划对应的所有明细的station都同步
			    ) t2 on t2.pickid = pick.id		

	* 报表 下拉树
	在复用时，注意下拉树的事件编辑 ，要修改为自己的逻辑。


2. 分包计划数据中，历史删除计划时计划明细没有删除的数据 

	对于在业务上端将数据删除时，业务下端不变同时删除的情况，可以通过控制下端的数据，如果上面被引用数据
已被删除则下面，不再显示出来，避免错误数据继续生成。 

	高级删除 
	
	计划明细找不到计划 ？

3. 
	



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day256 2011年8月17日

1. 图形报表 开始

xml格式：
格式1：

	<chart formatNumberScale='0' decimalPrecision='0' caption=' 华兴建设有限公司总产值增长趋势分析' outCnvBaseFontSize='12'  baseFont='Arial'   slantLabels='1'     showValues='1' anchorRadius='3' anchorBgAlpha='50' lineThickness='1' showValues='0'  anchorRadius='2'divLineAlpha='20' divLineColor='CC3300' divLineIsDashed='1' showAlternateHGridColor='1' alternateHGridAlpha='5' alternateHGridColor='CC3300' shadowAlpha='40' labelStep='2' numvdivlines='5' chartRightMargin='35' bgColor='FFFFFF,CC3300' bgAngle='270' bgAlpha='10,10' reverseLegend='1'  baseFontSize='12' palette='2'  numVisiblePlot='12'>

		<categories>
			<category label='2005' />
			<category label='2006' />
		</categories>

		<dataset seriesName='总完成产值'  showValues='0'>
			<set value='174155.44'/>
			<set value='221131.79'/>
		</dataset>
		<dataset seriesName='总剩余工作量'  showValues='0'>
			<set value='1126636.88'/>
			<set value='1390531.65'/>
		</dataset>

	</chart>
	多个值对比 数据格式一样，在不同的图里，数据显示风格不一样 折线图 ，柱状图等等

2. 整理下ER图


3. 几个报表  

	分包管理图形报表开发内容:
		各年度分包总金额（公司级别）趋势分析(折线图) —— 对分包合同按年度统计分包金额
		各事业部分包金额增长趋势分析(柱状图)
		各事业部分包金额分布图(饼图)		
	
	SubcontractfbchartAction

4. 分包付款  默认按第一条合同查询付款list，如果合同记录为空，比如查询，要处理付款list，不是全部出来。

5. 样式 有时div中内容多时，会和上面的内容间有空白产生，其中 是由于 垂直对齐属性没有设置,
设置为 vertical-align: top;就会垂直向上对齐

6. 分包管理 模块 并发问题 【唯一  唯一性约束 unique 并发 】 

	对于分包管理，由于是按照流程一步步执行的，一份合同评审对应一份合同，故现有逻辑，会筛选掉
已被引用过的数据。
	但是，在并发情况下，由于数据库没有做唯一性约束，导致并发操作同一条记录时，重复引用了某个评审
的数据存入了数据库。
	解决：
		方式 1 ：保存时，再判断下，此数据是否已被引用
		方式2 ：对数据库唯一性字段加上唯一约束

	先 采用方式2解决。

	处理模块中由于并发，引起的重复数据，并加上唯一约束

	sql 修改

		招标文件编审发放
			alter table t_pm_fb_invitebid add constraint invitebidpid_unique_key unique (pid) 
		开标
			alter table t_pm_fb_openbid add constraint openbidpid_unique_key unique (pid)
		询标
			alter table t_pm_fb_bidinquiry add constraint bidinquirypid_unique_key unique (pid)
		定标
			alter table t_pm_fb_bidpick add constraint bidpickpid_unique_key unique (pid)  -- // 待重复数据处理掉
		合同评审
			alter table t_pm_fb_subcontractsyndic add constraint synpid_unique_key unique (pid)
		合同签订
			alter table t_pm_fb_contractunderwrite add constraint writepid_unique_key unique (pid)  -- // 待重复数据处理掉


7. alter table  忽略约束  nocheck 和 with nocheck 的区别

8. sql 按年统计 按月统计 sql 统计

	补充：

		用sql语句按周、按月、按季、按年统计 
		2010-12-28 11:43
		--按mySql语法统计按周,月,季,年。income为合计的价格字段，createDate为交易时间。
		select sum(income)as revenue,week(createDate) as week,month(createDate) as month,

		quarter(createDate)as quarter,year(createDate)as year from employee
		where year(createDate) >= '2006' group by
		week(createDate),month(createDate),quarter(createDate),year(createDate)

		 
		--sqlserver2005语法统计按周,月,季,年。

		--按日
		--select sum(price),day([date]) from table_name where year([date]) =
		'2006' group by day([date])
		--按周quarter
		select sum(price),datename(week,price_time) from ble_name where
		year(price_time) = '2008' group by datename(week,price_time)
		--按月
		select sum(price),month(price_time) from ble_name where year(price_time)
		= '2008' group by month(price_time)
		--按季
		select sum(price),datename(quarter,price_time) from ble_name where
		year(price_time) = '2008' group by datename(quarter,price_time)

		--按年
		select sum(price),year(price_time) from ble_name where
		year(price_time) >= '2008' group by year(price_time)

9. 合同签订日期为空 的数据 是否需要补填日期 ？

	select signdate,* from t_pm_fb_contractunderwrite where isnull(signdate,'') = '' and flowstatus = '1'
	
	在按年统计合同总额时，这部分数据就不能归到年了 

	问题 对于合同额为0的合同如何统计 ？

	对于统计的数据，部分数据由于 pid 引用失效 ，这些记录需要筛掉


10.  表设计 多级引用的情况 通过外键引用来实现，避免下面字表需要层层引用上面的表才能找到数据。

11. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day257 2011年8月18日

1. 图形报表 go on
	自动将 < > / 转码问题  转义

	用 <%=request.getAttribute("xmlstr")%> 可以正常输出 ，用了struts标签 <s:property value="xmlstr"/> 则是转义后的字符串 ？ 



2. B类供应商转A类功能，

	* 补填必填数据  ，
	* 物资，设备，用到的地方（筛选条件），各自调整。 ？


3. 分包模块 表之间层层引用 ，但没有建强制外键关联，导致中间数据删除，后面引用它的数据无效 ，
	1) 准备将这个外键强制关联，删除被引用的数据时，需要先删除引用它的数据
	2) 高级删除，自动删除所有引用的数据 （危险）
	3) 不强制外键关联 删除时程序判断是否有引用的数据，有则报错，提示先删除引用数据，再执行删除。 （建议） ？ 待


4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day258 2011年8月19日

1. 饼状图
	饼状图 xml 格式：
		<chart formatNumberScale='0' decimalPrecision='0'
			caption='2011年各事业部签约合同数分布图(计量单位：个)' palette='4' decimals='0'
			enableSmartLabels='1' enableRotation='0' pieSliceDepth='25'
			bgAlpha='40,100' bgRatio='0,100' bgAngle='360' startingAngle='70'
			baseFontSize='12' decimalPrecision='0'>
			<set name='核电事业部' value='7' color='AFD8F8' />
			<set name='中核华誉' value='31' color='F6BD0F' />
			<set name='国内事业部' value='26' color='8BBA00' />
			<set name='机械化公司' value='2' color='A66EDD' />
		</chart>

2. 评价重发修改 ，删除问题 处理

3.将供应商评分页面的待扩展 checkbox 先注释
	t_pm_pro_evaluationtemplet1.jsp
	t_pm_pro_evaluation_view.jsp



4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day259 2011年8月22日

1. 其他报表


2. 


3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day259 2011年8月23日

1. 付款流程修改


2. 报表 


3. 对于父子表关系的数据 删除问题
	* 如果没有建立强外键关系（必须删除子表数据才能删除父表数据）
	* 不建立外键关系，通过程序来控制，删除主表记录时，判断是否有引用它的子表记录，必须
	   先删除子表数据才能删除主表数据。
	
	“数据已被引用，请先删除其子数据”

	外键 是否建立 不建立又必须处理级联操作的问题（父子表的级联删除，或者提示并手动删除）。

	任务：
		分包模块，对被引用的数据删除前判断是否被引用，并提示先删除引用其数据的记录，再进行删除。

		例子：
			if(subcontractsyndicDao.isHavingSubrecord(session, "t_pm_fb_contractunderwrite", "pid", id)){
				throw new MyException("数据已被引用，请先删除引用它的合同签订记录");
			}


4. 系统机构表 机构树 通过ID用数字的前端匹配来实现树此次

	select a.id,a.name,a.type,0 as havenum
	from t_hr_org a
	where 1=1
	and a.status = '2'
	and exists (select 1 from t_pm_fb_subcontractplandetail where left(bidorgid,len(a.id)) = a.id) -- 匹配左侧是否一致来判断是否属于同一机构。

	严格，还是按照parentid来标识树层级
	
5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day260 2011年8月24日

1. doc问题处理 分包管理问题集822.docx 
	1）清除分包评价中 没选择模板（是模板被删除的情况）但有审批流程的数据

		--  流程监控 表中，流程没删除但业务表记录已删除的数据，需要清除 （也就是删除记录没有删除流程的情况产生的垃圾数据）
		select * 
		from t_oa_flowprocess a
		where a.tablename = 't_pm_fb_providergrade'
		and a.id not in (select processid from t_pm_fb_providergrade where processid is not null and processid <>'') -- // 注：这里子查询要处理好null值，否则结果集会不正确。因为null值不与任何值相等。


		// 清除 流程监控中 业务记录已删除，但流程没有删除的历史垃圾数据

		    -- 删除上面查询得到流程ID对应的签核记录 然后删除主流程
		    delete from t_oa_flowactivities where processid in (
			select id 
			from t_oa_flowprocess a
			where a.tablename = 't_pm_fb_providergrade'
			and a.id not in (select processid from t_pm_fb_providergrade where processid is not null and processid <>'')        
		    )
		    delete from t_oa_flowprocess where id in (
			select id 
			from t_oa_flowprocess a
			where a.tablename = 't_pm_fb_providergrade'
			and a.id not in (select processid from t_pm_fb_providergrade where processid is not null and processid <>'')  
		    )
		    
		    -- 供应商在流程监控中的垃圾数据 类似上面
		    -- 删除上面查询得到流程ID对应的签核记录 然后删除主流程
		    delete from t_oa_flowactivities where processid in (
			select id
			from t_oa_flowprocess a
			where a.tablename = 't_pm_providerinfo'
			and a.id not in (select processid from t_pm_providerinfo where processid is not null and processid <>'')        
		    )
		    delete from t_oa_flowprocess where id in (
			select id 
			from t_oa_flowprocess a
			where a.tablename = 't_pm_providerinfo'
			and a.id not in (select processid from t_pm_providerinfo where processid is not null and processid <>'')  
		    )

		注：替换里面的业务表，用于其它表的垃圾数据清理。

		比如 替换 为 t_pm_fb_subcontractplan 清除这个表的垃圾数据（历史数据）

	2）


2. 流程相关表

	t_pm_fb_providergrade
	t_pm_fb_subcontractplan
	t_pm_fb_invitebid
	t_pm_fb_openbid
	t_pm_fb_bidinquiry
	t_pm_fb_bidpick
	t_pm_fb_subcontractsyndic
	t_pm_fb_contractunderwrite
	t_pm_fb_subcontractalter
	t_pm_fb_subcontractpayment
	t_pm_fb_subcontractclosing
	t_pm_providerinfo


3. 通过关联查询得到引用表数据已被删除的历史数据，并删除这些记录 （暂时注释掉机构权限即可看到这些垃圾数据）
	配合程序控制的外键关系。

4. 为确保删除正常，系统删除前不会检查对象是否存在，故自己可以先判断后，再删除 ，否则hibernate会报 attempt to create delete event with null entity  错误
	if(ConvertUtil.isNotEmpty(o.getProcessid())){
		if(session.get(Flowprocess.class, o.getProcessid())!=null){
			s.doDelProcess(session, o.getProcessid());
		}
	}
	session.delete(o);

5. 分包合同签订 合同 ，补充合同 业务 ？ 合同补充 业务

	目前，没有处理补充合同的逻辑。

6. 分包评价list页显示评价状态 待评价（或者各事业部最低分）

7. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day261 2011年8月25日

1. 处理分包计划明细垃圾数据 （计划被删除的情况）


2. 竣工资料导入添加 

	项目管理-技术管理-施工组织设计/专项施工方案————>民用竣工资料-土建工程-施工技术文件

	配置如下：



3. 对于父子表关系建立外键约束  sql 修改

	alter table t_pm_fb_subcontractplandetail add constraint fk_t_pm_fb__reference_t_pm_fb_plan foreign key (parentid) references t_pm_fb_subcontractplan (id)

	注：建立外键冲突 a.文件名重复 b.补建外键时，所引用的主表ID不存在，也会导致外键不能建立

	补充：通过建立外键，也可以判断所引用的数据是否完整。

4. 给分包模块 上下引用都加上外键关联 （虽然程序已做控制）避免意外的sql操作，导致垃圾数据 
	sql 修改
	alter table t_pm_fb_invitebid add constraint fk_invitebid_reference_plandetail foreign key (pid) references t_pm_fb_subcontractplandetail (id) 
	alter table t_pm_fb_openbid add constraint fk_openbid_reference_invitebid foreign key (pid) references t_pm_fb_invitebid (id)
	alter table t_pm_fb_bidinquiry add constraint fk_bidinquiry_reference_invitebid foreign key (pid) references t_pm_fb_invitebid (id)
	alter table t_pm_fb_bidinquirysub add constraint fk_bidinquirysub_reference_bidinquiry foreign key (pid) references t_pm_fb_bidinquiry (id) -- done
	alter table t_pm_fb_bidpick add constraint fk_bidpick_reference_invitebid foreign key (pid) references t_pm_fb_invitebid (id)
	alter table t_pm_fb_bidpicksub add constraint fk_bidpicksub_reference_bidpick foreign key (pid) references t_pm_fb_bidpick (id) -- done
	alter table t_pm_fb_subcontractsyndic add constraint fk_subcontractsyndic_reference_bidpicksub foreign key (pid) references t_pm_fb_bidpicksub (id)
	alter table t_pm_fb_contractunderwrite add constraint fk_contractunderwrite_reference_subcontractsyndic foreign key (pid) references t_pm_fb_subcontractsyndic (id)
	alter table t_pm_fb_subcontractalter add constraint fk_subcontractalter_reference_contractunderwrite key (pid) references t_pm_fb_contractunderwrite (id)
	alter table t_pm_fb_subcontractpayment add constraint fk_subcontractpayment_reference_contractunderwrite foreign key (pid) references t_pm_fb_contractunderwrite (id)
	alter table t_pm_fb_subcontractclosing add constraint fk_subcontractclosing_reference_contractunderwrite foreign key (pid) references t_pm_fb_contractunderwrite (id)

	通过修改各个地方的list的sql语句得到需要处理的垃圾数据，方便从页面上进行处理。

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day262 2011年8月26日

1. 报表优化


2. 分包评价 ，会出现劳务分包商，选的确是专业模板 ，？这个问题，现实中，会有劳务分包商签订专业合同，故评价选择专业的模板，属正确数据，显示即可。


3. 分包评价 选择的合同列表控制
	条件：竣工后三个月内可以出现，超过3个月不再显示 

	问题：目前是数据补录，可能好多合同都竣工超过3个月，此一屏蔽就不能做评价了 ？


4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day263 2011年8月27日

1. 修改评价查看页显示bug 


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day264 2011年8月29日

1. 2011年8月25日的问题-p.doc问题处理 doing


2. 2011年8月25日的问题-p.doc 问题处理 doing

3. 报表调整

4. finereport 格式化文本 显示  可以用其自带的大量函数来处理 比如 需要显示 大写的序号 （一二三四...）

	=numto(&b4,false)

5. about spring
	The "Struts" framework is no doubt a good framework to enhance the ability of the web tier, but the biggest drawback is the fact that it caters only 
to the web tier and leaves most of the Enterprise tier or middle tier to the fancy of the application architects.

6. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day265 2011年8月30日

1. 处理计划，其他doc提交问题

2. 模糊查询 多条件查询
	多条件查询  -  多类别的模糊查询 实现 

	比如：供应商既提供木材，又提供混凝土机械 ，根据供应商供应类别以字符串方式存入一个字段中的，可以将多个条件串起来
	实现类别 “与”查询
	
	...
	and 供应类别.包含 木材
	and 供应类别.包含 混凝土机械
	...

	代码重构：取多个checkbox的值的js方法，可以抽取为公用。

	系统扩展，多条件查询 AND查询 或者OR查询 【系统 查询配置 系统查询】
	适用情况：一个字段包含多个值，需要进行AND匹配查询

	可以在 QueryUtil 类里扩展。QCONSTANT.T_MULTI_AND = "multi_and"

	扩展高级查询 查询类型 ，多个ID，以逗号“,”拼接起来 ，取都包含的数据。

3. QConstant - 配置与查询相关的常量

4. 系统重复提交问题  在系统慢时，最容易发生，等待没反应就刷新页面
	
系统增加 token 防重复提交问题 

	目前，采用提交时，屏蔽操作按钮 ，但这只能在一定程度上避免重复提交，如果用户等待必填没反应，进行了刷新页面的操作
数据还是会重复提交，治标不治本。
	从根本上，阻止重复提交的实现方式：
		利用 struts2 的token机制 来避免重复提交 （原理每个表单页面生成唯一标识，通过struts2自带的拦截器来验证是2次提交的token是否一致判断是否重复提交）

		步骤：
			1) 在 表单页面用 struts2的标签，生成 token值  <s:token/>
			2) 在struts配置文件里配置 token 拦截器 
				局部方法配置：
				例如：
					<action class="com.erp.pm.provider.action.ProviderinfoAction" method="{1}" name="Providerinfo_*">
						<interceptor-ref name="token">
							<param name="includeMethods">doadd</param>
							<param name="includeMethods">doupdate</param>
						</interceptor-ref>
						<interceptor-ref name="loginDefaultStack"/>
						<result name="invalid.token">/common/duplicatesubmiterror.jsp</result>
						<result name="view">
							/erp/pm/provider/providerinfoview.jsp
						</result>
						<result name="input">
							/erp/pm/provider/providerinfoinput.jsp
						</result>

					此配置补充说明：

						NOTE: As this method extends off MethodFilterInterceptor, it is capable of deciding if it is applicable only to selective methods in the
							action class. See MethodFilterInterceptor for more info

						MethodFilterInterceptor is an abstract Interceptor used as a base class for interceptors that will filter execution based on method names
						according to specified included/excluded method lists.

						Settable parameters are as follows:

						excludeMethods - method names to be excluded from interceptor processing  // 定义不需要被拦截的方法
						includeMethods - method names to be included in interceptor processing  // 要被拦截的方法

						----- from struts2 documentation

				全局配置：
						struts-pm.xml
						...
						<interceptors>
							<interceptor class="com.frame.servlet.LoginInterceptor" name="loginInterceptor"/>
							<interceptor class="com.frame.servlet.MaterialInterceptor" name="materialInterceptor"/>
							<interceptor class="com.frame.servlet.NpdBoqInterceptor" name="NpdBoqInterceptor"/>
							<interceptor-stack name="loginDefaultStack">
								<interceptor-ref name="defaultStack"/>
								<interceptor-ref name="loginInterceptor"/>
							</interceptor-stack>
							<interceptor-stack name="materialStack">
								<interceptor-ref name="defaultStack"/>
								<interceptor-ref name="loginInterceptor"/>
								<interceptor-ref name="materialInterceptor"/>
							</interceptor-stack>
							<interceptor-stack name="npdboqStack">
								<interceptor-ref name="defaultStack"/>
								<interceptor-ref name="loginInterceptor"/>
								<interceptor-ref name="NpdBoqInterceptor"/>
							</interceptor-stack>
							<interceptor-stack name="duplicatesubmitstack"><!-- 避免重复提交 -->
								<interceptor-ref name="token">
									<param name="includeMethods">doadd</param>
									<param name="includeMethods">doupdate</param>
								</interceptor-ref>
								<interceptor-ref name="loginDefaultStack"/>
							</interceptor-stack>
						</interceptors>					
						...

					action的配置

						...
						<action class="com.erp.pm.provider.action.ProviderinfoAction" method="{1}" name="Providerinfo_*">
							<interceptor-ref name="duplicatesubmitstack"/>
							<result name="view">
								/erp/pm/provider/providerinfoview.jsp
							</result>
						...
		
	全局配置完成后：
		只需要对需要避免重复提价的action配置时引入 <interceptor-ref name="duplicatesubmitstack"/> ，并在input页的form里加上
	生成token值的 <s:token/> 标签即可。
	
	原理：
		生成页面表单时，将token放到表单中，同时将token放到action的session中；请求提交后，对比token是否一致，一致的话就去掉session中的token，这样
		下次再请求带着个token时就会判断出不合法。
		
		注：这里关键的地方是，token一开始是放到会话session中的，在本次会话过程中都有效。


		

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day266 2011年8月31日

1. doc
	报表部分 交由 shen

2. 分包商停用扩展 类似供应商停用 ，以及停/启用记录人性查看完善 doing 
	
	t_pm_providersuspendinfo 和供应商公用一张停/启用表，两者字段都是一样的，通过 pid 来划分所属主记录。
	通过 dofrom 判断来自哪个模块的操作 ：
		dofrom = 1 供应商
		dofrom = 2 分包商

	sql 修改 
		alter table t_pm_providersuspendinfo add orgid varchar(40) -- 用于分包商停用事业部机构ID

	测试： 天津鑫荣建筑工程有限公司

	供应商： 嘉峪关市建军五交化经销部

3. 系统完善 当人为传递错误参数到服务器时，是否都做了处理 ？
	比如：
		原URL
			http://localhost:8080/zhhxpm/pm/Providerinfo_view.action?id=402894912f0e968c012f0ebf0a1705a1
		改为
			http://localhost:8080/zhhxpm/pm/Providerinfo_view.action?id=123

		上面问题是，找不到对象如何处理 ,

	解决方法1：判断错误位置，指向到错误页面 比如 error.jsp

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day267 2011年9月1日

1. 分包商编码统一调整 
	分包商编码全部都是2011年的，需要系统应统一调整，统一按该分包商与公司内部单位签订的最早
一份分包合同的签订时间来统一生成分包商的编码 早于2009年的统一用2009年（系统2009开始使用）

问题：* 合同签订时间必须有
	    * 合同签订时间相同的情况，尾数递增的处理
	    * 分包商的创建时间，也要做相应调整，流程时间，引用单位引用时间 ？

		---------
		...
			update  t_pm_providerfb set code =left(t_pm_providerfb.code,3)+str(t1.theyear,4,0)+''+right(t_pm_providerfb.code,6) from (
			    select
				    k.id as providerfbid,
				    case when year(min(o.signdate)) < 2009 then 2009
				    else year(min(o.signdate))
				    end theyear,
				    year(min(k.createdate)) as createdate
				from
				    t_pm_fb_contractunderwrite o      
				left join
				    t_pm_fb_subcontractsyndic a 
					on a.id=o.pid--分包合同评审表       
				left join
				    t_pm_fb_bidpicksub b 
					on b.id=a.pid  --定标子表       
				left join
				    t_pm_fb_bidpick c 
					on c.id=b.pid  --定标表       
				left join
				    t_pm_fb_invitebid d 
					on d.id=c.pid --招标文件表       
				left join
				    t_pm_fb_subcontractplandetail e 
					on e.id=d.pid --分包计划明细表       
				left join
				    t_pm_fb_subcontractplan  l 
					on l.id=e.parentid --分包明细主表        
				left join
				    t_pm_fb_prepickproviderfb   q 
					on q.id=b.prepickid --预选分包商表    
				left join
				    t_pm_providerfb k 
					on k.id=q.providerid --分包商表     
				where isnull(o.signdate,'')<>''
				and isnull(k.id,'')<>''
				group by k.id
			    ) t1
			where t_pm_providerfb.id = t1.providerfbid
			and t1.providerfbid = '402894912f968239012f96c0c3110438'		
		...
		----------

2. 分包商 / 供应商 新报表 需求会议

3. sql 修改
	alter table t_pm_providerfb add constraint unique_code_key unique (code)

4. 需求 
	分包商 引用单位，对已有的分包商，引用到自己的部门来 - 初审也是对于这个部门所在的事业部来看的
对同一个事业部，对某一分包商只能引用一次。
	实现：
		建一个 分包商-引用部门 子表 ，对这个子表走流程，对现有分包商初审流程的，扩展。初审也按照
	事业部来区分是否合格。

	改变现有分包商流程结构，改为分包商基本信息表（废除 processid ），建立子表 ，引用分包商ID,并建立processid来
	表示这条子表记录的流程状态，还有所属的引用机构等，具体看下面子表字段。

	【系统 变更 一条数据走多次流程 多次评审 评审多次 通过子表实现】

		t_pm_providerfbsub
			id
			pid 分包商ID
			reforgid 引用机构ID 
			processid 流程ID

	-- sql 修改

		create table t_pm_providerfbsub (
			id varchar(40) not null,
			pid varchar(40) not null,
			reforgid varchar(40) not null,
			processid varchar(40) null,
			flowstatus varchar(2) null,
			employee varchar(40) null,
			createdate datetime,
			constraint pk_t_pm_providerfbsub primary key (id)
		)
		alter table t_pm_providerfbsub add constraint uq_t_pm_providerfbsub_key unique (pid,reforgid)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day268 2011年9月2日

1. day268 第4条

	同时，也方便报表数据统计

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day269 2011年9月5日

1. day268 第4条 
	
	-分析实现的方式-

	计划变更步骤：

	1）建立子表 t_pm_providerfbsub
		生成代码
			providerfbsub


	2）分包商菜单 级别修改为 分包商基本信息（公用数据，不带流程） - 新引进分包商（引用基本分包商，并走各自评审流程）
	3）将主表 t_pm_providerfb 中的流程ID，移植到子表中 ，且 reforgid（引用机构ID,事业部层）,processid联合唯一

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day270 2011年9月6日

1. 继续 多评审变更
	
	取二级单位，二级事业部：
		select id from getupOrgid('"+orgid+"') where parentid in (select id from T_HR_Org where parentid is null)

	取分包商基本list，用于新引进的选择

		将原来主表 t_pm_providerfb 的processid结合其引入机构，导入到子表中，并根据分包合同得到各机构需要引入的分包商，自动生成
	到子表中，各机构走流程。

	修改逻辑：
		要修改，可以在引用时带入并修改 ，联系人是否也各自部门分开管理 ？
		
		确认 联系人，根据各事业部独自管理。

	业务流程：
		1）在分包商基本信息中 ，录入分包商（第一次录入同时，在新引进里自动生成一条引用记录，并跳转过去，便于操作），
			系统唯一，不走流程，被引用后不能修改
		2）在新引进中，各事业部从基本信息里引用过来，然后走自己的流程，流程结果对事业部有效


2. 【菜单配置】 
	* 在menu*-config.xml配置文件配置好菜单信息
	* 然后，到policy-config.xml里配置具体权限  ^^
	* 最后，到系统权限配置页面分配权限 （角色权限配置里的菜单信息，是根据 policy-config.xml的配置来生成的）

3. 文件编码 utf-8 dom ，可以用edit plus 看到文件编码格式，并保存自定义的编码格式。

4. 分包模块  done
	提供下高级删除功能：
		如果没有被引用，则删除（同时删除流程信息），如果被引用，提示删除引用记录。

		通过高级删除，不用去先删除流程再删除记录，没有被引用就直接删除

	function delAll(id){
		if (!confirm("<s:text name='del.hint.confirm'/>")){
			return false;
		} 
		pgform.action="<%=request.getContextPath()%>/pm/Bidpicksub_dodels.action?ids="+id; 
		pgform.submit();
		getloadsubmit();
	}

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day271 2011年9月7日

1. 继续 多评审变更
	历史流程数据处理，
	合作过的数据处理

2. 日期字符串，转换为java的Date对象 
	DateFormat.getInstance().parse((String)pro.get("createdate"));

3. js操作隐藏表单对象时，可能会报如下错误 比如 对一个类型为hidden的text表单对象调用 focus()

	错误代码：
		网页错误详细信息

		用户代理: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
		时间戳: Wed, 7 Sep 2011 08:37:12 UTC


		消息: 由于该控件目前不可见、未启用或其类型不允许，因此无法将焦点移向它。
		行: 211
		字符: 5
		代码: 0
		URI: http://localhost:8080/zhhxpm/script/validator.js


4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day272 2011年9月8日

1. 供应商流程后进入黑名单 需求  done
	合格供应商 通过发起黑名单流程，流程通过后供应商进入黑名单
	
	在停用/启用基础上扩展 加入状态三 黑名单  1 停用 ；2 启用 ；3 黑名单

	对停启用表加入流程相关字段：	
		alter table t_pm_providersuspendinfo add processid varchar(40),flowstatus varchar(2)


	测试用例：兰州开创物资有限责任公司

2. eclipse jsp的错误，有时需要打开内容，才能看到报错的位置 tip

3. 调整供应商创建时间（年份），流程时间（年份） 2009年

4. 没有创建机构，分到核电

	2011-9-7 下午2:01:04	包头市第一建筑工程股份有限公司
	2011-9-7 下午2:00:50	包头市甲泰防水保温工程有限公司
	2011-9-7 下午2:00:35	陕西豪烁建筑劳务有限公司
	2011-9-7 下午2:00:22	洛阳渝奇建筑劳务有限公司
	2011-9-7 下午2:00:03	包头市九原区白音席勒办事处起升维修队
	2011-9-7 下午1:59:46	包头市慧源建筑劳务有限责任公司
	2011-9-7 下午1:59:27	绵阳市胜安建筑劳务有限公司

5. 变更 - 分包管理 内部单位签订合同 在招标文件评审里预选时，选择机构，下面的流程不变，涉及到分包商的信息，只显示
机构名称即可。 ？ 分析中...

6. 增加施工队 逻辑变更 - 原来是新建后走过流程即可增加分包队

	改为：
		基本信息建立后，至少有一条引用记录并通过流程，才能在基本信息的查看页面加施工队。


7. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day273 2011年9月9日

1. 正式系统上测试已做好的变更功能 


2. 开始分包模块报表 ，

	报表2 - （**年/**季度）分包商效果评价汇总表

3. 





+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day274 2011年9月13日

1. 新建基本分包商信息后，自动在新引进中生成引用记录，并跳转到新引进list页，可以直接发起审批流程

done
2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day275 2011年9月14日

1. 处理部分模块删除流程，并不重置业务表的流程信息 情况

	/**
	 * 根据业务表ID,删除对应的流程信息，并重置流程相关字段
	 * 比如，重发流程时用到，若有其他处理，可以扩展
	 * 注：在流程监控里删除流程，不能调用这个方法，那里面已有删除流程信息的逻辑，否则报错
	 * 
	 * 其他模块，可以参照修改，业务内容修改为所用模块的逻辑
	 */
	public void delFlowAndResetStatusByDtoId(final String id){
		new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
			@Override
			public void doInHibernate(Session session) {
				Subcontractsyndic o = (Subcontractsyndic)session.get(Subcontractsyndic.class, id);
				if(o != null && ConvertUtil.isNotEmpty(o.getProcessid())){
					//删除流程信息
					if(session.get(Flowprocess.class, o.getProcessid()) != null){// 部分模块，删除流程时，没有重置记录的流程信息，此处防止删除空对象
						new FlowprocessService().doDelProcess(session, o.getProcessid());
					}
					//更新dto的流程状态
					o.setProcessid("");
					o.setFlowstatus(null);
					session.update(o);
				}
			}
		});
	}

	-- 加上，流程是否存在，然后判断是否删除。

2. 【finereport】 动态表头 公式 参看 fb_providerachievement.cpt

	= '（'+if(len($atyear)>0,$atyear,year(now()))+'年/'+if(len($atperiod)>0,$atperiod,'一季度')+'）分包商效果评价汇总表'


3. 【finereport 】自定义分页逻辑，比如特定行后/行前分页
	选中单元格-右键单元格属性-分页 设置分页属性

4. Action中的toSendCheck方法代码完善

		if(providerfb.getProcessid()!=null&&!"".equals(providerfb.getProcessid())){
			flowprocess = new  FlowprocessService().loadFlowprocess(providerfb.getProcessid());
			//表单上选择了流程模版的时候。
			flowtemplet = new FlowtempletService().loadFlowtemplet(flowprocess.getTempletid());
		}  

	改为：

		if(providerfb.getProcessid()!=null&&!"".equals(providerfb.getProcessid())){
			flowprocess = new  FlowprocessService().loadFlowprocess(providerfb.getProcessid());
			//表单上选择了流程模版的时候。
			//-------------------------------- 空指针判断
			if(flowprocess != null){
				flowtemplet = new FlowtempletService().loadFlowtemplet(flowprocess.getTempletid());
			}
		}  


5. 分包商评价，选泽合同 ，合同竣工后3个月不能评审，竣工时间取结算里的实际竣工时间



6.  报表 分包商效果评价汇总表

【finereport】排序 ，行的排序选择主显示列，设置此列的高级属性-排序，设置排序逻辑。

7. 【finereport】充分利用其自带的函数说明来解决问题，比如一般if函数用于逻辑判断比较多，
	IF(boolean,number1/string1,number2/string2):判断函数,boolean为true时返回第二个参数,为false时返回第三个。

	boolean: 用于判断的布尔值,true或者false。
	number1/string1: 第一个参数，如果boolean为ture,返回这个值。
	number2/string2: 第二个参数，如果boolean为false,返回这个值。
	示例:
	IF(true,2,8)等于2
	IF(false,"first","second")等于second
	IF(true,"first",7)等于first

但需要对多个条件做判断时，就需要找其自带的逻辑函数 比如 switch：

	switch(表达式, 值1, 结果1, 值2, 结果2, ...)
	如果表达式的结果是值1，整个函数返回结果1
	如果表达式的结果是值2，整个函数返回结果2
	如果表达式的结果是值3，整个函数返回结果3
	等等

AND 函数：
	AND(logical1,logical2,…): 当所有参数的值为真时，返回TRUE；当任意参数的值为假时，返回FALSE。
	Logical1,logical2,…:指1到30个需要检验TRUE或FALSE的条件值。
	备注:
	    参数必须是逻辑值，或是含有逻辑值的数组或引用。
	    如果数组或引用中含有文本或空的单元格，则忽略其值。
	    如果在指定的单元格区域中没有逻辑值，AND函数将返回错误信息*NAME?。
	示例:
	AND(1+7=8,5+7=12)等于TRUE。
	AND(1+7=8,5+7=11)等于FALSE。
	如果单元格A1到A4的值分别为TRUE、TRUE、FALSE和TRUE，则:
	AND(A1:A4)等于FALSE。
	如果单元格A5的值在0~50之间，则: AND(0<A5,A5<50)等于TRUE。


	if(average(c4)<=70,'不合格',if(and(average(c4)<=75,average(c4)>70),'合格',if(and(average(c4)<=80,average(c4)>75),'★',if(and(average(c4)<=85,average(c4)>80),'★★',if(and(average(c4)<=90,average(c4)>85),'★★★',if(and(average(c4)<=95,average(c4)>90),'★★★★',if(and(average(c4)<=100,average(c4)>95),'★★★★★','')))))))


8. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day276 2011年9月15日

1. sql 多级汇总 解决办法

	多级，这种层级的划分，通过 parentid ，可以再加个level显示的表示层次

	多张报表，并到一起，层级的划分如何解决。

2, 系统流程部分，由于事务没有控制好，可能会导致下面数据的出现

	minStates		maxStates	id	pid								reforgid							processid							employee		createdate				flowstatus
	2			2			4028946a3242b613013242b893820006	4028949a3239517601323e304fa67f6f	504	4028949a32395176013241345f7c1999	00006680		2011-9-6 上午12:00:00	3

	根据流程签核的最大，最小值，此流程已经通过了，但是没有及时更新业务表的流程状态标识 flowstatus ，flowstatus = 1 才是正确的。
	此情况，比如流程签核通过处理过程中，服务器重启了，由于事务原子性被保证导致部分提交了，部分没处理 【系统 事务 流程 事务 原子性】

3. 处理day275 第5条 待评价的合同竣工日期取结算里的实际竣工日期

	

4. 找出施工队名称有误的数据

	正确：固始县建设劳务有限责任公司&王治国
	错误：固始县建设劳务有限责任公司王治国

	正确：固始县建设劳务有限责任公司  ? 待查找
	错误：固始县建设劳务有限责任公司1

	select id,name
	from t_pm_providerfb a
	where charindex('&',a.name,0) = 0
	and exists (
	    select 1 from (
		select id,left(a.name,charindex('&',a.name)-1) as name
		from t_pm_providerfb a
		where charindex('&',a.name,0)>0
	    ) t1 
	    where a.name like ''+name+'%'
	)



	结果：

		固始县建设劳务有限责任公司王治国
		江苏中核华兴劳务有限公司（徐宜宾）
		江苏中核华兴劳务有限公司-陈晓钢
		江苏中核华兴劳务有限公司梁宝军
		江苏中核华兴劳务有限公司-刘在江
		南京华川建筑劳务有限公司黄德宝
		南京华川建筑劳务有限公司刘伸清
		南京华川建筑劳务有限公司潘桂兵
		南京华川建筑劳务有限公司王勇
		南京华川建筑劳务有限公司张友文
		南京俊鑫建筑劳务有限公司(重复数据)
		四川见诚建筑劳务有限公司(重复数据)
		固始县建设劳务有限责任公司(重复数据)


	select id,name,charindex('公司',a.name,0)
	from t_pm_providerfb a
	where charindex('公司',a.name,0)>0
	and len(name)>charindex('公司',a.name,0)+1
	and charindex('&',a.name,0)=0

	劳务及专业分包的情况，重复数据处理 ？ 
		现实业务中，劳务及专业的分包商其劳务和专业是否统一管理？

		固始县建设劳务有限责任公司王治国
		江苏中核华兴劳务有限公司（徐宜宾）
		江苏中核华兴劳务有限公司-陈晓钢
		江苏中核华兴劳务有限公司梁宝军
		江苏中核华兴劳务有限公司-刘在江
		南京华川建筑劳务有限公司黄德宝
		南京华川建筑劳务有限公司刘伸清
		南京华川建筑劳务有限公司潘桂兵
		南京华川建筑劳务有限公司王勇
		南京华川建筑劳务有限公司张友文
		南京俊鑫建筑劳务有限公司(重复数据)
		四川见诚建筑劳务有限公司(重复数据)
		仪征恒达钢结构有限公司(劳务分包)
		固始县建设劳务有限责任公司(重复数据)
		江苏省苏中建设集团股份有限公司(专业分包)
		仪征恒达钢结构有限公司(专业分包)

5. 供应商管理系统 doing

“瓦房店市华鹏空调商行”这家供应商已评审通过，但在效果评价模块找不到这家供应商进行效果评价，
在设备台中这家公司供的设备有F04N51HX01683，对应的采购合同是HYHCO2009000052；
 
	此问题，由于对供应商签过合同的判断是，流程通过；但是，还有部分合同是不需要走流程，也表示已签过合同的情况
也要把这部分条件加上。（有些合同不需要审批）

6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day277 2011年9月16日

1. 判断对象是否存在，然后执行操作 语句完善 【系统 重构 接口 抽象类 父类 设计 向上转型 向下转型】

	//删除流程信息
	if(session.get(Flowprocess.class, o.getProcessid()) != null){// 部分模块，删除流程时，没有重置记录的流程信息，此处防止删除空对象
		new FlowprocessService().doDelProcess(session, o.getProcessid());
	}
改为：
	//删除流程信息
	if(o.getProcessid() != null && session.get(Flowprocess.class, o.getProcessid()) != null){// 部分模块，删除流程时，没有重置记录的流程信息，此处防止删除空对象
		new FlowprocessService().doDelProcess(session, o.getProcessid());
	}

	不论是load还是get方法都不接受null作为ID的参数。.

2. 系统 代码 重构 系统的pojo类 可以再抽象出一个抽象父类 ，比simpledate要多些基本属性，比如 包含processid ，这样，在service层类似下面的代码，
都可以抽取出来，或者抽象出一个带流程的pojo父类：

	/**
	 * 根据业务表ID,删除对应的流程信息，并重置流程相关字段
	 * 比如，删除流程，重发流程时用到，若有其他处理，可以扩展
	 * 
	 * 其他模块，可以参照修改，业务内容修改为所用模块的逻辑
	 */
	public void delFlowAndResetStatusByDtoId(final String id){
		new HibernateUtil().execute(new HibernateCallbackWithoutResult(){
			@Override
			public void doInHibernate(Session session) {
				Bidpick o = (Bidpick)session.get(Bidpick.class, id);
				if(o != null && ConvertUtil.isNotEmpty(o.getProcessid())){
					//删除流程信息
					if(o.getProcessid() != null && session.get(Flowprocess.class, o.getProcessid()) != null){// 部分模块，删除流程时，没有重置记录的流程信息，此处防止删除空对象
						new FlowprocessService().doDelProcess(session, o.getProcessid());
					}
					//更新dto的流程状态
					o.setProcessid("");
					o.setFlowstatus(null);
					session.update(o);
				}
			}
		});
	}

	目前，把simpledata作为参数来接受，并不能调用processid属性 ，必须把处理每个pojo的流程信息的逻辑放到各自的service层代码中
	导致重复代码，维护不便。

	都继承自一个带流程字段的抽象父类后，通过向上转型 ，可以把处理流程的代码公用。

	类似：

		public  Object execute(HibernateCallback action)  {    
			Session session = null;
			try {
				session = HibernateUtil.openSession();
				session.beginTransaction();
			    Object result = action.doInHibernate(session);// 实现此接口的类，都可以执行此方法
				session.getTransaction().commit();
				return result; 
			} catch (JDBCException ex) {
				if (session != null) {
					session.getTransaction().rollback();
				}
				throw new MyException(ex.getSQLException());
			}finally {
				if (session != null && session.isOpen()) {
					session.close();
				}
			}
		}	
		// 上面，是通过接口，只要是其子类，都能调用并执行

	比如sis系统的pojo类设计：

	public class AsStat extends AbstractAsStat implements java.io.Serializable {
	
	//按照各模块，pojo类继承各自的抽象类。

3. 供应商变更 供应商是否合作过条件 

	对于 设备供应商 isneedpass 字段表示不需求审批，也算合作过

	select isneedpass from t_pm_equipment_Purchase where isneedpass = 'no' or flowstatus = '1' -- 表示合作过的

4. 系统流程签核附件 这部分附件是根据签核记录关联的 refid是签核记录表的ID

	select top 10 * from t_sys_doc o
	where exists (select 1 from T_OA_FLOWACTIVITIES where id = o.refid)

	系统附件删除 系统签核上传的附件，在删除流程时同时删除：

	private void delFlowactivities(Session session, String processid) {
		List flows = flowprocessDao.getFlowactivitiesByprocessid(processid);
		for (int j = 0; j < flows.size(); j++) {
			Flowactivities flowactivities = (Flowactivities) flows.get(j);
			
			//删除签核附件 by cs
			FileManager.delUploadFile(flowactivities.getId(), null); // -------- 系统此处不加删除附件逻辑 为何？
			
			flowactivitiesDao.delEntry(session, flowactivities.getId(),
					Flowactivities.class);
			
		}
	}

5. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day278 2011年9月19日

1.  测试

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day279 2011年9月19日

1. 分包 内部分包业务变更 day272 第5条

	招标文件评审分包商可以选择内部机构，相关历史数据处理
	步骤：
		- 分包商弹出框，多设置一个页签用于选择机构树 _getorg3.jsp   getproviderfb.jsp
		- 

2. 删除的方法提供流程删除 空处理。

	-------
	...
		if(p != null){
			if(ConvertUtil.isNotEmpty(p.getProcessid()) && session.load(Flowprocess.class, p.getProcessid()) != null){
				service.doDelProcess(session, p.getProcessid());//删除流程信息
			}
			session.delete(o);
		}
	...
	--------

3. 分包商 基本信息查看页面 流程迁移 ，现有逻辑无流程，不显示流程信息 doing

	2个查看页面，一个有流程在新引进里查看，一个无流程其他地方查看。

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day280 2011年9月20日

1. 供应商数据清除 没引用，没流程的数据

	条件：供应商管理中物资（招标、合同），设备采购信息中没引用到的、且创建者为系统管理员，且没有流程 的供应商数据清理掉。
	
	sql语句：
	
		/* 
		 条件：供应商管理中物资（招标、合同），设备采购信息中没引用到的、且创建者为系统管理员，且没有流程 的供应商数据清理掉。

		 t_pm_equipment_purchase -- 设备 supplyerid
		 t_pm_Materialcontract -- 材料合同 secondparty
		 T_RM_BIDDINGSTOCK -- 材料招标 bidcompany
		  
		*/
		-- 
		select p.* from t_pm_providerinfo p
		left join T_HR_Employee emp on emp.id = p.employee
		left join T_OA_FLOWPROCESS flow on flow.id = p.processid
		where 1=1
		and type = '2'
		and (emp.name like '%管理员%' or isnull(p.employee,'') = '')
		and flow.id is null
		and not exists(
		    select 1 from (
			select supplyerid as id from t_pm_equipment_purchase equ where isnull(supplyerid,'') <> ''
			union
			select secondparty from t_pm_Materialcontract material where isnull(secondparty,'') <> ''
			union
			select bidcompany from T_RM_BIDDINGSTOCK where isnull(bidcompany,'') <> ''
		    ) t1 where t1.id = p.id
		)
		-- 清除243条数据 ，把此sql作为list方法的sql语句，即可在页面执行删除，同时删除附件等信息

如下：
	-------
	...
		/**
		 * 基本列表查询 - 显示全部
		 * @param where
		 * @param pageindex
		 * @param pagesize
		 * @param type
		 * @param star (5,4,3,2,1)星 ；6 合格 7 不合格 8 黑名单
		 * @return
		 */
		public Page getProviderinfoList(String where, int pageindex, int pagesize,int type) {
			/*
		StringBuffer sql = new StringBuffer("select o.id,o.code,o.name,o.artificalperson,o.lxifevaluate,o.supplytypeflag,o.contactmanone,o.phoneone,o.mobilephoneone,o.star,o.flowstatus,o.providerstatus,c.name as cityname,a.name as qyformname,b.minStates,b.maxStates,cast(stuff((select ','+name from t_sys_dictvalue where  charindex(id,o.supplytype,0)>0 FOR XML PATH('')),1,1,'') as varchar(8000)) as supplytypename from t_pm_providerinfo o ");
		sql.append(" left join t_sys_dictvalue a on o.qyform = a.id ");   
		sql.append(" left join t_sys_dictvalue c on o.city = c.id ");
		sql.append(" left join ( select min(isnull(states,0)) as minStates,max(isnull(states,0)) as maxStates ,processid from t_oa_flowactivities group by processid) b on o.processid = b.processid ");
		sql.append(" where o.type='"+type+"' ");
		
		if(type == 2){
			//sql.append(" and not exists( select 1 from t_oa_flowactivities where o.processid = processid group by processid having  (min(isnull(states,0)) = '2' and max(isnull(states,0)) = '2') ) ");//去掉合格
			//sql.append(" and ( b.maxStates <> 3 or b.maxStates is null )");//去掉流程审批不合格
			//sql.append(" and (o.star <> 7 or o.star is null) ");//去掉评价不合格
			sql.append(" and (o.star <> 8 or o.star is null) ");//去掉黑名单数据
			//sql.append(" and o.providerstatus <> 4 ");//去掉停用的
		}
		
		sql.append(where);
		sql.append(" order by o.flowstatus,o.code desc ");
		*/
			String sql = 
			"select p.* from t_pm_providerinfo p "+
			"left join T_HR_Employee emp on emp.id = p.employee "+
			"left join T_OA_FLOWPROCESS flow on flow.id = p.processid "+
			"where 1=1 "+
			"and type = '2' "+
			"and (emp.name like '%管理员%' or isnull(p.employee,'') = '') "+
			"and flow.id is null "+
			"and not exists( "+
			"    select 1 from ( "+
			"        select supplyerid as id from t_pm_equipment_purchase equ where isnull(supplyerid,'') <> '' "+
			"        union "+
			"        select secondparty from t_pm_Materialcontract material where isnull(secondparty,'') <> '' "+
			"        union "+
			"        select bidcompany from T_RM_BIDDINGSTOCK where isnull(bidcompany,'') <> '' "+
			"    ) t1 where t1.id = p.id "+
			") ";
			return HibernateUtil.getSQL2MapPage(sql.toString(), pageindex, pagesize);
		}
	...
	-------

2. 效果评价结果没有保存到状态表中 ？原因
	
	ZY-2011-00828

由于下面的变更，suspend 不允许空，但之前逻辑没有保存suspend，故报错 ，导致状态没有保存进去
	-- suspend 1-启用；2-停用
	alter table t_pm_fb_providerfbstatus add suspend varchar(1) not null default '1'

	-------
	...
		/**
		 * 保存部门对此分包商的评价星级状态
		 */
		public void saveProviderfbStatusWithOrgid(Session session,String providerfbid,String orgid,String star,BigDecimal latestscore){
			Providerfbstatus ps = providergradeDao.loadEntryOfProviderfbstatusByOrgId(session,providerfbid, orgid);
			if(ps != null){//update
				ps.setAvgstar(star);
				ps.setAvgscore(latestscore);
				providergradeDao.updateEntry(session, ps);
			}else{//insert 这里需要把 suspend 字段赋值，或者改为可以为 null
				Providerfbstatus o = new Providerfbstatus();
				o.setProviderid(providerfbid);
				o.setOrgid(orgid);
				o.setAvgscore(latestscore);
				o.setAvgstar(star);
				o.setLastdate(new Timestamp(new Date().getTime()));
				providergradeDao.addEntry(session, o);
			}
		}
	...
	-------

	解决： - 修改上面的方法，默认 suspend = 1 即可  o.setSuspend("1");//默认启用状态 - 后续的变更添加字段
		     - 同时 把 suspend设置为可以为空 ，程序上保证不为空
				sql修改
				alter table t_pm_fb_providerfbstatus alter column suspend varchar(1)  null
		
	处理此bug导致的错误数据：
		
			【not null 字段 对于不为空字段插入数据时要保证不为空，否则导致整条数据都不能插入 插入失败 】

	查询语句：
		-- 找到 评价通过了，但状态没更新到 状态表 t_pm_fb_providerfbstatus 中的数据，并处理(action里有更新状态的代码 providergradeservice)
		select * from t_pm_providerfb fb 
		where fb.id in (
		    select grade.providerid
		    from t_pm_fb_providergrade grade
		    where 1=1
		    and grade.flowstatus = '1'
		    and not exists (
		    select 1 from t_pm_fb_providerfbstatus where providerid = grade.providerid
		    )
		    group by grade.providerid
		)
	
	测试 
	
	done

3. 分包商名称类似的情况，整理出一个列表 类似这样 待？

	扬州杰瑞门窗有限公司
	扬州杰瑞门窗有限公司1、


4. 
2011-06-30
FBNO20110117

5.  分包商 专业改劳务 
	ZY-2010-00456 南京欧宝建材有限公司  

	此修改，放开可编辑属性即可在input页修改，但是并发时可能会有问题，故现在编码没放开修改功能。

6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day281 2011年9月21日

1. 分包商业绩报表调整


2. 分包变更 招标文件评审处 ，可以选择内部机构 具体需求见 11-9-21 的doc

	- 在预选分包商表，增加字段 issuborg - 是否为内部机构 1 是内部机构（单位）；2 非内部机构（分包商）

	sql修改
		-- 1 内部单位；2 非内部单位/分包商
		alter table t_pm_fb_prepickproviderfb add issuborg varchar(1)

	
3. 报表 分包计划执行状态
	工程编码： GNSX-001/2011
	分包内容： 主体劳务

	定标通知书时间为空？

	陕西鑫宇劳务工程有限公司 主体劳务 
	陕西金盛建筑劳务技术有限公司 主体劳务 

	汇总逻辑问题：
		修改报表

	另外：
		list页的进度状态也是同样的逻辑，也需要修改。

	比如这个现实不正确：

		工程编码： GNSH-024/2010
			计划 - 分包内容： 土方工程 

			定标 - 分包内容：
				尚锦城C1-a期车库土方短驳回填工程
				无锡市尚锦城住宅开发项目C1-a地块土方开挖及回填工程

	通过在状态字段前加数字以区分状态的先后，然后取最晚的状态为汇总状态即可。

	例：
		-------
		...
			public Page getBidpickList(String where, int pageindex, int pagesize) {
			StringBuilder sql = new StringBuilder("select o.*,g.name as orgname,f.name as bidorgname,b.code,b.prjname,e.content,e.presubmoney,e.type,e.mode,e.preenterdate,c.minStates,c.maxStates,h.detailnum,case when t2.station is not null then t2.station when isnull(o.flowstatus,'') <> '1' then '标书已发放' when o.flowstatus = '1' then '已定标' end station ");
			sql.append(" from t_pm_fb_bidpick o ");
			sql.append(" left join t_pm_fb_invitebid a on a.id = o.pid ");
			sql.append(" left join t_pm_fb_subcontractplandetail e on e.id = a.pid ");
			sql.append(" left join t_sys_dictvalue i on i.id = e.valuationtype ");
			sql.append(" left join t_pm_fb_subcontractplan d on d.id = e.parentid ");
			sql.append(" left join t_pm_contract b on b.id = d.prjid ");
			sql.append(" left join t_pm_project project on project.contractid = b.id and isnull(b.parentid,'') = '' and isnull(project.parentid,'') = '' ");//关联此表，用于快捷工程查询
			sql.append(" left join t_hr_org f on f.id = e.bidorgid ");
			sql.append(" left join t_hr_org g on g.id = d.orgid ");
			sql.append(" left join ( select min(isnull(states,0)) as minStates,max(isnull(states,0)) as maxStates,processid from t_oa_flowactivities group by processid ) c on o.processid = c.processid ");
			sql.append(" left join ( select count(id) as detailnum,pid from t_pm_fb_bidpicksub group by pid ) h on h.pid = o.id ");
			
			//进度状态查询
			sql.append(" left join ( ");
			sql.append(" 	select picksub.pid as pickid,substring(min(t1.station),2,len(min(t1.station))) as station ");
			sql.append(" 	from t_pm_fb_bidpicksub picksub ");
			sql.append(" 	left join ( ");
			sql.append(" 		select  syn.id,syn.pid,case when conclose.id is not null then '8已结算' when conwrite.id is not null then '7已签合同' else '6已合同评审' end station ");
			sql.append(" 		from t_pm_fb_subcontractsyndic syn ");
			sql.append(" 		left join t_pm_fb_contractunderwrite conwrite on conwrite.pid = syn.id and conwrite.flowstatus = '1' ");
			sql.append(" 		left join t_pm_fb_subcontractclosing conclose on (conclose.signtype = '1' or conclose.isclosed = '1') and conclose.pid = conwrite.id ");
			sql.append(" 		where syn.flowstatus = '1' ");
			sql.append(" 	) t1 on t1.pid = picksub.id ");
			sql.append("	group by picksub.pid ");//-- 计划明细根据计划分组
			sql.append("	) t2 on t2.pickid = o.id ");//-- 计划对应的所有明细的station都同步 
			sql.append("  ");
			
			sql.append(" where 1=1 ");
			sql.append(where);
			sql.append(" order by o.createdate desc ");
				return HibernateUtil.getSQL2MapPage(sql.toString(), pageindex, pagesize);

			}
		...
		-------
		
		注意：上面的 station 的设置值的用意。

4. 【jquery 处理js代码】参考 html版文档及chm格式文档

	例：invitebidinput.jsp
		------
		...
			//修改分包单位类似，内部分包还是分包商分包 1 内部分包；2 分包商分包
			function changesubtype(obj,fieldname){
				var type = $(obj).val();
				var imgObj = $(obj).parent().parent().find("img");
				resetValues($(obj).parent().parent());
				$(imgObj).unbind();
				if(type == 1){
					$(obj).parent().parent().find("input text").attr("readonly","readonly");
					$(imgObj).bind("click",function (){getOrg(fieldname+'.providerid',fieldname+'.providername');});
				}else{
					$(imgObj).bind("click",function (){getproviderfb(fieldname);});
				}
			}
			//切换 是否内部单位 时重置所在行所有字段
			function resetValues(trObject){
				$(trObject).find("input text").val("");
			}
		...
		------
	
	注：bind执行可以绑定多个方法到一个事件中。

5. 
	


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day282 2011年9月22日

1. 招标评审 选择机构 需求 继续

	sql.append("  left join t_hr_org org on q.issuborg = '1' and org.id = q.providerid ");//内部单位

	case when q.issuborg = '1' then org.name else k.name end subname

	if(ConvertUtil.isNotEmpty(b.getPrepickid())){
		SimpleData o = new ProviderfbService().getProviderfbByPrepickid(b.getPrepickid());
		if(o != null){
			b.setProvidername(o instanceof Providerfb?((Providerfb)o).getName():((Org)o).getName());
		}
		
	}

	查询问题 ，此时需要在2张表中查询 分包商 ，机构表 ，可以提供类型选择，用户确定类型。

	到分包付款  ，另外查询处理。

	高级查询提供 2种类型的查询（在配置文件里配置即可），手动输入条件 where条件分别接收 分包商和内部机构查询。


	

2. 问题 标评审 选择分包商 在发起流程页面 分包商联系方式没有带过去 ？

3. 取消js的默认方法 不方便的话，就都用bind来绑定 default action jquery

	参考：招标评审input页 invitebidinput.jsp

	-------
	...
		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
		<html>
		 <head>
		  <title> test jquery </title>
		  <Script language="Javascript" src="jquery-1.6.2.min.js"></Script>
		 </head>
		 <body>

		  <!-- 如果元素里有了 onclik 方法的定义，jquery貌似不好取消这个方法的执行，都是先执行此处定义的方法 -->
		  <p onclick="alert(2);">this is for test</p> 

		 </body>
		  <Script language="Javascript">

			$(document).ready( function (){
					$("p").bind("click",function (){
						alert($(this).text());
						return false;
					});
					$("p").bind('click',function(event){    
						alert(event);
						//event.preventDefault();//取消默认的click行为       
					});
				} );
			
			$(document).ready( function (){
					$("p").bind("click", function(event) { 
						event.preventDefault(); 
					});
			} );


		  </script>
		</html>
	...
	-------


	动态绑定方法，对于动态操作元素再动态绑定方法的需求，可以通过调用初始化绑定方法实现。


4. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day283 2011年9月23日

1. 继续 day282 
	从结算开始


	处理分类型查询 分包商/内部机构 功能
	流程，查看页面相应处理
	
	
	下一步，处理历史数据。将分包商中应该是内部机构的数据，整合到现在的逻辑字段中。？

		数据处理，处理到定标明细即可，后面都是引用定标明细得到分包商/机构；对于合同签订由于保存了
	分包商ID，此处需要单独处理。

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day284 2011年9月26日

1. 处理day283第1条的历史数据

	暂时移交。

2. 分包管理 调整



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day285 2011年9月27日

1. 分包，供应商调整 根据doc

	其中
		在供应商查看页面提供 评价记录的查看链接，类似分包商的查看页面，可以方便看到评价情况。

		...


2.  分包模块根据文档修改部分创建时间

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day286 2011年9月28日

1. 时间调整


2. 清单整理 根据doc
	提供不合理的数据，人工修改流程等信息。




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day287 2011年9月29日

1. 预警增加的开发
	doing



2. 分包商内部机构查询加入代码

	private String suborgname;

	public String getSuborgname() {
		return suborgname;
	}

	public void setSuborgname(String suborgname) {
		this.suborgname = suborgname;
	}

	if (ConvertUtil.isNotEmpty(suborgname))
	{
	  list.add(new Query(QConstant.T_TXT,"org.name",QConstant.OP_LIKE,suborgname));
	} 

	内部机构:<s:textfield name="suborgname" cssStyle="width: 5em;"/>
				<s:hidden name="temporgid"/>
				<img class="table_input_img"  src="<eb:img file='img_lookup.gif'/>" width="15" height="15" style="cursor:hand"  
				   onClick="getOrgWorker3('temporgid','suborgname') ">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

	GNJS-001/2011

3. ZY-2010-00042 评价数据  并发 问题  
	由于同一个账号登陆2次，并且都同时打开了某条待审批流程（打分）进行打分审批，导致并发数据错误。

	？解决并发，解决此问题。

	

4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day288 2011年9月30日

1. 

select * from t_pm_risk_sysset

select * from T_pm_riskinfo

insert into t_pm_risk_sysset values('12','2',12,'',0,'','','','','','','','')


-- 累计付款金额+本次净支付金额>合同金额+合同变更金额
select isnull(pay.factmoney+alt.altmoney,0) as conmoney,isnull((select sum(factmoney) as histotalpay from t_pm_fb_subcontractpayment where flowstatus = '1' and proposerdate < pay.proposerdate group by pid having pid = pay.pid),0)+pay.factmoney as paidmoney
from t_pm_fb_subcontractpayment pay
left join t_pm_fb_contractunderwrite con on con.id = pay.pid
left join ( select pid,sum(isnull(changemoney,0)) as altmoney from t_pm_fb_subcontractalter where flowstatus = '1' group by pid ) alt on alt.pid = con.id
left join t_pm_fb_subcontractsyndic syn on syn.id = con.pid
left join t_pm_fb_bidpicksub picksub on picksub.id = syn.pid
left join t_pm_fb_bidpick pick on pick.id = picksub.pid
left join t_pm_fb_invitebid invite on invite.id = pick.pid
left join t_pm_fb_subcontractplandetail detail on detail.id = invite.pid
left join T_Sys_Dictvalue dict on dict.id = detail.valuationtype
where pay.flowstatus = '1'
and dict.name like '%固定总价%'

select factmoney from t_pm_fb_subcontractpayment where factmoney < 0


2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day289 2011年10月8日

1. 回公司

	整理开发环境

2. cmd 命令行 执行 java  批处理命令
java -classpath

.;%JAVA_HOME%\lib;E:\tomcat-6_wyjs\webapps\wyjs\WEB-INF\classes;E:\tomcat-6_wyjs\webapps\wyjs\WEB-INF\lib;

--
@echo off 

SetLocal EnableDelayedExpansion    
FOR %%i IN ("E:\tomcat-6_wyjs\webapps\wyjs\WEB-INF\lib\*.jar") DO SET CLASSPATH=!CLASSPATH!;%%~fsi    
echo %CLASSPATH%    
e:
cd E:\tomcat-6_wyjs\webapps\wyjs\WEB-INF\classes
java com.erp.hr.employee.action.EmployeeAction
EndLocal
--


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day290 2011年10月10日

1. session 监听

sessionlistener

	--------
	...
		package com.frame.util;

		import java.util.Enumeration;

		import javax.servlet.http.HttpSessionEvent;
		import javax.servlet.http.HttpSessionListener;

		public class SessionListener implements HttpSessionListener {


			public void sessionCreated(HttpSessionEvent arg0) {
				
			}

			/* session 失效时 */
			public void sessionDestroyed(HttpSessionEvent arg0) {
				if(arg0 != null){
					Enumeration enumeration = arg0.getSession().getAttributeNames();
					String key = null;
					while(enumeration.hasMoreElements()){
						key = (String)enumeration.nextElement();
						arg0.getSession().removeAttribute(key);
					}
				}

			}

		}
	...
	--------
	
	然后在context上下文配置文件中（web.xml）配置这个listener即可，session有动作时，会执行这个监听器类的相应方法。

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day291 2011年10月11日

1. 

public static void main(String[] args) {
		System.out.println(2.0-1.9);
		System.out.println(new BigDecimal("2.0").subtract(new BigDecimal("1.9")));
	}

结果：
	0.10000000000000009
	0.1

2. OAuth认证 比如qq的 
	OAUTH协议为用户资源的授权提供了一个安全的、开放而又简易的标准。与以往的授权方式不同之处是OAUTH的授权不会使第三方触及到用户的帐号信息（如用户名与密码），即第三方无需使用用户的用户名与密码就可以申请获得该用户资源的授权，因此OAUTH是安全的。

	查了oauth，已经是一个RFC标准，具体标准内容可以看这里：http://www.rfc-editor.org/rfc/rfc5849.txt

	RFC 包含了关于Internet的几乎所有重要的文字资料。如果你想成为网络方面的专家，那么RFC无疑是最重要也是最经常需要用到的资料之一，所以RFC享有网络知识圣经之美誉
3. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day292 2011年10月13日

1. 
	基本点

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day293 2011年10月13日

1. 正则表达式 review

	

2. 自增，自减运算优先级

	int n = 3;
	while (n-- != 0) {//先比较，再减1, 然后执行{}块中的代码
		System.out.println("n = "+n);
	}

	result:
	2
	1
	0

	java标准库中String对象的equals方法里：

		while (n-- != 0) {
		    if (v1[i++] != v2[j++])
			return false;
		}
		
	再：
		int m=3*a++;  //先把3*a的值赋给m，然后a才自加1，所以m的值就是15，a的值就是6
		int n=3*++b;  //b先自加1，然后和3相乘再赋给n，所以n的值是18，b的值是6

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day294 2011年10月14日

1. 线程并发测试
	对公共的变量，通过多线程交叉修改，测试线程安全。


2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day295 2011年10月17日

1. cxf 测试
	use myeclipse6.5 javaee 5.0 spring2.5 cxf
	* new project (web project)
	* add spring capabilities (import jars and config web.xml file) / do test
	* add cxf jars
	* 

2. swing about

3. 系统hibernate事务控制



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day296 2011年10月18日

1. aegis

What is Aegis?

	Apache CXF Web service framework provides the support of various databinding tools and one of them is Aegis. Aegis is a 
databinding API that performs mapping between Java objects and XML document. The CXF framework was derived from the 
XFire project where Aegis laid its foundation. XFire is now called as CXF. Aegis allows the developers to perform databinding 
with or without the use of annotations and through the use of external mapping file. The external mapping file enables developers 
to customize the data mapping and thereby gaining more control over the way mapping can be derived. The external mapping file
configuration gives developer lot of flexibility as well in terms of data binding needs. In Web service parlance, data is called messages
that are part of method parameters or return types. The mapping file allows you to customize bean and method names as well as
method parameters and return types. Aegis can also be used in a standalone application outside of CXF environment. 

java对象与xml的绑定。


2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day297 2011年10月19日

1. 
	oracle 服务器，在实验时占用过多本机内存，导致卡，可以关闭某些服务来调节。

2. myeclipse 从ant配置文件，maven配置文件导入项目 【IDE ANT MAVEN 项目导入】

比如 cxf的例子，myeclipse可以从例子的ant，maven配置文件里导入项目。

3. zhhx

供应商评价进入不合格 ，再进入合格逻辑 检查

测试用例：



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day 298 2011年10月20日

1. 
hx小问题

2. JTable的使用

从java tutorials 里根据例子使用这个组件。

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day299 2011年10月21日

1. 
整合 详见项目说明文档。

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day300 2011年10月24日

1. ibatis 配置debug打印数据库访问状态及sql语句 打印sql ibatis debug 【ibatis】

只需要在日志框架log4j中配置如下配置即可

	# ibatis print sql 
	log4j.appender.stdout=org.apache.log4j.ConsoleAppender
	log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
	log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n
	log4j.logger.com.ibatis=debug
	log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
	log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
	log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
	log4j.logger.java.sql.Connection=debug
	log4j.logger.java.sql.Statement=debug
	log4j.logger.java.sql.PreparedStatement=debug,stdout

	ibatis集成了log4j功能，故配置下即可输出日志。其他项目要输出日志只要在类里定义下日志类，类似下面即可：
		Log log = LogFactory.getLog(UserAction.class);

	这里，涉及到log4j的实现问题，基于java的日志规范

2.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day301 2011年10月25日

1.  check out 中厦项目
	并导入，配置编译参数，注意导入正确的文件夹(文件夹层次) ，否则IDE可能不能识别项目类型,。


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day302 2011年10月26日

1. 需求 中厦-工程档案-导入功能

	提供模板 ，在list页提供导入功能。
	工程名称不能为空，空则跳过，结束后提示

	必填字段：
		文件标题 + 档案柜 + 档案室 + 工程名称

	
	系统导入excel共用的文件输入页面： 【excel 导入 excel】
		webapp/common/util/importexcel.jsp
			跳过把表单提交地址传递给页面，从而实现共用：
				var url = "${requestScope.url}";
				f1.action="<%=request.getContextPath()%>"+url;
			
			此页面即可，将上传的文件提交的指定的action去处理。
		处理结束后到：common/util/importexcelmsg.jsp 页 ，显示导入结果状态。

	目标表： t_oa_projectarchive
	字段如下：
	id	
	code 全宗号	- 自动生成
	title 文件标题:	
	archivenumber 档号	
	sortednumber 分类号	
	itemnumber 案卷号	
	docbaseid 所在档案室	
	cabinetid 所在档案柜	
	responsableman 责任者	
	reservedlimit 保管期限:	
	archivedate 归档时间	
	registerid 登记人ID	
	registername 登记人姓名	
	archivetypeid 档案类别	
	secretlevel 密级
	serialnum 卷内顺序号:	
	filecode 文件编号	
	orgid	 档案所属单位
	remark 备注	
	createdate	 创建日期
	lastdate 最后修改日期	
	pagecount	 页数
	projectid 工程ID	
	prjname 工程名称


	test：

		星源水岸香堤7#、8#、9#楼，2#地下室工程-土建-01 

		荣盛紫提东郡项目工程标段三-土建-01

	提供模板下载链接 ，参考档案部分的 ，模板放到template文件夹，然后list页的模板下载按钮调用js方法，调用servlet来处理模板下载。

	done



2. 弹出框 ，刷新父窗口，刷新主窗口

window.open(...)

	function doClose(){
		window.opener.location.href = "<%=request.getContextPath()%>/pm/Projectarchive_list.action";
		//window.opener.location.reload();// 或者这个方法，此方法要注意防止重复提交
		window.close();
	}


3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day303 2011年10月27日

1. 异常处理 ，抛出异常 ，处理异常，捕获异常
	
	原则： 
		“谁抛出的谁处理，自己处理不了或者不改处理的就继续抛”

			比如，service负责逻辑处理，dao层负责数据存取，dao层的存取异常就应该直接抛出，dao的责任就是
		根据条件存取内容，当出现问题时，它就不能返回service想要的内容，自己处理不了，就抛出交给service
		来捕获处理即可。

	何时该判断并抛出异常，何时该捕获并处理异常

	一个执行顺序里，有的方法需要处理异常，有的不需要处理异常（如果有，可以抛出，自己不去处理）。
	哪些异常需要捕获并处理，哪些异常可以不处理，直接抛出？

	检测异常，非检测异常 （继承RuntimeException,ERROR的异常都为非检测异常）

	关于异常类型参考：

			java产生异常的情况有很多种，比如说你想把一个字符串型“123”转成int型123，ok，这样没有问题。代码如下：
			String a = "123";
			int b = Integer.parseInt(a);
			但是如果你尝试如下写法
			String a = "abc";
			int b = Integer.parseInt(a);
			编译器是不会给你提示任何错误，只有等程序真正运行到此处的时候，才会发生异常，以为parseInt无法将字符串"abc"转成int型。
			我举得例子只是异常中的一种
			另外，Java 异常的种类有三大类，可分为可检测异常，非检测异常和自定义异常。
			可检测异常
			可检测异常经编译器验证，对于声明抛出异常的任何方法，编译器将强制执行处理或声明规则，例如：sqlExecption 这个异常就是一个检测异常。你连接 JDBC 时，不捕捉这个异常，编译器就通不过，不允许编译。
			非检测异常
			非检测异常不遵循处理或声明规则。在产生此类异常时，不一定非要采取任何适当操作，编译器不会检查是否已解决了这样一个异常。例如：一个数组为 3 个长度，当你使用下标为3时，就会产生数组下标越界异常。这个异常 JVM 不会进行检测，要靠程序员来判断。有两个主要类定义非检测异常：RuntimeException 和 Error。
			Error 子类属于非检测异常，因为无法预知它们的产生时间。若 Java 应用程序内存不足，则随时可能出现 OutOfMemoryError；起因一般不是应用程序的特殊调用，而是 JVM 自身的问题。另外，Error 一般表示应用程序无法解决的严重问题。
			RuntimeException 类也属于非检测异常，因为普通 JVM 操作引发的运行时异常随时可能发生，此类异常一般是由特定操作引发。但这些操作在 Java 应用程序中会频繁出现。因此，它们不受编译器检查与处理或声明规则的限制。
			自定义异常
			自定义异常是为了表示应用程序的一些错误类型，为代码可能发生的一个或多个问题提供新含义。可以显示代码多个位置之间的错误的相似性，也可以区分代码运行时可能出现的相似问题的一个或者多个错误，或给出应用程序中一组错误的特定含义。例如，对队列进行操作时，有可能出现两种情况：空队列时试图删除一个元素；满队列时试图添加一个元素。则需要自定义两个异常来处理这两种情况。

	

	可以参考，jkd源码：
		比如 Integer类的parseInt方法，还有其他类等是如何处理的 ？

		parseInt方法在转换出错时，会抛出 NumberFormatException ，从这里也可以学习系统异常类的设计。【异常设计，异常捕获，异常处理，异常机制，设计异常】
		

		Integer.java
		---------
		...
			public static int parseInt(String s) throws NumberFormatException {//抛出异常 -- 自己处理不了，它只返回int值，所以上抛
				return parseInt(s,10);
			}
		...
			public static int parseInt(String s, int radix)
					throws NumberFormatException
			    {
				if (s == null) {
				    throw new NumberFormatException("null");
				}

				if (radix < Character.MIN_RADIX) {
				    throw new NumberFormatException("radix " + radix +
								    " less than Character.MIN_RADIX");
				}

				if (radix > Character.MAX_RADIX) {
				    throw new NumberFormatException("radix " + radix +
								    " greater than Character.MAX_RADIX");
				}

				int result = 0;
				boolean negative = false;
				int i = 0, max = s.length();
				int limit;
				int multmin;
				int digit;

				if (max > 0) {
				    if (s.charAt(0) == '-') {
					negative = true;
					limit = Integer.MIN_VALUE;
					i++;
				    } else {
					limit = -Integer.MAX_VALUE;
				    }
				    multmin = limit / radix;
				    if (i < max) {
					digit = Character.digit(s.charAt(i++),radix);
					if (digit < 0) {
					    throw NumberFormatException.forInputString(s);
					} else {
					    result = -digit;
					}
				    }
				    while (i < max) {
					// Accumulating negatively avoids surprises near MAX_VALUE
					digit = Character.digit(s.charAt(i++),radix);
					if (digit < 0) {
					    throw NumberFormatException.forInputString(s);
					}
					if (result < multmin) {
					    throw NumberFormatException.forInputString(s);
					}
					result *= radix;
					if (result < limit + digit) {
					    throw NumberFormatException.forInputString(s);
					}
					result -= digit;
				    }
				} else {
				    throw NumberFormatException.forInputString(s);
				}
				if (negative) {
				    if (i > 1) {
					return result;
				    } else {	/* Only got "-" */
					throw NumberFormatException.forInputString(s);
				    }
				} else {
				    return -result;
				}
			    }
		..
		---------

		---------
		...
			public synchronized boolean equals(Object o) {
				if (o == this)
				    return true;

				if (!(o instanceof Map))
				    return false;
				Map<K,V> t = (Map<K,V>) o;
				if (t.size() != size())
				    return false;

				try {
				    Iterator<Map.Entry<K,V>> i = entrySet().iterator();
				    while (i.hasNext()) {
					Map.Entry<K,V> e = i.next();
					K key = e.getKey();
					V value = e.getValue();
					if (value == null) {
					    if (!(t.get(key)==null && t.containsKey(key)))
						return false;
					} else {
					    if (!value.equals(t.get(key)))
						return false;
					}
				    }
				} catch (ClassCastException unused)   {
				    return false;
				} catch (NullPointerException unused) {
				    return false;
				}

				return true;
			    }
		...
		----------
			上面这个方法，调用者只关心是否相等不需要知道内部处理的情况，故比较过程中出现的异常内部处理掉即可。
		另一方面，类型转换失败时，调用者却需要类型转换成功后的对象，此时类型转换逻辑对转换过程中报德异常自己就处理不了
		，所以选择抛出，告诉调用者类型不一致。

		各种工具类，库异常如何控制，还可以参考apache的各种框架，库的代码。所谓站的高看的远。
	
		

2. 数据库连接池 

	DBCP 简介及配置 ,项目主页上有例子代码。 参考：http://commons.apache.org/dbcp/

		TOMCAT中JNDI数据源配置，可见TOMCAT自带的文档。在TOMCAT的server.xml里配置后，再到项目描述文件web.xml
	里配置数据源，然后在代码里引用即可：
		
		import javax.naming.Context;
		import javax.naming.InitialContext;
		import java.sql.DataSource;

		try{
			Context context = new InitialContext();
			DataSource ds = (DataSource)context.lookup("java:/comp/env/fileManager");
			con = ds.getConnection();
		}catch(Exception e){
			e.printStackTrace();
		}



3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day304 2011年10月28日

1. wap ，现有java项目加入wap实现，需要做的事

	对于现有的基于j2ee的系统，分为MVC各层，视图层v需要另外开发（wml，wmscript）,另外需要一个wap网关，来接受请求发送
数据。

	* 业务层，扩展性写的好基本不用动


2. 继续配置APACHE的 DBCP ：

	spring装配basicdatasource对象时，报：
		org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/classes/bean.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: org/apache/commons/pool/KeyedObjectPoolFactory
	
	提示找不到类，然后上了dbcp的项目主页看到说明：
		The commons-dbcp package relies on code in the commons-pool package to provide the underlying object pool mechanisms that it utilizes.

	所以，需要下载dbcp的依赖 common-pool 包。

		在dbcp的jar包的manifest.mf编译信息文件里，有其依赖类，包的版本，这些信息可以在编译时定制 java 编译信息，方便
	找到支持版本。这是个细节，方便为软件的持续维护更新使用。
	
		version="1.4",org.apache.commons.pool,org.a
		 pache.commons.pool.impl,org.xml.sax,org.xml.sax.helpers

	从上，需要下载 1.4 版本的 common-pool jar包

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day305 2011年10月31日

1. tomcat配置jndi数据源 相对项目配置

	可以在项目目录下的META-INFO下建立server.xml文件，在这里定义服务器配置，不需要到 tomcat 全局配置里配置。

	server.xml的说明配置等等，可以参考tomcat的文档，tomcat的实现可以参考j2ee容器实现参考。

		For Tomcat 6, these entries in per-web-application InitialContext are configured in the <Context> elements that can be specified in 
	either $CATALINA_BASE/conf/server.xml or, preferably, the per-web-application context XML file ( META-INF/context.xml). 

2.  java变量类型 volatile 与 transient 
	
	详见 resource

3. 五洋系统 进度问题处理

	实际进度从计划进度带过来后修改，第一次增加可以带过来，后续修改没有带过来 ？


4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day306 2011年11月1日

1. hibernate自带连接池会给出这个提示

	13:17:16,500  INFO DriverManagerConnectionProvider:41 - Using Hibernate built-in connection pool (not for production use!)


2. wyjs 

	进度 

	ProcesslenfactAction.java

	input方法既是查看也是修改，这个方法里有多个result。

	ProcesslenfactDao.java的 2个重载方法：getLenfactDetailsByFactId


		先将期间计划进度创建后，再到实际进度里创建这个期间的实际进度，选择这个进度时会将计划的进度信息自动带
	过来，前提是这个期间的进度时第一次录入，如果是修改，则不会从计划里再把数据带过来。

	计划与实际，在实际进度根据计划创建后，就没有联系的，实际进度表里只有自己的数据与计划表没关系。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day307 2011年11月2日

1. mysql 运行状态查看

	>show status;

		测试c3p0的连接池情况，打开多个访问数据库操作，log显示维护着3个connection，然后关闭某个操作，查看
	mysql的连接数是否减3。

	
	| Threads_cached                           | 8
	| Threads_connected                        | 16 //关闭一个连接池就减少3个链接，测试正确
	| Threads_created                          | 29
	| Threads_running                          | 1


	mysql> show status like 'thread%';
	+-------------------+-------+
	| Variable_name     | Value |
	+-------------------+-------+
	| Threads_cached    | 7     |
	| Threads_connected | 1     |
	| Threads_created   | 31    |
	| Threads_running   | 1     |
	+-------------------+-------+
	4 rows in set (0.00 sec)


	这里就涉及到连接池应该维护活动链接的数量问题，多了就耗费了数据库资源，少了达不到连接池的好处 ：


	
	
	
	另外：
		根据mysql的状态信息，也可以看出连接池是否及时的去掉不用的链接。
	

2. ibatis事务交由spring管理的配置

	具体配置可搜索，没有再去看框架文档和tutorial。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day308 2011年11月3日

1. cmd 命令行命令 net命令 例子

	用net命令启动或者停止某个服务。

	C:\Documents and Settings\Administrator>net start
	已经启动以下 Windows 服务:

	   Application Layer Gateway Service
	   Background Intelligent Transfer Service
	   COM+ Event System
	   Cryptographic Services
	   DCOM Server Process Launcher
	   DHCP Client
	   DNS Client
	   Event Log
	   Extensible Authentication Protocol Service
	   Fast User Switching Compatibility
	   HTTP SSL
	   IIS Admin
	   Indexing Service
	   Logical Disk Manager
	   MySQL5
	   Network Connections
	   Network Location Awareness (NLA)
	   Network Provisioning Service
	   Plug and Play
	   Protected Storage
	   Remote Access Connection Manager
	   Remote Procedure Call (RPC)
	   Security Accounts Manager
	   Security Center
	   Server
	   Shell Hardware Detection
	   SSDP Discovery Service
	   System Event Notification
	   System Restore Service
	   Task Scheduler
	   Telephony
	   Terminal Services
	   Themes
	   Windows Audio
	   Windows Firewall/Internet Connection Sharing (ICS)
	   Windows Management Instrumentation
	   Workstation
	   World Wide Web Publishing
	   XLServicePlatform
	   主动防御

	命令成功完成。


	C:\Documents and Settings\Administrator>net help
	此命令的语法是:


	NET HELP
	command
	      -or-
	NET command /HELP

	   可用的命令包括:

	   NET ACCOUNTS             NET HELP              NET SHARE
	   NET COMPUTER             NET HELPMSG           NET START
	   NET CONFIG               NET LOCALGROUP        NET STATISTICS
	   NET CONFIG SERVER        NET NAME              NET STOP
	   NET CONFIG WORKSTATION   NET PAUSE             NET TIME
	   NET CONTINUE             NET PRINT             NET USE
	   NET FILE                 NET SEND              NET USER
	   NET GROUP                NET SESSION           NET VIEW

	   NET HELP SERVICES 列出用户可以启动的网络服务。
	   NET HELP SYNTAX 解释如何阅读 NET HELP 语法行。
	   NET HELP command | MORE 用于逐屏显示帮助。

	C:\Documents and Settings\Administrator>net stop mysql5
	MySQL5 服务正在停止..
	MySQL5 服务已成功停止。

2. 配置式事务



3. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day309 2011年11月4日

1. java.sql.Connection 的 transactionIsolation
	事务隔离级别

	level one of the following Connection constants: 
		Connection.TRANSACTION_READ_UNCOMMITTED, 
		Connection.TRANSACTION_READ_COMMITTED, 
		Connection.TRANSACTION_REPEATABLE_READ, 
		or Connection.TRANSACTION_SERIALIZABLE.
	(Note that Connection.TRANSACTION_NONE cannot be used because it specifies that transactions are not supported.)

2. ibatis的 sqlmapclient 与 opensession

		The SqlMapClient can either be worked with directly as a multi-threaded client (internal session management), or you can get 
	a single threaded session and work with that. There may be a slight performance increase if you explicitly get a session 
	(using the openSession() method), as it saves the SqlMapClient from having to manage threads contexts. But for most cases
	it won't make much of a difference, so choose whichever paradigm suits your needs or preferences. 

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

day310 2011年11月8日

1. spring事务 安全 了解

	结合项目

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day311 2011年11月8日

1. 

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day312 2011年11月9日

1. 判断浏览器是否为ie
if(-[1,]){   
     alert("这不是IE浏览器！");   
}else{   
     alert("这是IE浏览器！");   
}  


2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day313 2011年11月10日

1. wyjs etc

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day314 2011年11月11日

1. jquery

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day315 2011年11月15日

1. wyjs 
	
	成本报表

	目标：项目管理-成本分析 与 综合项目管控-成本分析对应一致

	例子： 杭州奥体博览城配套整治工程安置用房I标段-土建-01  

2. 查找/替换 tip ，直接复制要查找的内容，然后查找，比如有写字符如空格输入的和实际的也许不匹配，直接  【excel】
复制上去查找即可 。excel去掉数字前面的空格。

	excel的汇总计算 ,excel 统计 ，还是中学学的东西，忘了差不多了，但稍微看看还是很快就能上手。

		用函数求选中的单元格的值，如果有多个行或列需要求值且分布都是同样的规律，则直接拖动那个填充值的单元格
	excel会自己去计算其他各列的值。
		
		双击汇总单元格会显示所计算的行列信息，并用颜色来突出显示函数所作用到的单元格，便于检查。

	excel减法
		要使用减法可以直接用减号“-”比如：A3＝A1－A2的话，你只要输入公式：＝A1-A2

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day316 2011年11月16日

1. 
wyjs
报表问题

2. 

mysql 服务注册 删除
	mysqld -remove ,mysqld --install net start mysql ...


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day317 2011年11月17日

1. 从 js的prototype,深入js的对象编程

	


2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day318 2011年11月18日

1. 成本分析 报表  【系统 业务 成本管理 成本归结 分包归结 推销 结算 预结算】

	报表的计划成本与计划成本里的数值有出入：
		计划成本的数据				对应报表的计划成本数据		成本核算里的实际成本		对应报表实际成本
		人工费	6634168.45			6634168.46 - 出入				15622653.70 
		材料费	38696541.02			38696612.19 - 出入				
		机械费	2177062.11			2177061.85 - 出入				
		分包成本	4268380.22		4268380.22  - 正确				

	进入报表部分，查找原因：
		costanalysislist.jsp
		CostanalysisAction.java
		
	选择项目后，进入项目管理模块：
		成本管理中，实际成本从各自的成本点去取得数据，预算，计划可以在本模块录入。比如，材料
	的实际成本需要从材料管理中取得；从成本核算中可以看出，人工费来自分包(归结为人工的那部分费用)。
	分包会产生多种成本，在分包预结算阶段的推销操作进行了成本归结到各自的成本单元(项目总成本单元
	和分包成本单元的对应)中通过这种成本归结的方式，实现各个成本点的管理。
	
		成本管理中的成本归结问题。
	

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day319 2011年11月21日

1. A模块实际数据 - B成本分析报表数据 - C管控考核统计数据 对照 

	材料费 实际成本 94588262.51 -  85182164.6300 * 
		     计划成本 86865617.5479 - 73389276.16 - 86865617.5479 * 同人工费

	机械费 实际成本 1250640 - 1250640 - 1189320.00 *
		     计划成本(对应报表里的预算成本，从月计划累计得到)  1239950.00 - 3860109.15 - 1239950.6000 * 问题同人工费的计划成本，应该取期间计划的数据

	人工费 实际成本 24944688.7 - 24944688.7 -  24944688.7000
		     计划成本 8987914.42 - 16647554.66 -  8987914.4181 * doing  结论：16647554.66取的是成本管理中的计划成本，不是期间计划成本，正确应该以期间计划成本为准
	(补充：人工费的计划在成本管理和劳动力管理2个地方做，互不影响，不知为何？)
		
	分包费 实际成本 5,422,780.00 - 5422780 -  5422780.0000
		     计划成本  4100405 - 14721002.46 -  4100405.0000 * 问题同人工费，应该取期间计划的值

	垃圾数据的可能

	结论：
		计划成本对不上主要是取的不是期间计划的值，是成本分析报表的对应列错误；

	先继续对实际的数据
		

2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day320 2011年11月22日

1. 成本报表 在成本分析报表和管控报表里的值不一致，只是确实不是取的同一个值。
一个是计划，一个是期间计划，没有矛盾。

	实际成本，材料费，机械费有出入

2. xml 自动提示 IDE 自动提示

	IDE(myeclipse) 提供了对ant，struts，spring等框架的支持，当它识别出是某个框架的配置文件后，就能
	提供，自动提示，自动完成属性输入等诸多方便功能。
	
3. 序列化号，对于pojo最好实现序列化接口，定义序列化号，对于service层，看情况，一般可以不定义


4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day321 2011年11月24日

1. 

2. 

	关于Spring的DataAccessException
		
		Spring的Dao层封装了底层(runtime exception)异常,便于数据访问接口，可以统一抛出 
	org.springframework.dao.DataAccessException 不用考虑数据访问层实现关于异常抛出的
	细节。

	Spring’s DAO frameworks do not throw technology-specific exceptions, such
	as SQLException or HibernateException. Instead, all exceptions thrown are
	subclasses of the technology-agnostic org.springframework.dao.DataAccess-
	Exception. This enables your data access interfaces to throw Spring’s general
	DataAccessException instead of implementation-specific exceptions that would
	force other application layers to catch them and thus become coupled to a particular
	persistence implementation. In fact, you can intermingle multiple persistence
	technologies within the same application without your service objects even
	knowing it.
	Since DataAccessException is the root of all Spring DAO exceptions, there are
	a couple of important things to know.

3. 关于测试 看spring关于测试

4. 细节 关于get/set方法
	service层,Dao层的成员变量，一般不需要提供其get方法，特别当成员变量为私有变量时，只需提供set方法即可。


5. mysql 命令
	tip: mysql > show processlist
	...

	help contents - 获取服务端命令帮助

		根据对应命令帮助操作，常用的：
			账户管理 -创建用户：CREATE USER 'jeffrey'@'localhost' IDENTIFIED BY 'mypass'

	delete from mysql.user where User = 'usemonuser';
	
	-- 创建用户
	create user usemon@localhost ;
	-- 设置密码
	set password for usemon@localhost = password('usemonpass');
	-- 授权 type help grant for help in commandline 
	grant all on usemon.* to usemon@localhost;
	-- 刷新mysql权限表
	flush privileges;
	



6. 

	

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day322 2011年11月25日

1. 关于测试
	事前不好好做好测试，事后再来无休止的对数据，处理bug，此种方法是不可取的。所以，规矩的做好
需要的各类测试很重要。


2. 处理 管控-成本分析，资金分析等各报表的统计是否正确 ？
	测试项目：杭州市电力局新电力生产调度中心、浙江利有商务中心工程-土建-01 
	测试目标：实际成本是否统计正确 “管控里面成本分析中各费用实际成本的值 要和综合项目管理中成本核算中的值保持一致”
	结果：
	- 资金分析 正确
		* 资金累计收入 实际数据来自 管控-资金管理-收款信息 各类收款信息的累计	正确
		* 资金累计支出	正确
		解决：
			1) 资金累计支出实际数据统计目标为 管控-资金管理-付款信息 里的记录（且记录的申请单号不为空的部分）
			2) 有些项目的付款信息为空，或者丢失，可能是 付款信息主表t_pm_payment的orgid字段丢失。
			3) 业务为：在综合管理中填报付款申请，然后到管控中录入付款信息，资金支出以后者为准
		* 资金借贷 在综合-资金管理-借款信息(实际拨款的值)/资金还款中
	- 成本分析
		* 项目级 正确

	- 设备分布
		* 分析与设备管理-设备台账 对比
		* 项目级 绍兴金科·香水湾一期工程-土建-01  2个外租正确，3个内租数据丢失，0自购数据正确
		* 项目级 统计数字里包含了退场和未退场的数量
	
	- 合同履约
		* 
		* 项目级 通和·戈雅公寓（三期）工程-土建-01 及其他项目显示都为0，在公司级查看时为有数据
		* 

	综合管理中处理实际数据，管控中统计实际数据。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day323 2011年11月28日

1. go on day322 第2条
	同步问题记录

2. about soa in action
	基于服务的应用及整合实践。

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day324 2011年11月29日

1. go on 报表核对


2. IDE myeclipse 再部署 redeploy 调试 debug

	合理redeploy,减少同时重新部署的需要，加快调试

3. tomcat ，web调试 deploy 
	可以通过tomcat的管理页面来启动和关闭实例。

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day325 2011年11月30日

1. 报表的合同履约部分校对

2. version control  版本控制
	可以断开版本控制连接，然后继续连接上  在myeclipse里测试通过

3. 处理 报表数据与实际数据 对照表 excel
	便于核对数据。	

	先 资金分析，竣工项目，在建项目 

4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day326 2011年12月1日

1. 继续报表校验，并对并记录
	

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day327 2011年12月2日

1. ide myeclipse 用快捷键ctrl+o查看 类的所有方法和属性时，一般显示本类定义的，如果要查看其继承的，
再敲下ctrl+o 即可列出其继承的属性和方法（包括父类继承和接口继承）。

2. openfile instant messaging (IM) have a look 

	web安装程序制作 web安装程序

	可以学习 openfire 的web安装方式。

		通过自带的容器(Jetty)，启动服务，再通过web访问，进入安装主页；然后，一步步输入配置需要的参数，
	完成配置和安装。

	国际化

	多数据库支持。

	插拔式扩展： 比如，安装上用户导入/导出插件，就可以实现用户的导入/导出.

	通过svn下载其源码，包括文档和测试部分，也可看看它的测试。

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day328 2011年12月5日

1. 系统 即时通讯


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day329 2011年12月6日

1. HR js验证问题处理 

2. 成本分析 - 机械成本 - 月份统计 校对

	外租 + 周转材 数据 ，在计算某个区间的成本时和实际的这个期间产生的成本不匹配。

	以 杭州奥体 为例


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day330 2011年12月7日

1. IDE myeclipse
	关闭xml ，html，jsp等的验证，有时候需要关闭，可以在配置里取消 validation

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day331 2011年12月8日

1.  成本分析

	设备成本

		综合-设备管理
			* 租赁结算中 ，当前月份的期间计算，应该根据实际的天数，而不是按照整个月的天数。
			* 需求月计划的期间，如果没有，而实际期间已有，在成本分析中这个期间的计划和时间都
			不能查询出来。


2. 配置jndi，数据源找到，但都为空(取到的DataSource对象的 username，password，driverclassname等属性都是null)，导致
不能连接到数据库，最后找到原因为 在项目的meta-inf目录下定义的context.xml文件没用出现在 ：
{tomcat_home}\conf\Catalina\localhost目录里 有上面这个context文件，文件名为访问的命名 （E:\apache-tomcat-6.0.29\conf\Catalina\localhost）

	【测试】测试方法，最小化测试：建个web项目，其他上面都不要只要最基本的测试jndi的东西（比如jdbc驱动，jsp页，数据源配置文件）


	结论：
		解决这个问题，源于对tomcat的不了解。对context.xml的加载不了解。有时间要看看tomcat的原理。

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day332 2011年12月9日

1. 机械设备  【系统 业务】
	
	计划是人为制定，实际期间根据时间自动计算

	租赁结算 期间结算，计算到当前时间


2. 分包预结算问题 见doc

	* 预结算流程通过才能进行结算录入 ok
	/pm1/src/com/erp/pm/subcontract/dao/DisburseDao.java

	* 分包预结算 多次结算 的未结算金额 问题
		测试数据在 分包合同里的录入 ，比如 人工 ，机械等


3. 样式 提示 提醒 样式 改进   【页面 设计 前台 设计】

	比如 ，如果没有权限 显示灰色 鼠标移上去会提示信息，但是，一般情况下
用户会选择直接点击被禁用的按钮或链接，不容易注意到有个提醒（鼠标移开提醒就会消失）
改进为：
	统一的提示窗口：将提醒按照错误，信息，备注等信息等级，规范所有提示性
弹出框的展示。去掉默认的弹出框提示，改为人性化的div，提高使用舒适度。
	将提醒功能抽取为公用，便于样式，行为统一，规范化。

	如何实现？待

	改进，
		一般性提示信息，比如没有权限操作，鼠标移上去，在鼠标边上出现一个div框提示信息。移开后即消失。
	使用html标签的alt或者title属性，在显示内容上有限制；且存在浏览器异同而差异。
		

4. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day333 2011年12月12日

1. 分包预结算 - 结算明细 问题 见doc

	/pm1/webapp/erp/pm/subcontract/groceyinput.jsp

	分3次录入测试通过，数据错误并不能正常保存。

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day334 2011年12月13日

1. 机械 核查 ，直接根据sql语句来找原因

	期间里没有设备进场，会导致期间查询不能计算之前进场，但还未退场的机械产生的机械费。

	初步：
		筛选条件没有考虑到期间内没有任何进场记录时机械费的计算情况。
		输出的sql语句不同，应该是根据条件走了不同的sql检索。

	
		入口 GReportAction 的getProjectCostReport方法的datalist对象中的machinereal键对应的值是如何计算出来的，
	问题就出在这个值。
	
	-> GReportService 的 getHMachine 方法- 机械租赁预结算

	-> GReportService 的 getHMap 方法返回有值才进行下面的计算：

		(HqMachineryPrepayService 的 getTotalPage 方法的 ：List<Map> listW = forTheSecondReport(prjid,datepoint,"out",enddate);)

	-> getHMap方法中 GReportDao 的 getProjectIdList 方法，在没有进场记录时返回空记录，导致数据错误。

	sql如下：
			select
			note.prjid,
			project.name,
			project.code,
			project.status,
			project.id,
			project.deptid as orgid 
		    from
			(   select
			    prjid 
			from
			    T_PM_MaterialLendTurnInNote   
			where
			    indate>='2011-06-01 00:00:00' 
			    and indate<='2011-07-30 00:00:00'   
			union
			select
			    prjid 
			from
			    T_PM_MaterialLendTurnInNote2    
			where
			    indate>='2011-06-01 00:00:00' 
			    and indate<='2011-07-30 00:00:00'   
			union
			select
			    prjid 
			from
			    T_PM_MachineInnerEnter    
			where
			    checkdate>='2011-06-01 00:00:00' 
			    and checkdate<='2011-07-30 00:00:00'   
			union
			select
			    prjid 
			from
			    T_PM_MachineOutEnter   
			where
			    checkdate>='2011-06-01 00:00:00' 
			    and checkdate<='2011-07-30 00:00:00'  
		    ) note  
		left join
		    t_pm_project project 
			on project.id=note.prjid  
		where
		    1=1  
		    and  project.deptid in (
			select
			    id 
			from
			    treelistforsystemorgstartfromid('402881762a3242ae012a4657ac321ca7')
		    ) 
		分析：
			如果查询的期间里没有任何进场，则返回结果集为空；
		但是后续费用计算是在此结果集不为空时才会计算的。

	
	解决：
	---------
	...
	private Map<String, Map> getHMap(String orgid1, String orgid2,	String employeeid, String status, String startdate, String enddate) {
		List<Map> list = gReportDao.getProjectIdList(orgid1,orgid2,employeeid,status,null,null);
		Map<String,Map> rs = new HashMap<String,Map>();
		if(list.size() > 0){
			
			for(Map map : list){
				if(map != null && map.get("id") != null){
					String prjid = map.get("id").toString();
					BigDecimal material = this.getHMaterial(prjid, parseDate(startdate), parseDate(enddate));
					BigDecimal machine = this.getHMachine(prjid, parseDate(startdate), parseDate(enddate));
					Map m = new HashMap();
					m.put("material", material);
					m.put("machine", machine);
					m.putAll(map);
					rs.put(prjid, m);
				}
			}
		}
		return rs;
	}
	...
	----------
	去掉日期来查询工程ID,保证工程ID在某个期间没有任何进场的情况下也能出来 ：
		List<Map> list = gReportDao.getProjectIdList(orgid1,orgid2,employeeid,status,null,null);
	项目级测试 ok  (测试例2 : 杭州市电力局新电力生产调度中心、浙江利有商务中心工程-土建-01 )

	公司级有项目出不来，和上面的情况类似 ，待查 ？


	

2. 处理 今天doc文档

	* 略 见doc处理结果

	sql 修改
		alter table T_HR_DUTYCERT alter column  Certapproved varchar(60)  

3. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day335 2011年12月14日

1. 处理成本-机械费 项目级ok
	测试公司级，也有同样的问题
	处理 ok


2. 管控-项目统计 报表
	* 合计 页面和excel导出不一致
	* 查询项目名称到导出和页面不一致
		比如 搜索“电力”有2条记录，但导出时数据为空。

		原因：
			通过debug找到，是由于导出时查询的名称为汉字时出现乱码，导致
			sql条件筛选错误。
		分析：
			查找产生乱码的位置及原因
			原因为get方式传递汉字时，服务器接受为乱码，由于页面的编码是utf-8，所以浏览器提交get请求的
			编码也为utf-8，但是，tomcat在{tomcat_home}/conf/server.xml里处理8080端口的 connector对URI解码默认
			采用iso-8895-1，从而导致乱码；
		解决：
			修改tomcat8080connector的默认解码格式为utf-8即可（根据实际的编码格式来配置一样的解码格式）

			如下：
			<Connector port="8080" protocol="HTTP/1.1" 
			 connectionTimeout="20000" 
			 redirectPort="8443" URIEncoding="utf-8"/>
		
		关于connector的相关信息见tomcat的文档。截取一部分：
			URIEncoding	 This specifies the character encoding used to decode the URI bytes, after %xx decoding the URL. 
						 If not specified, ISO-8859-1 will be used. 

		【系统 get方式请求 乱码 excel导出 部署 系统正式部署】tomcat配置这里要注意
			
3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day336 2011年12月15日

1. 系统报表及小问题处理

2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day337 2011年12月16日

1. 系统bug

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day338 2011年12月19日

1. 系统permg区(永久区)加载过多及堆内存回收的分析

	工具：
		* jprofile
			可以集成到IDE中，方便测试分析
		* usemon

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day339 2011年12月20日

1. 问题doc 处理
	具体见doc
2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day340 2011年12月21日

1. 继续doc问题处理
	具体见doc


2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day341 2011年12月22日

1. 事务的 ACID
	练习到本系统

	如果牵扯到分布式事务，目前的实现方式有两种：write ahead log 和 shadow paging

2. 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day342 2011年12月23日

1. 系统内存占用

	永久区(pergm)内存溢出原因检测

	【tomcat】
		tomcat配置jvm参数，在E:\apache-tomcat-6.0.29\bin目录下 catalina.bat/catalina.sh ，配置 JAVA_OPTS的值。

		比如 ，tomcat内存配置，agent配置。

2. 系统 中间机构树-机构名称改用全称 (原来用的简称) 【系统 建议 机构树名称可以配置用简称还是全称，以及其他方面的可配置设计】

	从 信息发布-规章制度 的中间机构树开始

	http://localhost:8080/wyjs/common/Tree_filialetree.action?decorator=layoutin&linkName=/oa/Regulations_list&type=null&treebz=hr&market=null

	
	- TreeAction 
	- filialetree()
		- getTreeList()) 
			- treeService.getOrgs()
				- SendarchiveService.getOrgTree3()  detailList 
					就是这个getOrgTree3的方法，理论上把shortname替换为name即可，但是这里不行
					也为这里name已经不是全称了，而是带其上级机构名全限定名(原本应该为longname)。
					
					解决：
						去找到哪里改变了name字段的对应的值，改回原来的机构全称即可。
						
						sql 修改
						* getupOrgid_new
							sql函数  name被设置为longname了，本已有longname；还有f_org取的也是
							shortname要改为name。
								--------
								set ANSI_NULLS ON
								set QUOTED_IDENTIFIER ON
								GO
										ALTER function [dbo].[getupOrgid_new](@orgid varchar(32) )
										returns table
										as
										return(
											with sub_table(id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname,level)
												 as (
													select s.id,s.parentid,s.type,d.code,d.taxis,s.name,s.shortname,s.builddate,s.faxes,s.telephone,s.postnum,s.address,s.status,s.createdate,s.lastdate,s.lastemployeeid,s.companyid,d.name as langname, 0 as level from t_hr_org s,F_ORG('') d where s.id=d.id and dbo.F_getNullStr(s.id)=@orgid 
												union all   
													select a.id,a.parentid,a.type,b.code,b.taxis,a.name,a.shortname,a.builddate,a.faxes,a.telephone,a.postnum,a.address,a.status,a.createdate,a.lastdate,a.lastemployeeid,a.companyid,b.name as langname,c.level+1 level from  t_hr_org a,F_ORG('') b,sub_table c where a.id=c.parentid and a.id=b.id
													)
											 select id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname,level from sub_table 
											)
								--------
						* f_org
								--------
								set ANSI_NULLS ON
								set QUOTED_IDENTIFIER ON
								GO

								ALTER FUNCTION [dbo].[F_ORG](@orgid varchar(100)) 

								returns @tree_table table
								(id   varchar(32),
								code  varchar(50),
								name varchar(500),
								parentid varchar(32),
								type varchar(32),
								companyid varchar(32),
								taxis varchar(100),
								status  varchar(10)
								)
								as
								begin

								if  (@orgid ='')
								begin
								    insert into @tree_table select id ,code,name as name,parentid,type,companyid,COALESCE(taxis,'999') as taxis ,status from  t_hr_org  where parentid is null or parentid = ''
								end
								else
								begin
								   insert into @tree_table select id ,code,name as name ,parentid,type,companyid,COALESCE(taxis,'999') as taxis,status from  t_hr_org  where id=@orgid order by Taxis
								end

									while @@rowcount>0
									begin 
									  insert into @tree_table select a.id,a.code,b.name+'·'+a.shortname,a.parentid,a.type,a.companyid,COALESCE(b.taxis,'999')+'.'+cast(COALESCE(a.taxis,999) as varchar) as taxis,a.status 
										from t_hr_org a,@tree_table b where a.parentid=b.id  
										and not exists(select id from @tree_table c where c.id=a.id) order by b.Taxis,a.Taxis
									end
								return 
								end	
								--------
						* F_ORGrange_hr
								--------
								set ANSI_NULLS ON
								set QUOTED_IDENTIFIER ON
								GO

								---=================================================
								--====================================  
								-- Author：		zbyu
								-- date：		2009-12-22
								-- Description：获得当前岗位的范围权限
								-- modifyDate：	2009-01-05
								--====================================
								ALTER function [dbo].[F_OrgRange_hr]( @orgid varchar(50),@employeeid varchar(50),@back varchar(50))
								returns  table
								as
								---type:
								--2：hr类型的树查询,带有职能部门和项目部
								-- @employeeid 当前登录人ID
								-- @back 备用字段参数
								return(
									with sub_table(id,parentid,type,code,taxis,name,shortname,status,orgname,companyid,longname)
										as(
											select s.id,s.parentid,s.type,d.code,d.taxis,s.name,s.shortname,s.status,d.name as orgname,s.companyid,d.name as longname
													from t_hr_org s,F_ORG('') d,T_HR_DUTYPOST f,T_Sys_UserRangerole b,T_Sys_OrgRangerole t
													where s.id = d.id and s.id = t.orgid and f.id = b.dutypostid and b.rangeroleid = t.rangeroleid 
														and f.dutyorgid = @orgid  and f.employeeid = @employeeid
										  union all
											select a.id,a.parentid,a.type,b.code,b.taxis,a.name,a.shortname,a.status,b.name as orgname,a.companyid,b.name as longname
													from  t_hr_org a,F_ORG('') b,sub_table c--,T_Sys_OrgRangerole r
													where a.id=b.id and b.id=c.parentid --and r.orgid = b.id
										)
										select distinct id,parentid,type,code,taxis,name,shortname,status,orgname,companyid,longname
										from sub_table
										union all
										select a.id,a.parentid,a.type,b.code,b.taxis,a.name,a.shortname,a.status,b.name as orgname,a.companyid,b.name as longname
										from  t_hr_org a,F_ORG(@back) b where a.id=b.id
									)
								--------

						* F_ORGrange_da
								--------
								set ANSI_NULLS ON
								set QUOTED_IDENTIFIER ON
								GO

								--- Author：		zbyu
								--- date：		2009-12-24
								--- Description：获得当前岗位的范围权限
								---====================================
								ALTER function [dbo].[F_OrgRange_da]( @orgid varchar(50),@employeeid varchar(50),@back varchar(50))
								returns  table
								as
								---type:
								--3：档案查询树的查询，不带职能部门
								-- @employeeid 当前登录人ID
								-- @back 备用字段参数
								return(
									with sub_table(id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname)
										as(
											select s.id,s.parentid,s.type,d.code,d.taxis,s.name,s.shortname,s.builddate,s.faxes,s.telephone,s.postnum,s.address,s.status,s.createdate,s.lastdate,s.lastemployeeid,s.companyid,d.name as langname
													from t_hr_org s,F_ORG('') d,T_HR_DUTYPOST f,T_Sys_UserRangerole b,T_Sys_OrgRangerole t
													where s.id = d.id and s.id = t.orgid and f.id = b.dutypostid and b.rangeroleid = t.rangeroleid 
														and f.dutyorgid = @orgid and s.type <> '1' and f.employeeid = @employeeid
										  union all   
											select a.id,a.parentid,a.type,b.code,b.taxis,a.name,a.shortname,a.builddate,a.faxes,a.telephone,a.postnum,a.address,a.status,a.createdate,a.lastdate,a.lastemployeeid,a.companyid,b.name as langname
													from  t_hr_org a,F_ORG('') b,sub_table c
													where a.id=c.parentid and a.id=b.id 
										)
										select distinct id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname
										from sub_table
									)
								--------
						* F_ORGrange_sc
									--------
									set ANSI_NULLS ON
									set QUOTED_IDENTIFIER ON
									GO
									---====================================
									--- Author：		zbyu
									--- date：		2009-12-22
									--- Description：获得当前岗位的范围权限
									---====================================
									ALTER function [dbo].[F_OrgRange_sc]( @orgid varchar(50),@employeeid varchar(50),@back varchar(50))
									returns  table
									as
									---type:
									--1：市场经营的树查询,不带有职能部门和项目部
									-- @employeeid 当前登录人ID
									-- @back 备用字段参数
									return(
										with sub_table(id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname,level)
											as(
												select s.id,s.parentid,s.type,d.code,d.taxis,s.name,s.shortname,s.builddate,s.faxes,s.telephone,s.postnum,s.address,s.status,s.createdate,s.lastdate,s.lastemployeeid,s.companyid,d.name as langname,0 as level
														from t_hr_org s,F_ORG('') d,T_HR_DUTYPOST f,T_Sys_UserRangerole b,T_Sys_OrgRangerole t
														where s.id = d.id and s.id = t.orgid and f.id = b.dutypostid and b.rangeroleid = t.rangeroleid 
															  and f.dutyorgid = @orgid  and s.type not in('1','2') and f.employeeid = @employeeid
											  union all   
												select a.id,a.parentid,a.type,b.code,b.taxis,a.name,a.shortname,a.builddate,a.faxes,a.telephone,a.postnum,a.address,a.status,a.createdate,a.lastdate,a.lastemployeeid,a.companyid,b.name as langname,c.level+1 as level
														from  t_hr_org a,F_ORG('') b,sub_table c
														where a.id=c.parentid and a.id=b.id
											)
											select distinct id,parentid,type,code,taxis,name,shortname,builddate,faxes,telephone,postnum,address,status,createdate,lastdate,lastemployeeid,companyid,langname,level
											from sub_table
										)
									--------

						* getOrgTree3里面，name键直接取修改正确的name对应的值：
							hm.put("name", (String) map.get("name"));	
							hm.put("shortname", (String) map.get("shortname"));

						* 有些机构树页面，直接取的就是 shortname ，这类修改，需要改页面的取值为 name 即可。
							例如：name = (String)hm.get("shortname") 改为 name = (String)hm.get("name");
						
						* 通过 servlet 请求机构树数据的情况 DynaTreeServlet
						
	- return TREE

	/common/tree/tree.jsp

	Constant.ORG_FULLTNAME

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day343 2011年12月26日

1. day242第2条，找到其他查询机构的函数并做相应修改
	具体见上

	修改好后，对所有涉及到机构树的系统功能点走一遍，测试。

		协同门户 ok
		...
		...

		all test ok


	总结：从修改机构树字段取值，看出系统调用机构树数据的口太多，难于维护与管理。
		    需要抽象出来，统一管理和调用。

2. 问题 ，查询list记录条数语句
	---------
	    select
		count(1) cnt 
	    from
		( select
		    * 
		from
		    T_HR_Org o 
		left join
		    F_org('') b 
			on o.id = b.id 
		where
		    1=1 
		    and o.status = '2' 
		    and o.companyid='402881e6220b291201220b9a66fd0001' ) o 
	---------
	子查询里有两个id字段，子查询用 * 不解其意。去之，改为o

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day344 2011年12月27日

1. IDE myeclipse tomcat 管理控制台 404 ，后台不能访问 【tomcat 404 context.xml】

	由于IDE的原因导致 manager 应用的web.xml文件丢失。

	比如 tomcat6.0.29 ，启动时它会自动把META-INF下的context.xml部署到onf\Catalina\localhost下，如果启动后
	手动删除这个context.xml，则tomcat执行reload操作时会删除WEB-INF下的web.xml文件。
	环境：xp sp3 ,jdk6,tomcat6.0.29 ，x86指令架构cpu 32位


2. js 值传递，对象传递

	function mod() {		
			if (check(1,'pgform.ids')) {
				/*
				var id = eval(pgform.ids);
				alert(id.value+"_"+pgform.ids.value);
				id.value = pgform.ids[0].value;
				alert(id.value+"_"+pgform.ids.value);
				//eval(pgform.ids.value);
				*/
				self.location="/wyjs/oa/Regulations_input.action?decorator=layoutin&id="+pgform.ids.value;
				getloadsubmit();
				
			}
		}
	pgform.ids 这个对象，进入check方法后，被赋予value属性的值，


	getloadsubmit();方法在跳转之前执行会有问题，待查？

	
3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day345 2011年12月28日

1. 系统一些基础问题  【系统 建议】
	生产系统，404等类错误不应该直接抛出，提示友好错误界面。
	dwr后台调试关闭，严重安全问题！

2. 测试提交

3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day346 2011年12月29日

1. 组件化 component

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day347 2011年12月30日

1. eclispe 导入已有java项目 ，New java project - Create project from existing source
	ide会自动分析目录机构。

2.即时通讯 IM ，集群，共享方案
	oracle coherence 
	—— to frequently used data.


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day348 2012年1月4日

1. 
deprecate 
也需实现，只是不赞成用，不是强制不用；考虑一些旧版本兼容性也应该实现。

	题外：
		xp 系统对html文件内容检索支持不完善，可以检索 globalActivity 找到页面文件 ，但是 globalActivity" 就不能找到。
	改为 txt格式时即可正确检索。

	
	...

	<div id="globalActivity" class="my_style_7 globalFrame">
	...

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day349 2012年1月5日

1. java 取得合适的 classloader 示例 类加载器 类装载器 安全
	------
	...
		/**
		     * Locates the best class loader based on context (see class description).
		     *
		     * @return The best parent classloader to use
		     */
		    private ClassLoader findParentClassLoader() {
			ClassLoader parent = Thread.currentThread().getContextClassLoader();
			if (parent == null) {
			    parent = this.getClass().getClassLoader();
			    if (parent == null) {
				parent = ClassLoader.getSystemClassLoader();
			    }
			}
			return parent;
		    }
	...
	------
	

2. 用浏览器工具 比如 ie的 IE developer toolbar
firefox的firebug等分析页面构成结构 
比如 div+css 排版布局样式等。

3. 页面设计 页面布局 css  页面设计 兼容
	表单里，如果左边是输入框旁边是提交按钮 比如 百度首页，一般情况下，不好调整输入框和提交按钮的完全对齐。
百度的处理方式是：把这两个input都放到各自的span里，然后将输入框的外层span样式设计成输入框的样子，输入框的样式
设计为消失在span的背景色中，以此实现对齐。

获取窗口宽度和高度

窗体的高度和宽度

          * IE：document.body.offsetWidth和document.body.offsetHeight。注意：此时页面一定要有body标签。

          * FF：window.innerWidth和window.innerHegiht，以及 document.documentElement.clientWidth和 document.documentElement.clientHeight。

          * 通用：document.body.clientWidth和document.body.clientHeight。

	  具体说明见html的dom文档说明。

	setAttribute class 设置样式 动态

	element.setAttribute("class", value); //for firefox
	element.setAttribute("className", value); //for IE

	样式问题


	setAttribute("class", value)中class是指改变"class"这个属性，所以要带引号。
	vName代表对样式赋值。
	例如:
	var input = document.createElement("input");
	input.setAttribute("type", "text");
	input.setAttribute("name", "q");
	input.setAttribute("class",bordercss);
	输出时： ,即，input控件具有bordercss样式属性
	注意：class属性在W3C DOM中扮演着很重要的角色，但由于浏览器差异性仍然存在。
	使用setAttribute("class", vName)语句动态设置Element的class属性在firefox中是行的通的，
	但在IE中却不行。因为使用IE内核的浏览器不认识"class"，要改用"className"；
	同样，firefox 也不认识"className"。所以常用的方法是二者兼备：

	element.setAttribute("class", value); //for firefox
	element.setAttribute("className", value); //for IE


样式引入：
	通过一个style文件引入其他样式文件
	-----
	...
		/*
		Template Name: 小渭模板-qq商城风格
		Template URI: http://www.xwmoban.com/
		Description: qqshop template
		Version: 2.72
		Author: GUI：qqshop /---------/ CODE：小渭
		Author URI: http://www.xwmoban.com/
		Logo filename: logo.gif
		*/

		@import url(css/layout.css); /*布局*/
		@import url(css/component.css); /*模块部分*/
		@import url(css/my.css);
		@import url(css/new0622.css);/*最新的配置文件*/
		@import url(css/qqshop.css);/*qq商城配置文件*/
		@import url(css/extend2012.css);/*后续调整涉及到的样式文件*/

		/*  ==================== 全局通用部分 ====================  */
		* html {
		  filter:expression(document.execCommand("BackgroundImageCache", false, true));
		}

		*{
	...
	-----

	line-height 样式 内容对齐 css

	参考其他页面的样式

4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day350 2012年1月6日

1. 测试

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day351 2012年1月9日

1. excel导出乱码 
	系统账号 - 上海公司
	其他机构正常 

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day352 2012年1月11日

1. 提交修改


2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day353 2012年1月11日

1. CDN

2. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day354 2012年1月12日

1. 同样的请求机构参数不同，导出的excel出现乱码问题
	
	保证编码解码一致，网上有处理的例子。

	终极解决方法：
		<meta http-equiv="Content-Type" content="application/ms-excel;;charset=utf-8">


2. 系统问题 
	系统用了sitemash来渲染公用的部分，但是如excel导出这样的页面可以不用渲染，加快响应速度


3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day355 2012年1月13日

1. HashMap

	Descrption：

		Hash table based implementation of the Map interface. This implementation provides all of the optional map operations, 
	and permits null values and the null key. (The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized 
	and permits nulls.)
	...

	Hash table


	Object对象的equals方法：

		boolean java.lang.Object.equals(Object obj)
		Indicates whether some other object is "equal to" this one. 

		The equals method implements an equivalence relation on non-null object references: 

		- It is reflexive: for any non-null reference value x, x.equals(x) should return true. 
		- It is symmetric: for any non-null reference values x and y, x.equals(y) should return true if and only if y.equals(x) returns true. 
		- It is transitive: for any non-null reference values x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) 
		should return true. 
		- It is consistent: for any non-null reference values x and y, multiple invocations of x.equals(y) consistently return true or consistently 
		return false, provided no information used in equals comparisons on the objects is modified. 
		For any non-null reference value x, x.equals(null) should return false. 
		The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any 
		non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true). 

		Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general 
		contract for the hashCode method, which states that equal objects must have equal hash codes. 

		See Also:
		hashCode()
		java.util.Hashtable
		Parameters:
		obj the reference object with which to compare.
		Returns:
		true if this object is the same as the obj argument; false otherwise.

		* 
	
	public native int hashCode();
	
2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day356 2012年1月16日

1. 


2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day357 2012年1月17日

1. git 命令
	E:\testGit>git check-ref-format --branch heads/resource


* 检测分支命名是否合法 git check-ref-format --branch heads/resource 
* 


2. 




*******************************************************************************
New Begin


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day1 2012年2月20日

1. 了解公司技术，开源框架，linux系统等等



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day2 2012年2月21日

1. 同day1 ，下载代码查看

2. 环境设置


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day3 2012年2月22日

1. 
webx3.0
	git上 http://webx.github.com/

	eclipse git 插件 http://download.eclipse.org/egit/updates  (http://eclipse.org)
	eclipse maven插件 http://eclipse.org/m2e/download/  http://m2eclipse.sonatype.org/sites/m2e/0.10.0.20100209-0800
	讨论区 http://openwebx.org/forum/

	项目导入：eclipse安装maven插件，直接导入maven项目即可
	m2eclipse

dubbo
	


2. myeclipse6.0 override注解错误解决
jre需要6.0,同时tomcat的jdk也为6.0即可。


3. Spring Schema / SSH   ?


4. maven 熟悉

	以安装了maven插件的myeclipse6.0新建的maven项目为例：
		需要哪些jar包，只需要在对应的配置文件pom中配置，插件会自动去下载这个插件(配置正确的前提下)；
	对于所要的插件如何定义依赖，可以到maven的repository里去查 http://mvnrepository.com 比如：freemark2.3.12
	是如下定义的：

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.12</version>
		</dependency>

	在parent配置文件里有对应子配置文件jar包的版本定义。继承即可

	missing artifact 找不到依赖包等错误，依据webx3的构建，主要原因还是maven的小问题，比如jar包是有的，已经下载下来，但
	还是提示找不到，可以到.m的maven jar包库中删除，重新下载即可解决。

	注：maven有个本地库(repository)，在这个可以检查缺少那些jar，或者jar设别有问题删除重新让maven下载。 

5. 






+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day4 2012年2月23日

1. 
一个servlet下载引发的连锁反应：

	由路上一个servlet实现文件下载->集群环境文件共享->了解到hadoop分布式系统基础架构->GFS->TFS
	中间穿插淘宝数据中间层(TDDL)如何实现，对应用屏蔽分库分表；如何成为10倍效率开发者-算法功底；

	自我感觉在多线程操作~

2. grep 功能说明：查找文件里符合条件的字符串。
	开源的linux系统代码才是算法的宝库，各种命令功能的实现可以先了解 ?

3. hadoop 
apache的一个分布式系统基础架构，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，
开发分布式程序。充分利用集群的威力高速运算和存储。  ？

	* GFS（Google File System）。Google一个分布式文件系统
		隐藏下层负载均衡，冗余复制等细节，对上层程序提供一个统一的文件系统API接口。Google根据自己的需求对它 进行了特别优化，
		包括：超大文件的访问，读操作比例远超过写操作，PC机极易发生故障造成节点失效等。GFS把文件分成64MB的块，分布在集群
		的机器 上，使用Linux的文件系统存放。同时每块文件至少有3份以上的冗余。中心是一个Master节点，根据文件索引，找寻文件块。
		详见Google的工程 师发布的GFS论文。 待 ？
	* TFS 
		TFS（Taobao FileSystem）是一个高可扩展、高可用、高性能、面向互联网服务的分布式文件系统，其设计目标是支持海量的非结构化数据。
		  

	zookeeper

4. 关于session管理
	单机tomcat如何管理session
	->tomcat集群session的管理
	->memcached对集群session的管理


 
5. webx3 maven构建时测试用例失败一例：

	I:\workspace\webx3-ali\citrus>mvn -Dgpg.skip clean install >> bak.txt
	查看mvn执行打印结果，分析错误原因
	位置：/citrus-service-resource/src/test/java/com/alibaba/citrus/service/resource/support/ByteArrayResourceTests.java
	方法：largeData
	
	str = str.replaceAll("\\r|\\n|\\r\\n", "\n");
	改为：
	str = str.replaceAll("\\r\\n|\\r|\\n", "\n");

	原因：
		回车符，换行符的区别，及其来由。
		参考：http://wenku.baidu.com/view/027657f5f61fb7360b4c65b4.html

	解决后，继续构建：

	After correcting the problems, you can resume the build with the command
	[ERROR]   mvn <goals> -rf :citrus-service-resource

	I:\workspace\webx3-ali\citrus>mvn clean install -rf:citrus-service-resource
 
	在
	[INFO] Citrus Mail Service ............................... FAILURE [15.984s]
	DEBUG: java.io.FileNotFoundException: E:\Program Files\Java\jdk1.6.0_10\jre\lib\javamail.providers (系统找不到指定的文件。)
	DEBUG: java.io.FileNotFoundException: E:\Program Files\Java\jdk1.6.0_10\jre\lib\javamail.address.map
	报错

	需要配置mail：
		


 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day5 2012年2月24日

1. nexus 
	Sonatype Nexus: Manage Artifacts

	Sonatype Nexus sets the standard for repository management providing development teams with the ability to proxy remote repositories 
	and share software artifacts. Download Nexus and gain control over open source consumption and internal collaboration.

	Nexus是Maven仓库管理器，用来搭建一个本地仓库服务器，这样做的好处是便于管理，节省网络资源，速度快，
	还有一个非常有用的功能就是可以通过项目的SNAPSHOT版本管理，来进行模块间的高效依赖开发，

	*  


2. web服务器目录列表，目录服务 directory listings

	Apache Tomcat 6.0
	Default Servlet Reference
	The default servlet is the servlet which serves static resources as well as serves the directory listings (if directory listings are enabled). 

	tomcat提供默认servlet来处理静态资源请求和目录列表服务(目录列表服务打开的情况下)

	比如上面提到的nexus就提供了目录列表服务，apache，淘宝开源等都提供此类目录列表访问。

	tomcat设置目录列表服务，目录服务：
		参考其自带文档 ，配置在 $CATALINA_BASE/conf/web.xml中，部分如下：
	
			-----
			...
			    <servlet>
				<servlet-name>default</servlet-name>
				<servlet-class>
				  org.apache.catalina.servlets.DefaultServlet
				</servlet-class>
				<init-param>
				    <param-name>debug</param-name>
				    <param-value>0</param-value>
				</init-param>
				<init-param>
				    <param-name>listings</param-name>
				    <param-value>true</param-value>
				</init-param>
				<load-on-startup>1</load-on-startup>
			    </servlet>

			...

			    <servlet-mapping>
				<servlet-name>default</servlet-name>
				<url-pattern>/</url-pattern>
			    </servlet-mapping>
			...
			-----

	具体配置方式：
		在tomcat的$CATALINA_BASE/conf/web.xml文件里，listing配置为true；
		随后访问对应的目录即可	
		
		对于目录列表显示页面样式即处理方式等，可以通过实现 DefaultServlet 的子类来定制

		注意：重写这个类时，避免拷贝重复的jar包，导致未知错误 比如 classcase不符不是其他原因的话很可能就是jar包冲突了。

		问题：
			servlet安全问题，参考servlet spe 关于安全的部分(tomcat文档有提示)

	
3. ~不要钻牛角尖~，在正确的前提下，去尝试变化，不要将希望寄托于一个错误的前提  【tip】

	也许思路都是对的，但就是疏忽了什么，这时候就需要意识到最小化测试，慢慢放大，解决问题。

4. myeclipse 运行于jdk配置

	在eclipse.ini文件中配置：
	-vm  
	C:\Progra~1\Java\jdk1.6.0_10\jre\bin\javaw

5. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day6 2012年2月27日

1. 了解taobao历史，from cnblogs


2. 提供帮助方案 ：多进程并发操作同一文件的同步问题 文件并发 进程并发
	方式一：jdk io api 的 File 类，提供了设置读取文件，读写属性的方式。通过判断读写属性，实现多进程并发操作。



3. 阅读 初探淘宝技术构架 
	(1) 对于会话无状态的分析

		对比淘宝网登陆前后cookie及其区别，分析会话无状态的控制方式，以利于应用的水平扩展
			* http://atpanel.com 域名指向淘宝 www.taobao.com
		

	

4. 了解 iserach ，先从java的开源搜索框架看起 比如 lucene ？  索引查询方式：全文检索，基于标记的检索（比如xml文档检索） 

eclipse就是用了lucene作为检索框架，体验

	实例：
		基于lucene检索框架，实现简易的检索模块，集成到mytestsvn项目中
		详见mytestsvn的readme文档。

5. java.lang.management   JMX   ？待
	java api提供的监测管理jvm及其所运行的系统。



6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day7 2012年2月28日

1. down



2. 继续在mytestsvn上测试ws
	
	参考spring的webservice部分(spring2.5 document p419)
		* rmi		
				RMI对服务器的IP地址和端口依赖很紧密，但是在开发的时候不知道将来的服务器IP和端口如何，但是客户端程序依赖这个IP和端口。
			这也是RMI的局限性之一。这个问题有两种解决途径：一是通过DNS来解决，二是通过封装将IP暴露到程序代码之外。
				RMI的局限性之二是RMI是Java语言的远程调用，两端的程序语言必须是Java实现，对于不同语言间的通讯可以考虑用Web Service或者公用对象请求代理
			体系（CORBA）来实现
		* hessian Hessian	
				是一个轻量级的remoting onhttp工具，使用简单的方法提供了RMI的功能. 相比WebService，Hessian更简单、快捷。采用的是二进制RPC协议，
			因为采用的是二进制协议，所以它很适合于发送二进制数据

	jax-ws java ee tutorial  p14




3. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day8 2012年2月29日

1.   Endorsed Standards Override Mechanism
	
	mytestsvn测试jax-ws

	改为获得腾讯QQ在线状态服务调用   

		技术：jax-ws ，及其支持的api，服务供应商提供运行时包等

		*  得到服务对应的WSDL文件(直接访问URL或者下载下来)
		* 利用IDE提供的插件，根据WSDL由上到下生成需要的客户端文件
		* 建立test类，测试服务调用
		* 测试调用服务通过(根据传入的qq号，返回其在线状态标识)
		
		注：测试时，碰到版本冲突问题 部分异常如下：
						java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/E:/Program%20Files/MyEclipse%206.5/myeclipse/eclipse/plugins/com.genuitec.eclipse.ws.xfire_6.5.0.zmyeclipse650200806/lib/webservices-rt.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar in the bootstrap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
				最后通过 sun的Endorsed Standards Override Mechanism机制解决新旧版本问题。(在javahome的lib或jre的lib下，建立endorse目录，并把最新的jar放到这里，加载时优先加载)
				
				


2. cxf webservice生成工具

	mkdir build\classes
	set classpath=%classpath%;%CXF_HOME%\lib\cxf-manifest.jar;.\build\classes
	javac -d build\classes src\demo\hw\client\*.java
	javac -d build\classes src\demo\hw\server\*.java


  3. 通过官方文档，测试简单的 JMX 用例 ?
	


  4. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day9 2012年3月1日

1. 用抓包工具(WireShark)分析mytestsvn中通过jax-ws调用qq在线状态调用请求过程
	
	交互过程如下：
		----------------
			GET /webservices/qqOnlineWebService.asmx?wsdl HTTP/1.1
			User-Agent: Java/1.6.0_10-rc2
			Host: www.webxml.com.cn
			Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
			Connection: keep-alive

			HTTP/1.1 200 OK
			Date: Thu, 01 Mar 2012 03:15:46 GMT
			Server: Microsoft-IIS/6.0
			X-Powered-By: ASP.NET
			X-AspNet-Version: 2.0.50727
			Cache-Control: private, max-age=0
			Content-Type: text/xml; charset=utf-8
			Content-Length: 8349

			<?xml version="1.0" encoding="utf-8"?>
			<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://WebXml.com.cn/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://WebXml.com.cn/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
			  <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;a href="http://www.webxml.com.cn/" target="_blank"&gt;WebXml.com.cn&lt;/a&gt; &lt;strong&gt;......QQ............ WEB ......&lt;/strong&gt;...&lt;a href="http://www.webxml.com.cn/" target="_blank"&gt;WebXml.com.cn&lt;/a&gt; .../..............................................................................................................................&lt;/br&gt;.........QQ............Web Services...................................................&lt;a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank"&gt;............&lt;/a&gt;........................ QQ...8409035&lt;br /&gt;&lt;strong&gt;............ WEB .................................http://www.webxml.com.cn/ .....................&lt;/strong&gt;...&lt;br /&gt;&lt;br /&gt;&amp;nbsp;</wsdl:documentation>
			  <wsdl:types>
			    <s:schema elementFormDefault="qualified" targetNamespace="http://WebXml.com.cn/">
			      <s:element name="qqCheckOnline">
				<s:complexType>
				  <s:sequence>
				    <s:element minOccurs="0" maxOccurs="1" name="qqCode" type="s:string" />
				  </s:sequence>
				</s:complexType>
			      </s:element>
			      <s:element name="qqCheckOnlineResponse">
				<s:complexType>
				  <s:sequence>
				    <s:element minOccurs="0" maxOccurs="1" name="qqCheckOnlineResult" type="s:string" />
				  </s:sequence>
				</s:complexType>
			      </s:element>
			      <s:element name="string" nillable="true" type="s:string" />
			    </s:schema>
			  </wsdl:types>
			  <wsdl:message name="qqCheckOnlineSoapIn">
			    <wsdl:part name="parameters" element="tns:qqCheckOnline" />
			  </wsdl:message>
			  <wsdl:message name="qqCheckOnlineSoapOut">
			    <wsdl:part name="parameters" element="tns:qqCheckOnlineResponse" />
			  </wsdl:message>
			  <wsdl:message name="qqCheckOnlineHttpGetIn">
			    <wsdl:part name="qqCode" type="s:string" />
			  </wsdl:message>
			  <wsdl:message name="qqCheckOnlineHttpGetOut">
			    <wsdl:part name="Body" element="tns:string" />
			  </wsdl:message>
			  <wsdl:message name="qqCheckOnlineHttpPostIn">
			    <wsdl:part name="qqCode" type="s:string" />
			  </wsdl:message>
			  <wsdl:message name="qqCheckOnlineHttpPostOut">
			    <wsdl:part name="Body" element="tns:string" />
			  </wsdl:message>
			  <wsdl:portType name="qqOnlineWebServiceSoap">
			    <wsdl:operation name="qqCheckOnline">
			      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;br /&gt;&lt;h3&gt;............QQ............&lt;/h3&gt;&lt;p&gt;...............QQ...... String.........QQ.........8698053..................String...Y = .........N = .........E = QQ...............A = ...........................V = ........................&lt;/p&gt;&lt;br /&gt;</wsdl:documentation>
			      <wsdl:input message="tns:qqCheckOnlineSoapIn" />
			      <wsdl:output message="tns:qqCheckOnlineSoapOut" />
			    </wsdl:operation>
			  </wsdl:portType>
			  <wsdl:portType name="qqOnlineWebServiceHttpGet">
			    <wsdl:operation name="qqCheckOnline">
			      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;br /&gt;&lt;h3&gt;............QQ............&lt;/h3&gt;&lt;p&gt;...............QQ...... String.........QQ.........8698053..................String...Y = .........N = .........E = QQ...............A = ...........................V = ........................&lt;/p&gt;&lt;br /&gt;</wsdl:documentation>
			      <wsdl:input message="tns:qqCheckOnlineHttpGetIn" />
			      <wsdl:output message="tns:qqCheckOnlineHttpGetOut" />
			    </wsdl:operation>
			  </wsdl:portType>
			  <wsdl:portType name="qqOnlineWebServiceHttpPost">
			    <wsdl:operation name="qqCheckOnline">
			      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;br /&gt;&lt;h3&gt;............QQ............&lt;/h3&gt;&lt;p&gt;...............QQ...... String.........QQ.........8698053..................String...Y = .........N = .........E = QQ...............A = ...........................V = ........................&lt;/p&gt;&lt;br /&gt;</wsdl:documentation>
			      <wsdl:input message="tns:qqCheckOnlineHttpPostIn" />
			      <wsdl:output message="tns:qqCheckOnlineHttpPostOut" />
			    </wsdl:operation>
			  </wsdl:portType>
			  <wsdl:binding name="qqOnlineWebServiceSoap" type="tns:qqOnlineWebServiceSoap">
			    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
			    <wsdl:operation name="qqCheckOnline">
			      <soap:operation soapAction="http://WebXml.com.cn/qqCheckOnline" style="document" />
			      <wsdl:input>
				<soap:body use="literal" />
			      </wsdl:input>
			      <wsdl:output>
				<soap:body use="literal" />
			      </wsdl:output>
			    </wsdl:operation>
			  </wsdl:binding>
			  <wsdl:binding name="qqOnlineWebServiceSoap12" type="tns:qqOnlineWebServiceSoap">
			    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
			    <wsdl:operation name="qqCheckOnline">
			      <soap12:operation soapAction="http://WebXml.com.cn/qqCheckOnline" style="document" />
			      <wsdl:input>
				<soap12:body use="literal" />
			      </wsdl:input>
			      <wsdl:output>
				<soap12:body use="literal" />
			      </wsdl:output>
			    </wsdl:operation>
			  </wsdl:binding>
			  <wsdl:binding name="qqOnlineWebServiceHttpGet" type="tns:qqOnlineWebServiceHttpGet">
			    <http:binding verb="GET" />
			    <wsdl:operation name="qqCheckOnline">
			      <http:operation location="/qqCheckOnline" />
			      <wsdl:input>
				<http:urlEncoded />
			      </wsdl:input>
			      <wsdl:output>
				<mime:mimeXml part="Body" />
			      </wsdl:output>
			    </wsdl:operation>
			  </wsdl:binding>
			  <wsdl:binding name="qqOnlineWebServiceHttpPost" type="tns:qqOnlineWebServiceHttpPost">
			    <http:binding verb="POST" />
			    <wsdl:operation name="qqCheckOnline">
			      <http:operation location="/qqCheckOnline" />
			      <wsdl:input>
				<mime:content type="application/x-www-form-urlencoded" />
			      </wsdl:input>
			      <wsdl:output>
				<mime:mimeXml part="Body" />
			      </wsdl:output>
			    </wsdl:operation>
			  </wsdl:binding>
			  <wsdl:service name="qqOnlineWebService">
			    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;a href="http://www.webxml.com.cn/" target="_blank"&gt;WebXml.com.cn&lt;/a&gt; &lt;strong&gt;......QQ............ WEB ......&lt;/strong&gt;...&lt;a href="http://www.webxml.com.cn/" target="_blank"&gt;WebXml.com.cn&lt;/a&gt; .../..............................................................................................................................&lt;/br&gt;.........QQ............Web Services...................................................&lt;a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank"&gt;............&lt;/a&gt;........................ QQ...8409035&lt;br /&gt;&lt;strong&gt;............ WEB .................................http://www.webxml.com.cn/ .....................&lt;/strong&gt;...&lt;br /&gt;&lt;br /&gt;&amp;nbsp;</wsdl:documentation>
			    <wsdl:port name="qqOnlineWebServiceSoap" binding="tns:qqOnlineWebServiceSoap">
			      <soap:address location="http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx" />
			    </wsdl:port>
			    <wsdl:port name="qqOnlineWebServiceSoap12" binding="tns:qqOnlineWebServiceSoap12">
			      <soap12:address location="http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx" />
			    </wsdl:port>
			    <wsdl:port name="qqOnlineWebServiceHttpGet" binding="tns:qqOnlineWebServiceHttpGet">
			      <http:address location="http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx" />
			    </wsdl:port>
			    <wsdl:port name="qqOnlineWebServiceHttpPost" binding="tns:qqOnlineWebServiceHttpPost">
			      <http:address location="http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx" />
			    </wsdl:port>
			  </wsdl:service>
			</wsdl:definitions>
			
			POST /webservices/qqOnlineWebService.asmx HTTP/1.1
			SOAPAction: "http://WebXml.com.cn/qqCheckOnline"
			Accept: text/xml, multipart/related, text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2
			Content-Type: text/xml;charset="utf-8"
			User-Agent: JAX-WS RI 2.1.3-hudson-390-
			Host: www.webxml.com.cn
			Connection: keep-alive
			Content-Length: 203

			<?xml version="1.0" ?><S:Envelope xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><S:Body><qqCheckOnline xmlns="http://WebXml.com.cn/"><qqCode>516610260</qqCode></qqCheckOnline></S:Body></S:Envelope>
			
			HTTP/1.1 200 OK
			Date: Thu, 01 Mar 2012 03:15:46 GMT
			Server: Microsoft-IIS/6.0
			X-Powered-By: ASP.NET
			X-AspNet-Version: 2.0.50727
			Cache-Control: private, max-age=0
			Content-Type: text/xml; charset=utf-8
			Content-Length: 367

			<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><soap:Body><qqCheckOnlineResponse xmlns="http://WebXml.com.cn/"><qqCheckOnlineResult>N</qqCheckOnlineResult></qqCheckOnlineResponse></soap:Body></soap:Envelope>
		----------------

		分析上面的网络包内容，过程如下：
			* client以get 方式请求服务的URL
			* server返回xml格式的wsdl内容
			* client根据wsdl定义请求 SOAPAction: "http://WebXml.com.cn/qqCheckOnline" 并根据要求的xml格式包装请求内容
			* server返回xml格式的请求结果


2. svn 文件冲突解决办法之一 提交冲突
	例子:
		在svn服务器上误删了某些文件或者文件夹，本地库是在svn服务器删除之前checkout出来的，其svn信息里包含了服务器删除文件或者目录信息，
	此时去更新或者删除了本地的再去更新，本地svn信息里都有被删除文件或者文件夹信息，但服务器上没有了，导致不能提交或者更新。

	解决方式：
		把svn最新的checkout出来，然后把误删的文件放进去，这样svn就认为这是新增的文件或者文件夹，可以顺利提交。


	eclipse 工程识别问题 ，不能导入为web项目，可以拷贝一份web项目的ide配置文件过去，修改项目独立的部分 【ide项目导入】

3. Java debug 不能debug
	不能debug java的api的原因：
	报错：unable to install breakpoint 
	提示由于编译器对代码编译时，没有生成debug时需要的行号，导致不能debug
		本人遇到的就是用了单独的jre不是jdk下面的jre出现上面的问题，换为jdk目录下的jre即可。
	下面是其他情况导致的这类问题，便于参考：http://blog.csdn.net/liu251/article/details/3639160

4. java 汉字转unicode ，其他字符转unicode
	字符转Unicode编码，解决部分乱码问题
	
	参考java api的Properties类中 saveConvert,loadconvert方法，jdk没有显式提供字符转Unicode编码的方式。
		

5. 文件编码判断 java判断编码 

	参考：http://www.iteye.com/problems/38793

6. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day10 2012年3月2日

1. 复习linux

	* 开发环境
	* 常用命令
		编辑
		文件操作
		网络操作
		...
	* shell(一个脚本解释器，和内核交互，达成目标)

2. servlet并发方案

3. tomcat 等web服务器安全配置相关 ？ ssl https
	* 安全连接配置 
	* 


4. tomcat分析 ? doing
	 
	启动入口(bat)：
		start "Tomcat" "E:\Program Files\Java\jre6\bin\java"  -Djava.util.logging.config.file="E:\Program Files\apache-tomcat-6.0.35\conf\logging.properties" -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager   -Djava.endorsed.dirs="E:\Program Files\apache-tomcat-6.0.35\endorsed" -classpath "E:\Program Files\apache-tomcat-6.0.35\bin\bootstrap.jar" -Dcatalina.base="E:\Program Files\apache-tomcat-6.0.35" -Dcatalina.home="E:\Program Files\apache-tomcat-6.0.35" -Djava.io.tmpdir="E:\Program Files\apache-tomcat-6.0.35\temp" org.apache.catalina.startup.Bootstrap  start 

	cmd 命令start开启新窗口运行 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day11 2012年3月5日

1. mat myeclipse内存分析工具
	
	The Memory Analyzer works with heap dumps . Such a heap dump contains information about all Java objects alive at a given point in time. 
	All current Java Virtual Machines can write heap dumps, but the exact steps depend on vendor, version and operation system. Find out more in the section Acquiring Heap Dumps . 

	dump配置：
		-XX:+HeapDumpOnOutOfMemoryError
		-Xms30m -Xmx256m
		
		-XX:+HeapDumpOnOutOfMemoryError -Xms10m -Xmx10m

		myeclipse dump文件在project的根目录下。

	* dump堆
	* mat打开分析

	下载mat stand-alone版
	
	eclipse插件整理 ？

	
2. 



3. 自动化运维 ?

4. 开源社区 思考 社区服务 wiki
	一个开源产品，配套一个产品社区(forum)，
	
	问题，方案都有一个统一的交流平台。
		eclipse
		myeclipse
		nginx
		...

5. linux
* 虚拟机安装时，硬盘类型选择IDE类型，否则可能不能识别
* 关于中文等非拉丁文乱码问题，原因是缺少相应字体等组件，可以在增加/删除组件的菜单里安装相应支持包
* 软件安装编译时，会由于系统日期错误导致安装失败 (系统会提示错误，看仔细即可)
*  文件安装 ：
	- 解压
	- ./configure
	- make
	-make install


* 通过linux下的ntfs驱动ntfs-3g，linux可以读写ntfs分区
	NTFS-3G is a stable,full-featured.read-write NTFS driver for Linux.

	- download
	- installation
		./configure
		make
		make install
	- usage
		mount -t ntfs-3g /dev/sda7 /usr/mount

		//make NTFS to be mounted during boot by adding the following line to the end of the /etc/fstab file 系统启动自动挂载
			/dev/sda7 /usr/mount ntfs-3g defaults 0 0


fdisk -l 显示可以挂载的设备 (系统已识别的设备)

clear

.tar.gz
	
.rpm
	>cp linuxqq.rpm /usr/qqlinux
	>rpm -i linuxqq.rpm
	>qq

cat |more  分页 分页可以再命令后加上 |more 实现

查找软件包 ：
	rpm -qa >> /home/rpminfo 
	cat /home/rpminfo | more 
	
	grep -n openjdk /home/rpminfo
		

	rpm -ql  java-1.6.0-openjdk-1.6.0.0-1.16.b17.el5 —— 查询该套件所有的目录

	卸载旧的或者已有的rpm包：

	  比如卸载centos5自带的openjdk ：rpm -e --nodeps xxxxx   // 忽视依赖强制卸载


find / 'openjdk'

ifconfig #查看网络信息

文件内容查找：

 grep -n 'the' 123.txt     搜索the字符 -----------搜尋特定字串       
 grep -n 't[ea]st' 123.txt    搜索test或taste两个字符---------利用 [] 來搜尋集合字元
 grep -n '[^g]oo' 123.txt     搜索前面不为g的oo-----------向選擇 [^] 
 grep -n '[0-9]' 123.txt  搜索有0-9的数字
 grep -n '^the' 123.txt 搜索以the为行首-----------行首搜索^
 grep -n '^[^a-zA-Z]' 123.txt  搜索不以英文字母开头
 grep -n '[a-z]$' 123.txt    搜索以a-z结尾的行---------- 行尾搜索$
 grep -n 'g..d' 123.txt     搜索开头g结尾d字符----------任意一個字元 . 
 grep -n 'ooo*' 123.txt     搜索至少有两个oo的字符---------重複字元 *

mkdir     创建文件夹  
	mkdir -p /usr/dat.txt  # -p 参数表示如果上级目录不存在则创建	

shell脚本 ：
	我们可以使用任意一种文字编辑器，比如gedit、kedit、emacs、vi等来编写shell脚本，它必须以如下行开始（必须放在文件的第一行）：

	# !/bin/sh
	注意：最好使用“!/bin/bash”而不是“!/bin/sh”，如果使用tc shell改为tcsh，其他类似。

	符号#!用来告诉系统执行该脚本的程序，本例使用/bin/sh。编辑结束并保存后，如果要执行该脚本，必须先使其可执行：

	chmod +x filename

	此后在该脚本所在目录下，输入 ./filename 即可执行该脚本。


mv log logs #通过mv命令重命名目录或者文件

rmdir logs 删除目录

bash下，java环境 设置JAVA_HOME ,JRE_HOME,PATH
	解压tomcat binary包，./startup.sh 其他，如果报文件不能创建(eg logs dir)，手动创建即可。

	如果为源码包，需要手动编译：

ps -ef | grep nginx

kill -HUP pid

6. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day12 2012年3月6日

1. ssl
	
	参考 day97第1条


*	tomcat doc - General Tips on Running SSL:
		Finally, using name-based virtual hosts on a secured connection can be **problematic**. This is a design limitation of the SSL protocol itself. The SSL handshake, where the client browser 
		accepts the server certificate, must occur before the HTTP request is accessed. As a result, the request information containing the virtual host name cannot be determined prior to authentication,
		and it is therefore not possible to assign multiple certificates to a single IP address. If all virtual hosts on a single IP address need to authenticate against the same certificate, the addition of multiple
		virtual hosts should not interfere with normal SSL operations on the server. Be aware, however, that most client browsers will compare the server's domain name against the domain name listed in
		the certificate, if any (applicable primarily to official, CA-signed certificates). If the domain names do not match, these browsers will display a warning to the client user. In general, only 
		address-based  virtual hosts are commonly used with SSL in a production environment.


*	Edit the Tomcat Configuration File

    Tomcat can use two different implementations of SSL:  (Tomcat支持2种SSL实现类型)

        the JSSE implementation provided as part of the Java runtime (since 1.4)
        the APR implementation, which uses the OpenSSL engine by default.


	tomcat默认为JSSE的实现：
		- 利用jdk工具 keytool 生成证书 (可生成在用户目录下，也可生成时指定到tomcat的conf目录下，生成后不能移动否则提示证书被篡改)
		- 配置 conf/server.xml:
				 <Connector 
					   port="8443" maxThreads="200"
					   scheme="https" secure="true" SSLEnabled="true"
					   keystoreFile="${user.home}\.keystore" keystorePass="feitian"
					   clientAuth="false" sslProtocol="TLS"/>			
		- 其他tomcat访问 localhost:8443 即可

	注：tomcat doc 说明：ssl对性能开销大，应该只对必要的请求在ssl之上访问

	ssl connection connector 的阻塞与非阻塞(NIO)

	

2. problematic problem /care carefull carefully
	语法

3. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day13 2012年3月7日

1. centos 配置 vpn，连接myeclipse官网下载

	centos5 + nginx + tomcat + ssl  搭建
	
	nginx作为反向代理服务器处理请求，apache等后台服务器只接受本地请求(也是安全性考虑)：

		Accepting local requests only
			There are many ways you can restrict Apache to accept only local requests, denying access to the outside world. But first, why would you want to do that? 
		As an extra layer positioned between the client and Apache, Nginx provides a certain comfort in terms of security. Visitors no longer have direct access to Apache, 
		which decreases the potential risk regarding all security issues the web server may have. Globally,
			it's not necessarily a bad idea to only allow access to your frontend server.
		——摘自：Nginx HTTP Server p232

	实现本地访问方式，比如通过系统ip及端口过滤，阻止外网访问；或者就是自身有此配置模块等等

	tomcat doc 提供如下方式：
		   - Configure another <Service> that contains only a <Connector> for the proxy port.
		   - Configure appropriate Engine, Host, and Context elements for the virtual hosts and web applications accessible via proxying.
		   - Optionally, protect port 8081 with IP filters as described earlier.

	Nginx:
		配置文件正确性验证：
			nginx -t -c path/nginx.conf
		重启
			ps -ef | grep nginx
			kill -HUP pid
			
			...
			location / {
				root /home/public/tomcat/apache-tomcat-6.0.35/webapps/examples; #配置根目录
				index index.html index.htm;
			}
			...
			location ~ \.jsp$ {
				proxy_pass http://127.0.0.1:8080; # 对jsp请求交给tomcat处理
			}
			location ~ {
				proxy_pass http://127.0.0.1:8080; # 对servlet请求交给tomcat处理
			}
	linux windows交互 ，http服务方式(当做http资源 ) ，ssh etc.
			

2. 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day14 2012年3月8日

1.  performance tests - web服务器性能测试 测试工具

		We have retained three tools to evaluate the server performance here. All three applications were specifically designed for load tests on web servers and have 
	different approaches due to their origin:
		* httperf: A relatively well-known open source utility developed by HP, for Linux operating systems only
		* Autobench: Perl wrapper for httperf improving the testing mechanisms and generating detailed reports
		* OpenWebLoad: Smaller scale open source load testing application; supports both Windows and Linux platforms
	The principle behind each of these tools is to generate a massive amount of HTTP requests in order to clutter the server and study the results.
	
	*
	Httperf
		Httperf is a simple command-line tool that can be downloaded from its official website: http://www.hpl.hp.com/research/linux/httperf/. The source comes as a tar.gz archive and 
	needs to be compiled using the standard method: ./configure, make and make install. Once installed, you may execute the following command:
	[alex@example ~]$ httperf --server 192.168.1.10 --port 80 --uri /index.html --rate 300 --num-conn 30000 --num-call 1 --timeout 5
	Replace the values in the command above with your own:
	--server: The website hostname you wish to test
	--uri: The path of the file that will be downloaded
	--rate: How many requests should be sent every second
	--num-conn: The total amount of connections
	--num-call: How many requests should be sent per connection
	--timeout: Quantity of seconds elapsed before a request is considered lost
	In this example, httperf will download http://192.168.1.10/index.html repeatedly, 300 times per second, resulting in a total of 30,000 requests.
	
		The results indicate the response times and the amount of successful requests. If the success ratio is 100 percent or the response time near 0 ms, increase the request rate and run the
	test again until the server shows signs of weakness. Once the results begin to look a little less perfect, tweak the appropriate configuration directives and run the test again.

	*
	Autobench
		Autobench is a Perl script that makes use of httperf more efficiently—it runs continuous tests and automatically increases request rates until your server gets saturated. One of the
	interesting features of Autobench is that it generates a .tsv report that you can open with various applications to generate graphs. You may download the source code from the 
	author's personal website: http://www.xenoclast.org/autobench/. Once again, extract the files from the archive, run
	make then make install.
	Although it supports testing of multiple hosts at once, we will only be using the single host test for more simplicity. The command we will execute resembles the httperf one:
	[alex@example ~]$ autobench --single_host --host1 192.168.1.10 --uri1 /index.html --quiet --low_rate 20 --high_rate 200 --rate_step 20 --num_call 10 --num_conn 5000 --timeout 5 --file results.tsv
	The switches can be configured as follows:
	--host1: The website host name you wish to test.
	--uri1: The path of the file that will be downloaded.
	--quiet: Does not display httperf information on the screen.
	--low_rate: Connections per second at the beginning of the test.
	--high_rate: Connections per second at the end of the test.
	--rate_step: The number of connections to increase the rate by after
	each test.
	--num_call: How many requests should be sent per connection.
	--num_conn: Total amount of connections.
	--timeout: The number of seconds elapsed before a request is
	considered lost.
	--file: Export results as specified (.tsv file).
	Once the test terminates, you end up with a .tsv file that you can import in applications such as Microsoft Excel. Here is a graph generated from results
	on a test server (note that the report file contains up to 10 series of statistics):
		As you can tell from the graph, this test server supports up to 600 requests per second without a loss. Past this limit, some connections get dropped as Nginx cannot handle the load. 
	It stills gets up to over 1,500 successful requests per second at step 9.

	*
	OpenWebLoad
		OpenWebLoad is a free open source application. It is available for both Linux and Windows platforms and was developed in the early 2000s, back in the days of Web 1.0. 
	A different approach is offered here—instead of throwing loads of requests
	at the server and seeing how many are handled correctly, it will simply send as many requests as possible using a variable amount of connections and report to
	you every second.
	You may download it from its official website: http://openwebload.sourceforge.net. Extract the source from the .tar.gz archive, run./configure, make and make install.

	Its usage is simpler than the previous two utilities:
	[alex@example ~]$ openload example.com/index.html 10
	The first argument is the URL of the website you want to test. The second one is the amount of connections that should be opened.

	A new result line is produced every second. Requests are sent continuously until you press the Enter key, following which, a result summary is displayed. Here is how to decipher the output:
	Tps (transactions per second): A transaction corresponds to a completed request (back and forth)
	MaTps: Average Tps over the last 20 seconds
	Resp Time: Average response time for the elapsed second
	Err (error rate): Errors occur when the server returns a response that is not the expected HTTP 200 OK
	Count: Total transaction count
	You can fiddle with the amount of simultaneous connections and see how your server performs in order to establish a balanced configuration for your setup.
	Three tests were run here with a different amount of connections. The results

	speak for themselves:	Simultaneous connections		Transactions per second (Tps)		Average response time
	Test 1				1						67.54						14 ms
	Test 2				20						205.87						91 ms
	Test 3				1000					185.07						596 ms
		
		Too few connections result in a low Tps rate; however, the response times are optimal. Too many connections produce a relatively high Tps, but the response
	times are critically high. You thus need to find a happy medium.
	
	
	
	
	
	
	
	
	
	

	from: Nginx HTTP Server p100

	httperf 测试：
		* download  source package xxx.tar.gz
		* extract the package
		* to dir then 
			./configure
			make
			make install

		参阅工具说明使用
			eg. httperf --hog --server www --num-comm 100 --ra 10 --tomeout 5
		

2. nginx + tomcat 集群

	* tomcat集群配置
		
	* nginx配置


3. hashcode 和 equals方法
	hashcode方法存在的理由
	重写equals为什么需要重写hashcode方法
	hashcode和java集合的关系 
		集合里添加不重复对象，如果通过地址比较，数据量一大那效率太低了，于是牵扯到哈希
	
4. 




+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day15 2012年3月12日

1. java 线程复习
	
	ThreadLocal 的应用
		*　hibernate 的session的存放就是在线程的 ThreadLocal 对象中
			　hibernate取得当前线程使用的session，如果为空则新建并存入threadlocal上下文中供当前线程调用：

					public class HibernateUtil {  
					           public static final SessionFactory sessionFactory;  
					           static {  
					               try {  
					                     sessionFactory = new Configuration().configure()  
					                                       .buildSessionFactory();  
					               } catch (Throwable ex) {  
					                    throw new ExceptionInInitializerError(ex);  
					               }  
					          }  
					          public static final ThreadLocal session =   new ThreadLocal();  
					          public static Session currentSession() throws HibernateException {  
					                  Session s = session.get();  //这里的Session就是jdbc的session了
					                  if(s == null) {  
					                        s = sessionFactory.openSession();  
					                        session.set(s);  
					                  }  
					                  return s;  
					          }  
					          public static void closeSession() throws HibernateException {  
					                   Session s = session.get();  
					                   if(s != null) {  
					                         s.close();  
					                   }  
					                   session.set(null);  
					          }  
					   }  				
			下面是hibernate的部分源码：
				ThreadLocalSessionContext
					package org.hibernate.context;
					...
					public class ThreadLocalSessionContext implements CurrentSessionContext {
					...
					private static final ThreadLocal context = new ThreadLocal();

					private static Session existingSession(SessionFactory factory) {
						Map sessionMap = sessionMap();
						if ( sessionMap == null ) {
							return null;
						}
						else {
							return ( Session ) sessionMap.get( factory );
						}
					}

					protected static Map sessionMap() {
						return ( Map ) context.get();
					}	
					...
		*　

	threadLocal关闭，thread类关闭前执行资源释放：
	    private void exit() {
		if (group != null) {
		    group.remove(this);
		    group = null;
		}
		/* Aggressively null out all reference fields: see bug 4006245 */
		target = null;
		/* Speed the release of some of these resources */
		threadLocals = null;
		inheritableThreadLocals = null;
		inheritedAccessControlContext = null;
		blocker = null;
		uncaughtExceptionHandler = null;
	    }

	Thread类 threadLocals 的初始化，Thread绑定的threadLocals对象在  ThreadLocal 的操作里初始化

	ThreadLocal ：
		    public T get() {
			Thread t = Thread.currentThread();
			ThreadLocalMap map = getMap(t);
			if (map != null) {
			    ThreadLocalMap.Entry e = map.getEntry(this);
			    if (e != null)
				return (T)e.value;
			}
			return setInitialValue();// 如果没有绑定 ThreadLocal 到当前线程则初始化绑定
		    }

		    private T setInitialValue() {
			T value = initialValue();
			Thread t = Thread.currentThread();
			ThreadLocalMap map = getMap(t);
			if (map != null)
			    map.set(this, value);
			else
			    createMap(t, value);
			return value;
		    }

		    ThreadLocalMap getMap(Thread t) {
			return t.threadLocals;
		    }

		    void createMap(Thread t, T firstValue) {
			t.threadLocals = new ThreadLocalMap(this, firstValue);
		    }


2. java安全机制

	securitymanager

	安全框架 shiro


3. java 日志设计
	log4j 实现
	commom log tool 接口
	slf4j 接口
	jdk1.4 实现

4. 分布式 存储 了解
	http://www.cnblogs.com/daizhj/archive/2010/09/08/1821481.html


5. taobao电话 基础为主 



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day16 2012年3月13日

1. 基础复习
	
	参考mytestsvn的测试代码

	所有基本类型对应类对象只能这样获取:
		Class c3 = Integer.TYPE;

	集合框架 collections arrays

	位运算

	多线程

	反射
	
	类的加载
		加载——》连接(又分为：验证->准备->解析)——》初始化
		类加载器加载好后，就是把.class文件中的二进制数据读入到内存中，存放在运行时数据区的方法区内，
		然后在堆区创建一个java.lang.Class对象，用来封装类在方法区内的数据结构。

		类的验证主要包括以下内容：
			* 类文件的结构检查：确保类文件遵从java类文件的固定格式
			* 语义检查：确保类本身符合java语言的语法规定，比如验证final类型的类没有子类，以及final类型的方法没有被覆盖
			* 字节码验证：确保字节码流可以被java虚拟机安全的执行。字节码流代表java方法(包括静态方法和动态方法)，它是
			由被称做操作码的单字节指令组成的序列，每一个操作码后都跟着一个或多个操作数。字节码验证步骤会检查每个
			操作码是否合法，即是否有着合法的操作数。
			* 二进制兼容的验证：确保相互引用的类之间协调一致。比如类间相互调用方法是否存在且正确等。
		类的准备：
			在准备阶段，java虚拟机为类的静态变量分配内存，并设置默认的初始值：比如对某个类的int类型静态变量a分配4个字节的内存
			空间，并赋予默认值0；为long类型的静态变量b分配8个字节的内存空间，并赋予默认值0.
		类的解析：
			在解析阶段，java vm 会把类的二进制数据中的符号引用替换为直接引用。例如在Worker类的gotoWork()方法中会引用Car类的run()方法。
				public void gotoWork(){
					car.run();//这段代码在Worker类的二进制数据中表示为符号引用
				}
			在Worker类的二进制数据中，包含了一个对Car类的run()方法的符号引用，它由run()方法的全名和相关描述符组成。在解析阶段，java vm会把
			这个符号引用替换为一个指针，该指针指向Car类的run()方法在方法区的内存位置。这个指针就是直接引用。
		类的初始化：
			初始化阶段，java vm执行类的初始化语句，为类的静态变量赋予初始值。


	jdbc driver：jdbc驱动自动注册
		Whena Driver class is loaded, it should create an instance of itself andregister it with the DriverManager 
		哦，原来是com.mysql.jdbc.Driver在装载完后自动帮我们完成了这一步骤。源代码是这样的：
		packagecom.mysql.jdbc
		 
		publicclass Driver extends NonRegisteringDriver implements java.sql.Driver{ 
		static{
		try{
		java.sql.DriverManager.registerDriver(newDriver());
		}catch (SQLException E) {
		thrownew RuntimeException("Can't register driver!");
		}
		}
		 
		publicDriver() throws SQLException {
		//Required for Class.forName().newInstance() 
		}
		}
	
	tarena资料

2. 


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
day17 2012年3月14日

1. review 
	设计模式 
		设计模式：java语言中的应用
			如：
				装饰器模式(Decorator)
				适配器模式(Adapter patten 又称 Wrapper patten)
					* 具有填平“既有内容”和“需要结果”两者间“落差”的设计模式
					* 实现方式有2类：
						- 类的(继承)
						- 对象的(委托)

				迭代器模式(Iterator patten)
				策略模式(Strategy patten)
				桥接模式(Bridge patten)
				...
			学习模式，可以结合实际模式的应用来理解和把握，并恰当的运用到实际开发中。比如jdk api的io中流的转换用到装饰器模式，避开了继承实现
			流的转换，便于各个场合操作相应类型的流。【tip】


2. 


add

>>>>
Java字符串转换为日期和时间比较大小 
方法一： 

DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd"); 
String dateBegin=fmt.format(carrierCommand.getDateBegin()); 
String dateEnd=fmt.format(carrierCommand.getDateEnd()); 
//如果获得的日期格式不是'2008-05-22',就必须要格式化一下日期 
String dateBegin = request.getParameter("dateBegin"); 
String dateEnd = request.getParameter("dateEnd"); 
if(java.sql.Date.valueOf(dateBegin).after(java.sql.Date.valueOf(dateEnd))){ 
//起始日期大于结束日期 
errors.rejectValue("dateEnd", null, "起始日期必须小于结束日期!"); 
} 
StringBuffer timeBegin = new StringBuffer(); 
StringBuffer timeEnd = new StringBuffer(); 
timeBegin.append(request.getParameter("timeBegin")); 
timeEnd.append(request.getParameter("timeEnd")); 
timeBegin.append(":00"); 
timeEnd.append(":00"); 
if(java.sql.Date.valueOf(dateBegin).equals(java.sql.Date.valueOf(dateEnd))) 
{ //起始日期等于结束日期 
if(java.sql.Time.valueOf(timeBegin.toString()).equals(java.sql.Time.valueOf 
(timeEnd.toString())))//时间相同 
{ 
errors.rejectValue("timeEnd", null, "起始与结束日期相同,起始时间必须小于结束时间!"); 
} 
if(java.sql.Time.valueOf(timeBegin.toString()).after(java.sql.Time.valueOf 
(timeEnd.toString())))//时间相同 
{ 
errors.rejectValue("timeEnd", null, "起始与结束日期相同,起始时间必须小于结束时间!"); 
} 
} 

方法二： 

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date; 
/**
*
* @author hp
*/
public class test {
public static void main(String args[]) {
int i= compare_date("1995-11-12 15:21", "1999-12-11 09:59");
System.out.println("i=="+i);
}
public static int compare_date(String DATE1, String DATE2) {
DateFormat df = new SimpleDateFormat("yyyy-MM-dd hh:mm");
try {
Date dt1 = df.parse(DATE1);
Date dt2 = df.parse(DATE2);
if (dt1.getTime() > dt2.getTime()) {
System.out.println("dt1 在dt2前");
return 1;
} else if (dt1.getTime() < dt2.getTime()) {
System.out.println("dt1在dt2后");
return -1;
} else {
return 0;
}
} catch (Exception exception) {
exception.printStackTrace();
}
return 0;
}
} 

方法三：
比如：现在是2004-03-26 13：31：40
过去是：2004-01-02 11：30：24
我现在要获得两个日期差，差的形式为：XX天XX小时XX分XX秒
java计算时间差及比较时间大小
比如：现在是2004-03-26 13：31：40
过去是：2004-01-02 11：30：24
我现在要获得两个日期差，差的形式为：XX天XX小时XX分XX秒
一： 

DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
try
{
Date d1 = df.parse("2004-03-26 13:31:40");
Date d2 = df.parse("2004-01-02 11:30:24");
long diff = d1.getTime() - d2.getTime();
long days = diff / (1000 * 60 * 60 * 24);
}
catch (Exception e)
{
} 

二： 

SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
java.util.Date now = df.parse("2004-03-26 13:31:40");
java.util.Date date=df.parse("2004-01-02 11:30:24");
long l=now.getTime()-date.getTime();
long day=l/(24*60*60*1000);
long hour=(l/(60*60*1000)-day*24);
long min=((l/(60*1000))-day*24*60-hour*60);
long s=(l/1000-day*24*60*60-hour*60*60-min*60);
System.out.println(""+day+"天"+hour+"小时"+min+"分"+s+"秒"); 

三： 

SimpleDateFormat dfs = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
java.util.Date begin=dfs.parse("2004-01-02 11:30:24");
java.util.Date end = dfs.parse("2004-03-26 13:31:40");
long between=(end.getTime()-begin.getTime())/1000;//除以1000是为了转换成秒
long day1=between/(24*3600);
long hour1=between%(24*3600)/3600;
long minute1=between%3600/60;
long second1=between%60/60;
System.out.println(""+day1+"天"+hour1+"小时"+minute1+"分"+second1+"秒"); 

====================================================
java 比较时间大小 

String s1="2008-01-25 09:12:09";
String s2="2008-01-29 09:12:11";
java.text.DateFormat df=new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
java.util.Calendar c1=java.util.Calendar.getInstance();
java.util.Calendar c2=java.util.Calendar.getInstance();
try
{
c1.setTime(df.parse(s1));
c2.setTime(df.parse(s2));
}catch(java.text.ParseException e){
System.err.println("格式不正确");
}
int result=c1.compareTo(c2);
if(result==0)
System.out.println("c1相等c2");
else if(result<0)
System.out.println("c1小于c2");
else
System.out.println("c1大于c2");

>>>